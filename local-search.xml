<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>字典树</title>
    <link href="/2023/02/24/%E5%AD%97%E5%85%B8%E6%A0%91/"/>
    <url>/2023/02/24/%E5%AD%97%E5%85%B8%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<h1 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h1><p>板子</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">trie</span> &#123;<br>  <span class="hljs-type">int</span> nex[<span class="hljs-number">100000</span>][<span class="hljs-number">26</span>], cnt;<br>  <span class="hljs-type">bool</span> exist[<span class="hljs-number">100000</span>];  <span class="hljs-comment">// 该结点结尾的字符串是否存在</span><br><br>  <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">insert</span><span class="hljs-params">(<span class="hljs-type">char</span> *s, <span class="hljs-type">int</span> l)</span> </span>&#123;  <span class="hljs-comment">// 插入字符串</span><br>    <span class="hljs-type">int</span> p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; l; i++) &#123;<br>      <span class="hljs-type">int</span> c = s[i] - <span class="hljs-string">&#x27;a&#x27;</span>;<br>      <span class="hljs-keyword">if</span> (!nex[p][c]) nex[p][c] = ++cnt;  <span class="hljs-comment">// 如果没有，就添加结点</span><br>      p = nex[p][c];<br>    &#125;<br>    exist[p] = <span class="hljs-number">1</span>;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-type">char</span> *s, <span class="hljs-type">int</span> l)</span> </span>&#123;  <span class="hljs-comment">// 查找字符串</span><br>    <span class="hljs-type">int</span> p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; l; i++) &#123;<br>      <span class="hljs-type">int</span> c = s[i] - <span class="hljs-string">&#x27;a&#x27;</span>;<br>      <span class="hljs-keyword">if</span> (!nex[p][c]) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>      p = nex[p][c];<br>    &#125;<br>    <span class="hljs-keyword">return</span> exist[p];<br>  &#125;<br>&#125;;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>字符串hash</title>
    <link href="/2023/02/23/%E5%AD%97%E7%AC%A6%E4%B8%B2hash/"/>
    <url>/2023/02/23/%E5%AD%97%E7%AC%A6%E4%B8%B2hash/</url>
    
    <content type="html"><![CDATA[<h1 id="字符串hash"><a href="#字符串hash" class="headerlink" title="字符串hash"></a>字符串hash</h1><p>用前缀和与hash函数确定hash值</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs prolog">struct <span class="hljs-symbol">StringHash</span> &#123;<br>    char s[maxn];<br>    ull h[maxn];<br>    ull p[maxn];<br>    int sz=<span class="hljs-number">0</span>;<br>    ull geth(int l, int r) &#123;<br>        return (h[r] - (h[l - <span class="hljs-number">1</span>] * p[r - l + <span class="hljs-number">1</span>])<span class="hljs-comment">%mod+mod)%mod;</span><br>    &#125;<br>    void extends(char op)&#123;<br>        s[++sz]=op;<br>        h[sz]=(h[sz<span class="hljs-number">-1</span>]*<span class="hljs-number">131</span><span class="hljs-comment">%mod+op)%mod;</span><br>        p[sz]=p[sz<span class="hljs-number">-1</span>]*<span class="hljs-number">131</span><span class="hljs-comment">%mod;</span><br>    &#125;<br>    void init()&#123;<br>        sz=<span class="hljs-number">0</span>;<br>        p[sz]=<span class="hljs-number">1</span>;<br>        h[sz]=<span class="hljs-number">0</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p><a href="https://codeforces.com/contest/1200/problem/E">E - Compress Words </a></p><p>单哈希可能会有问题</p><p>单哈希</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e6</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">998244353</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ull;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">StringHash</span> &#123;<br>    <span class="hljs-type">char</span> s[maxn];<br>    ull h[maxn];<br>    ull p[maxn];<br>    <span class="hljs-type">int</span> sz=<span class="hljs-number">0</span>;<br>    <span class="hljs-function">ull <span class="hljs-title">geth</span><span class="hljs-params">(<span class="hljs-type">int</span> l, <span class="hljs-type">int</span> r)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> (h[r] - (h[l - <span class="hljs-number">1</span>] * p[r - l + <span class="hljs-number">1</span>])%mod+mod)%mod;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">extends</span><span class="hljs-params">(<span class="hljs-type">char</span> op)</span></span>&#123;<br>        s[++sz]=op;<br>        h[sz]=(h[sz<span class="hljs-number">-1</span>]*<span class="hljs-number">131</span>%mod+op)%mod;<br>        p[sz]=p[sz<span class="hljs-number">-1</span>]*<span class="hljs-number">131</span>%mod;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>        sz=<span class="hljs-number">0</span>;<br>        p[sz]=<span class="hljs-number">1</span>;<br>        h[sz]=<span class="hljs-number">0</span>;<br>    &#125;<br>&#125;;<br>StringHash s,t;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    s.<span class="hljs-built_in">init</span>();<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        string ss;<br>        cin&gt;&gt;ss;<br>        t.<span class="hljs-built_in">init</span>();<br>        <span class="hljs-type">int</span> tas=<span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> len=ss.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> j:ss)t.<span class="hljs-built_in">extends</span>(j);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-built_in">min</span>(s.sz,len);j&gt;=<span class="hljs-number">1</span>;j--)&#123;<br><span class="hljs-comment">//           cout&lt;&lt;j&lt;&lt;&quot; &quot; &lt;&lt;s.geth(s.sz-j+1,s.sz)&lt;&lt;&quot; &quot;&lt;&lt;t.geth(1,j)&lt;&lt;endl;</span><br>            <span class="hljs-keyword">if</span>(s.<span class="hljs-built_in">geth</span>(s.sz-j+<span class="hljs-number">1</span>,s.sz)==t.<span class="hljs-built_in">geth</span>(<span class="hljs-number">1</span>,j))&#123;<br>                tas=j;<br><span class="hljs-comment">//                cout&lt;&lt;tas&lt;&lt;endl;</span><br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> z=tas;z&lt;len;z++)&#123;<br>            s.<span class="hljs-built_in">extends</span>(ss[z]);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=s.sz;i++)&#123;<br>        cout&lt;&lt;s.s[i];<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br><span class="hljs-comment">//    getchar();</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>双哈希</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e6</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">998244353</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ull;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> HASH_CNT = <span class="hljs-number">2</span>;<br><br><span class="hljs-type">int</span> hashBase[HASH_CNT] = &#123;<span class="hljs-number">29</span>, <span class="hljs-number">31</span>&#125;;<br><span class="hljs-type">int</span> hashMod[HASH_CNT] = &#123;(<span class="hljs-type">int</span>)(<span class="hljs-number">1e9</span> + <span class="hljs-number">9</span>), <span class="hljs-number">998244353</span>&#125;;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">StringHash</span> &#123;<br>    <span class="hljs-type">char</span> s[maxn];<br>    ull h[maxn];<br>    ull p[maxn];<br>    <span class="hljs-type">int</span> hsh[HASH_CNT][maxn];<br>    <span class="hljs-type">int</span> pwMod[HASH_CNT][maxn];<br>    <span class="hljs-type">int</span> sz=<span class="hljs-number">0</span>;<br>    <span class="hljs-function">ull <span class="hljs-title">geth</span><span class="hljs-params">(<span class="hljs-type">int</span> l, <span class="hljs-type">int</span> r)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> h[r] - h[l - <span class="hljs-number">1</span>] * p[r - l + <span class="hljs-number">1</span>];<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">extends</span><span class="hljs-params">(<span class="hljs-type">char</span> op)</span></span>&#123;<br>        s[++sz]=op;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; HASH_CNT; ++i) &#123;<br>            pwMod[i][sz] = <span class="hljs-number">1ll</span> * pwMod[i][sz - <span class="hljs-number">1</span>] * hashBase[i] % hashMod[i];<br>            hsh[i][sz] = (<span class="hljs-number">1ll</span> * hsh[i][sz - <span class="hljs-number">1</span>] * hashBase[i] + op) % hashMod[i];<br>        &#125;<br>    &#125;<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">getHash</span><span class="hljs-params">(<span class="hljs-type">int</span> l, <span class="hljs-type">int</span> r)</span> </span>&#123;  <br>        <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">res</span><span class="hljs-params">(HASH_CNT, <span class="hljs-number">0</span>)</span></span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; HASH_CNT; ++i) &#123;<br>            <span class="hljs-type">int</span> t =<br>                    (hsh[i][r] - <span class="hljs-number">1ll</span> * hsh[i][l - <span class="hljs-number">1</span>] * pwMod[i][r - l + <span class="hljs-number">1</span>]) % hashMod[i];<br>            t = (t + hashMod[i]) % hashMod[i];<br>            res[i] = t;<br>        &#125;<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span> </span>&#123;<br>        sz = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; HASH_CNT; ++i) &#123;<br>            hsh[i][<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br>            pwMod[i][<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>&#125;;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">equal</span><span class="hljs-params">(<span class="hljs-type">const</span> vector&lt;<span class="hljs-type">int</span>&gt; &amp;h1, <span class="hljs-type">const</span> vector&lt;<span class="hljs-type">int</span>&gt; &amp;h2)</span> </span>&#123;<br>    <span class="hljs-built_in">assert</span>(h1.<span class="hljs-built_in">size</span>() == h2.<span class="hljs-built_in">size</span>());<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">unsigned</span> i = <span class="hljs-number">0</span>; i &lt; h1.<span class="hljs-built_in">size</span>(); i++)<br>        <span class="hljs-keyword">if</span> (h1[i] != h2[i]) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br>StringHash s,t;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    s.<span class="hljs-built_in">init</span>();<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        string ss;<br>        cin&gt;&gt;ss;<br>        t.<span class="hljs-built_in">init</span>();<br>        <span class="hljs-type">int</span> tas=<span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> len=ss.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> j:ss)t.<span class="hljs-built_in">extends</span>(j);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-built_in">min</span>(s.sz,len);j&gt;=<span class="hljs-number">1</span>;j--)&#123;<br><span class="hljs-comment">//           cout&lt;&lt;j&lt;&lt;&quot; &quot; &lt;&lt;s.geth(s.sz-j+1,s.sz)&lt;&lt;&quot; &quot;&lt;&lt;t.geth(1,j)&lt;&lt;endl;</span><br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">equal</span>(s.<span class="hljs-built_in">getHash</span>(s.sz-j+<span class="hljs-number">1</span>,s.sz),t.<span class="hljs-built_in">getHash</span>(<span class="hljs-number">1</span>,j)))&#123;<br>                tas=j;<br><span class="hljs-comment">//                cout&lt;&lt;tas&lt;&lt;endl;</span><br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> z=tas;z&lt;len;z++)&#123;<br>            s.<span class="hljs-built_in">extends</span>(ss[z]);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=s.sz;i++)&#123;<br>        cout&lt;&lt;s.s[i];<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br><span class="hljs-comment">//    getchar();</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://codeforces.com/problemset/problem/1800/D"> Remove Two Letters</a>                </p><p>推式子的时候要注意前位是高位,注意双hash</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;queue&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;set&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stack&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LL long long</span><br><span class="hljs-type">const</span> LL mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> LL mod2 = <span class="hljs-number">998244353</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> p[maxn];<br><span class="hljs-type">int</span> p2[maxn];<br><span class="hljs-type">int</span> h[maxn];<br><span class="hljs-type">int</span> h2[maxn];<br><span class="hljs-comment">//char s[maxn];</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">geth</span><span class="hljs-params">(<span class="hljs-type">int</span> l,<span class="hljs-type">int</span> r)</span></span>&#123;<br>    <span class="hljs-keyword">return</span> (h[r]-h[l<span class="hljs-number">-1</span>]*p[r-l+<span class="hljs-number">1</span>]%mod+mod)%mod;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">geth2</span><span class="hljs-params">(<span class="hljs-type">int</span> l,<span class="hljs-type">int</span> r)</span></span>&#123;<br>    <span class="hljs-keyword">return</span> (h2[r]-h2[l<span class="hljs-number">-1</span>]*p2[r-l+<span class="hljs-number">1</span>]%mod2+mod2)%mod2;<br>&#125;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span>&#123;<br>    <span class="hljs-type">int</span> l1,l2;<br>    <span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span>&lt;(<span class="hljs-type">const</span> node&amp;b)<span class="hljs-type">const</span>&#123;<br>        <span class="hljs-keyword">if</span>(l1&lt;b.l1)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l1==b.l1&amp;&amp;l2&lt;b.l2)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    string s;<br>    cin&gt;&gt;s;<br>    <span class="hljs-type">int</span> len=s.<span class="hljs-built_in">size</span>();<br>    s=<span class="hljs-string">&#x27; &#x27;</span>+s;<br>    h[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    h2[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=len;i++)&#123;<br>        h[i]=(h[i<span class="hljs-number">-1</span>]*<span class="hljs-number">131</span>%mod+s[i])%mod;<br>        h2[i]=(h2[i<span class="hljs-number">-1</span>]*<span class="hljs-number">1331</span>%mod2+s[i])%mod2;<br>    &#125;<br>    set&lt;pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;&gt;st;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=len<span class="hljs-number">-1</span>;i++)&#123;<br>        <span class="hljs-type">int</span> hash=h[i<span class="hljs-number">-1</span>]*p[len-i<span class="hljs-number">-1</span>]%mod;<br>        <span class="hljs-type">int</span> hash2=h2[i<span class="hljs-number">-1</span>]*p2[len-i<span class="hljs-number">-1</span>]%mod2;<br>        hash=(hash+<span class="hljs-built_in">geth</span>(i+<span class="hljs-number">2</span>,len))%mod;<br>        hash2=(hash2+<span class="hljs-built_in">geth2</span>(i+<span class="hljs-number">2</span>,len))%mod2;<br>        st.<span class="hljs-built_in">insert</span>(&#123;hash,hash2&#125;);<br>    &#125;<br>    cout&lt;&lt;st.<span class="hljs-built_in">size</span>()&lt;&lt;endl;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br>    p[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<br>    p2[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">2e5</span>;i++)&#123;<br>        p[i]=p[i<span class="hljs-number">-1</span>]*<span class="hljs-number">131</span>%mod;<br>        p2[i]=p2[i<span class="hljs-number">-1</span>]*<span class="hljs-number">1331</span>%mod2;<br>    &#125;<br>    cin&gt;&gt;T;<br>    <span class="hljs-keyword">while</span>(T--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2023冬训week5</title>
    <link href="/2023/02/12/2023%E5%86%AC%E8%AE%ADweek5/"/>
    <url>/2023/02/12/2023%E5%86%AC%E8%AE%ADweek5/</url>
    
    <content type="html"><![CDATA[<h1 id="蓝桥杯模拟赛-3"><a href="#蓝桥杯模拟赛-3" class="headerlink" title="蓝桥杯模拟赛 3 "></a><a href="https://www.luogu.com.cn/contest/100614">蓝桥杯模拟赛 3 </a></h1><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>滚动数组优化的状态转移</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><br><span class="hljs-meta">#define int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> maxn =<span class="hljs-number">3e5</span>+<span class="hljs-number">5</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> <span class="hljs-keyword">mod</span> = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-built_in">int</span> dp[<span class="hljs-number">2</span>][maxn];<br><span class="hljs-built_in">int</span> w[maxn];<br><span class="hljs-keyword">void</span> solve()&#123;<br>    <span class="hljs-built_in">int</span> n;<br>    cin&gt;&gt;n;<br><span class="hljs-comment">//    memset(dp,0, size(dp));</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;w[i];<br>    &#125;<br>    <span class="hljs-built_in">int</span> tt=<span class="hljs-number">1e5</span>;<br>    dp[<span class="hljs-number">0</span>][tt]=<span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">int</span> <span class="hljs-keyword">sum</span>=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">sum</span>+=w[i];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> j=-<span class="hljs-keyword">sum</span>;j&lt;=<span class="hljs-keyword">sum</span>;j++)&#123;<br>            <span class="hljs-keyword">if</span>(dp[(i<span class="hljs-number">-1</span>)&amp;<span class="hljs-number">1</span>][tt+j-w[i]]||dp[(i<span class="hljs-number">-1</span>)&amp;<span class="hljs-number">1</span>][tt+j+w[i]]||dp[(i<span class="hljs-number">-1</span>)&amp;<span class="hljs-number">1</span>][tt+j])dp[i&amp;<span class="hljs-number">1</span>][tt+j]=<span class="hljs-number">1</span>;<br>        &#125;<br><span class="hljs-comment">//        dp[w[i]+tt]=1;</span><br>    &#125;<br>    <span class="hljs-built_in">int</span> <span class="hljs-keyword">as</span>=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-keyword">sum</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>(dp[n&amp;<span class="hljs-number">1</span>][i+tt])<span class="hljs-keyword">as</span>++;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-keyword">as</span>&lt;&lt;endl;<br>&#125;<br><br>int32_t main() &#123;<br>    ios::sync_with_stdio(<span class="hljs-literal">false</span>);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    <span class="hljs-built_in">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><h1 id="SMU-Winter-2023-Round-11-Div-1"><a href="#SMU-Winter-2023-Round-11-Div-1" class="headerlink" title="SMU Winter 2023 Round #11 (Div.1)"></a><a href="https://codeforces.com/group/L9GOcnr1dm/contest/425493">SMU Winter 2023 Round #11 (Div.1)</a></h1><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>题意其实是选择路径的第i个点的点权,那预处理出从起点出发走了i个点到点j的最短路然后一直取min即可</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><br><span class="hljs-meta">#define int long long</span><br><span class="hljs-keyword">using</span> namespace std;<br>const <span class="hljs-type">int</span> maxn =<span class="hljs-number">500</span>+<span class="hljs-number">5</span>;<br>const <span class="hljs-type">int</span> mod = <span class="hljs-number">998244353</span>;<br>const <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> n,m;<br>struct node&#123;<br>    <span class="hljs-type">int</span> <span class="hljs-keyword">to</span>,val;<br>&#125;;<br>vector&lt;node&gt;vec[maxn];<br><span class="hljs-type">int</span> dp[maxn][maxn];<br><span class="hljs-type">int</span> mp[maxn][maxn];<br><span class="hljs-type">int</span> dist[maxn];<br><span class="hljs-type">int</span> Last[maxn];<br><span class="hljs-type">void</span> ford()&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)dist[i]=INF;<br>    dist[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)&#123;<br>        memcpy(Last,dist,sizeof dist);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-keyword">to</span>=<span class="hljs-number">1</span>;<span class="hljs-keyword">to</span>&lt;=n;<span class="hljs-keyword">to</span>++)&#123;<br>                dist[<span class="hljs-keyword">to</span>]=min(dist[<span class="hljs-keyword">to</span>],Last[j]+mp[j][<span class="hljs-keyword">to</span>]);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>            dp[i][j]=dist[j];<br>        &#125;<br>    &#125;<br><br>&#125;<br><span class="hljs-type">void</span> solve()&#123;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)dp[i][j]=INF,mp[i][j]=INF;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<br>        <span class="hljs-type">int</span> u,v,va;<br>        cin&gt;&gt;u&gt;&gt;v&gt;&gt;va;<br>        mp[u][v]=min(mp[u][v],va);<br>        mp[v][u]=min(mp[v][u],va);<br>    &#125;<br>    ford();<br>    <span class="hljs-type">int</span> q;<br>    cin&gt;&gt;q;<br>    <span class="hljs-keyword">while</span>(q<span class="hljs-comment">--)&#123;</span><br>        <span class="hljs-type">int</span> t;<br>        cin&gt;&gt;t;<br>        <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-keyword">as</span>=INF;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)&#123;<br>            <span class="hljs-type">int</span> x;<br>            cin&gt;&gt;x;<br>            sum+=x;<br>            <span class="hljs-keyword">as</span>=min(<span class="hljs-keyword">as</span>,dp[i][t]+sum);<br>        &#125;<br>        cout&lt;&lt;<span class="hljs-keyword">as</span>&lt;&lt;endl;<br>    &#125;<br>&#125;<br><br><br>int32_t main() &#123;<br>    ios::sync_with_stdio(<span class="hljs-keyword">false</span>);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>//    cin &gt;&gt; T;<br>//    getchar();<br>    <span class="hljs-keyword">while</span> (T<span class="hljs-comment">--)  &#123;</span><br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>dp转移好想,还涉及到字符串的一些算法,可以从一个可行的端点出发,用字典树或者字符串哈希判断后面的是否在当前枚举的相反种类出现过,把所有可行的都转移</p><p>字符串hash</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs inform7">#include&lt;iostream&gt;<br>#include&lt;map&gt;<br>#include&lt;queue&gt;<br>#include&lt;set&gt;<br>#include&lt;stack&gt;<br>#include&lt;cmath&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;cstring&gt;<br>#include&lt;vector&gt;<br>#include&lt;cmath&gt;<br>#include&lt;bits/stdc++.h&gt;<br>using namespace std;<br>#define int long long<br>#define LL long long<br>const LL mod = 1e9+7;<br>const LL mod2 = 998244353;<br>const int maxn = 5e5 + 5;<br>const int INF = 0x3f3f3f3f3f3f3f3f;<br>int p<span class="hljs-comment">[maxn]</span>;<br>int dp<span class="hljs-comment">[maxn]</span><span class="hljs-comment">[2]</span>;<br>void solve()&#123;<br>    int n;<br>    cin&gt;&gt;n;<br>    set&lt;int&gt;st<span class="hljs-comment">[2]</span><span class="hljs-comment">[2]</span>;<br>    for(int i=1;i&lt;=n;i++)&#123;<br>        string ss;<br>        cin&gt;&gt;ss;<br>        int len=ss.size();<br>        int hash=0;<br>        int hash2=0;<br>        for(int j=0;j&lt;len;j++)&#123;<br>            hash=(hash*131%mod+ss<span class="hljs-comment">[j]</span>)%mod;<br>            hash2=(hash2*1331%mod2+ss<span class="hljs-comment">[j]</span>)%mod2;<br>        &#125;<br>        st<span class="hljs-comment">[0]</span><span class="hljs-comment">[0]</span>.insert(hash);<br>        st<span class="hljs-comment">[0]</span><span class="hljs-comment">[1]</span>.insert(hash2);<br>    &#125;<br>    for(int i=0;i&lt;maxn;i++)&#123;<br>        for(int j=0;j&lt;2;j++)dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span>=INF;<br>    &#125;<br>    int m;<br>    cin&gt;&gt;m;<br>    for(int i=1;i&lt;=m;i++)&#123;<br>        string ss;<br>        cin&gt;&gt;ss;<br>        int len=ss.size();<br>        int hash=0;<br>        int hash2=0;<br>        for(int j=0;j&lt;len;j++)&#123;<br>            hash=(hash*131%mod+ss<span class="hljs-comment">[j]</span>)%mod;<br>            hash2=(hash2*1331%mod2+ss<span class="hljs-comment">[j]</span>)%mod2;<br>        &#125;<br>        st<span class="hljs-comment">[1]</span><span class="hljs-comment">[0]</span>.insert(hash);<br>        st<span class="hljs-comment">[1]</span><span class="hljs-comment">[1]</span>.insert(hash2);<br>    &#125;<br>    string s;<br>    cin&gt;&gt;s;<br>    int len=s.size();<br>    for(int i=0;i&lt;len;i++)&#123;<br>        if(i==0)&#123;<br>            int hash=0;<br>            int hash2=0;<br>            for(int j=0;j&lt;len;j++)&#123;<br>                hash=(hash*131%mod+s<span class="hljs-comment">[j]</span>)%mod;<br>                hash2=(hash2*1331%mod2+s<span class="hljs-comment">[j]</span>)%mod2;<br>                if(st<span class="hljs-comment">[0]</span><span class="hljs-comment">[0]</span>.find(hash)!=st<span class="hljs-comment">[0]</span><span class="hljs-comment">[0]</span>.end()&amp;&amp;st<span class="hljs-comment">[0]</span><span class="hljs-comment">[1]</span>.find(hash2)!=st<span class="hljs-comment">[0]</span><span class="hljs-comment">[1]</span>.end())dp<span class="hljs-comment">[j]</span><span class="hljs-comment">[0]</span>=1;<br>                if(st<span class="hljs-comment">[1]</span><span class="hljs-comment">[0]</span>.find(hash)!=st<span class="hljs-comment">[1]</span><span class="hljs-comment">[0]</span>.end()&amp;&amp;st<span class="hljs-comment">[1]</span><span class="hljs-comment">[1]</span>.find(hash2)!=st<span class="hljs-comment">[1]</span><span class="hljs-comment">[1]</span>.end())dp<span class="hljs-comment">[j]</span><span class="hljs-comment">[1]</span>=1;<br>            &#125;<br>        &#125;<br>            if(dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[0]</span>!=INF)&#123;<br>                int hash=0;<br>                int hash2=0;<br>                for(int j=i+1;j&lt;len;j++)&#123;<br>                    hash=(hash*131%mod+s<span class="hljs-comment">[j]</span>)%mod;<br>                    hash2=(hash2*1331%mod2+s<span class="hljs-comment">[j]</span>)%mod2;<br>                    if(st<span class="hljs-comment">[1]</span><span class="hljs-comment">[0]</span>.find(hash)!=st<span class="hljs-comment">[1]</span><span class="hljs-comment">[0]</span>.end()&amp;&amp;st<span class="hljs-comment">[1]</span><span class="hljs-comment">[1]</span>.find(hash2)!=st<span class="hljs-comment">[1]</span><span class="hljs-comment">[1]</span>.end()) &#123;<br>                        dp<span class="hljs-comment">[j]</span><span class="hljs-comment">[1]</span> = min(dp<span class="hljs-comment">[j]</span><span class="hljs-comment">[1]</span>, dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[0]</span> + 1);<br>                    &#125;<br>                &#125;<br>            &#125;<br>            if(dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[1]</span>!=INF)&#123;<br>                int hash=0;<br>                int hash2=0;<br>                for(int j=i+1;j&lt;len;j++)&#123;<br>                    hash=(hash*131%mod+s<span class="hljs-comment">[j]</span>)%mod;<br>                    hash2=(hash2*1331%mod2+s<span class="hljs-comment">[j]</span>)%mod2;<br>                    if(st<span class="hljs-comment">[0]</span><span class="hljs-comment">[0]</span>.find(hash)!=st<span class="hljs-comment">[0]</span><span class="hljs-comment">[0]</span>.end()&amp;&amp;st<span class="hljs-comment">[0]</span><span class="hljs-comment">[1]</span>.find(hash2)!=st<span class="hljs-comment">[0]</span><span class="hljs-comment">[1]</span>.end())<br>                        dp<span class="hljs-comment">[j]</span><span class="hljs-comment">[0]</span>=min(dp<span class="hljs-comment">[j]</span><span class="hljs-comment">[0]</span>,dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[1]</span>+1);<br>                &#125;<br>            &#125;<br>        <br>    &#125;<br>    int as=min(dp<span class="hljs-comment">[len-1]</span><span class="hljs-comment">[0]</span>,dp<span class="hljs-comment">[len-1]</span><span class="hljs-comment">[1]</span>);<br>    if(as==INF)&#123;<br>        cout&lt;&lt;-1&lt;&lt;endl;<br>    &#125;<br>    else cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br>signed main() &#123;<br>    ios::sync_with_stdio(false);<br>    cin.tie(0), cout.tie(0);<br>    int T=1;<br>//    cin&gt;&gt;T;<br>    while(T--)&#123;<br>        solve();<br>    &#125;<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>字典树</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;queue&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;set&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stack&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LL long long</span><br><span class="hljs-type">const</span> LL mod = <span class="hljs-number">998244353</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">5e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-comment">//int a[maxn],max_d,Last;</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">trie</span>&#123;<br>    <span class="hljs-type">int</span> nxt[maxn][<span class="hljs-number">26</span>],cnt;<br>    <span class="hljs-type">bool</span> exist[maxn];<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">insert</span><span class="hljs-params">(string s)</span></span>&#123;<br>        <span class="hljs-type">int</span> l=s.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;l;i++)&#123;<br>            <span class="hljs-type">int</span> c=s[i]-<span class="hljs-string">&#x27;a&#x27;</span>;<br>            <span class="hljs-keyword">if</span>(!nxt[p][c])nxt[p][c]=++cnt;<br>            p=nxt[p][c];<br>        &#125;<br>        exist[p]=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">find</span><span class="hljs-params">(string s)</span></span>&#123;<br>        <span class="hljs-type">int</span> l=s.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;l;i++)&#123;<br>            <span class="hljs-type">int</span> c=s[i]-<span class="hljs-string">&#x27;a&#x27;</span>;<br>            <span class="hljs-keyword">if</span>(!nxt[p][c])<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>            p=nxt[p][c];<br>        &#125;<br>        <span class="hljs-keyword">return</span> exist[p];<br>    &#125;<br>&#125;;<br>trie a,b;<br><span class="hljs-type">int</span> dp[maxn][<span class="hljs-number">2</span>];<br><span class="hljs-type">char</span> s[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        string ts;<br>        cin&gt;&gt;ts;<br>        a.<span class="hljs-built_in">insert</span>(ts);<br>    &#125;<br>    <span class="hljs-type">int</span> m;<br>    cin&gt;&gt;m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<br>        string ts;<br>        cin&gt;&gt;ts;<br>        b.<span class="hljs-built_in">insert</span>(ts);<br>    &#125;<br><span class="hljs-comment">//    string s;</span><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,s+<span class="hljs-number">1</span>);<br>    <span class="hljs-type">int</span> len=<span class="hljs-built_in">strlen</span>(s+<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=len;i++)&#123;<br>        dp[i][<span class="hljs-number">0</span>]=dp[i][<span class="hljs-number">1</span>]=INF;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=len;i++)&#123;<br>        <span class="hljs-keyword">if</span>(dp[i][<span class="hljs-number">0</span>]!=INF)&#123;<br>            <span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;=len;j++)&#123;<br>                <span class="hljs-type">int</span> c=s[j]-<span class="hljs-string">&#x27;a&#x27;</span>;<br>                <span class="hljs-keyword">if</span>(!a.nxt[p][c])<span class="hljs-keyword">break</span>;<br>                p=a.nxt[p][c];<br>                <span class="hljs-keyword">if</span>(a.exist[p])&#123;<br>                    dp[j][<span class="hljs-number">1</span>]=<span class="hljs-built_in">min</span>(dp[j][<span class="hljs-number">1</span>],dp[i][<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>);<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(dp[i][<span class="hljs-number">1</span>]!=INF)&#123;<br>            <span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;=len;j++)&#123;<br>                <span class="hljs-type">int</span> c=s[j]-<span class="hljs-string">&#x27;a&#x27;</span>;<br>                <span class="hljs-keyword">if</span>(!b.nxt[p][c])<span class="hljs-keyword">break</span>;<br>                p=b.nxt[p][c];<br>                <span class="hljs-keyword">if</span>(b.exist[p])&#123;<br>                    dp[j][<span class="hljs-number">0</span>]=<span class="hljs-built_in">min</span>(dp[j][<span class="hljs-number">0</span>],dp[i][<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>);<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-type">int</span> as=<span class="hljs-built_in">min</span>(dp[len][<span class="hljs-number">1</span>],dp[len][<span class="hljs-number">0</span>]);<br>    <span class="hljs-keyword">if</span>(as==INF)&#123;<br>        cout&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//    ios::sync_with_stdio(false);</span><br><span class="hljs-comment">//    cin.tie(0), cout.tie(0);</span><br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin&gt;&gt;T;</span><br>    <span class="hljs-keyword">while</span>(T--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Codeforces-Round-851-Div-2"><a href="#Codeforces-Round-851-Div-2" class="headerlink" title="Codeforces Round #851 (Div. 2)"></a><a href="https://codeforces.com/contest/1788">Codeforces Round #851 (Div. 2)</a></h2><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>把n每一位的数都按位分一半,原本多的放少的,少的放多的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn =<span class="hljs-number">2e5</span>+<span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-comment">//int a[maxn];</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">cal</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>    <span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(x)&#123;<br>        cnt+=x%<span class="hljs-number">10</span>;<br>        x/=<span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> cnt;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br><span class="hljs-comment">//    if(n%2==0)&#123;</span><br><span class="hljs-comment">//        cout&lt;&lt;n/2&lt;&lt;&quot; &quot;&lt;&lt;n/2&lt;&lt;endl;</span><br><span class="hljs-comment">//        return ;</span><br><span class="hljs-comment">//    &#125;</span><br><span class="hljs-comment">//    if(n%10!=9)&#123;</span><br><span class="hljs-comment">//        cout&lt;&lt;n/2&lt;&lt;&quot; &quot;&lt;&lt;n/2+1&lt;&lt;endl;</span><br><span class="hljs-comment">//        return ;</span><br><span class="hljs-comment">//    &#125;</span><br>    <span class="hljs-type">int</span> a=<span class="hljs-number">0</span>,b=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> o=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(n)&#123;<br>        <span class="hljs-type">int</span> tp=n%<span class="hljs-number">10</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">cal</span>(a)&gt;<span class="hljs-built_in">cal</span>(b))&#123;<br>            a=a+o*(tp/<span class="hljs-number">2</span>);<br>            b=b+o*(tp/<span class="hljs-number">2</span>+(tp%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>));<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            a=a+o*(tp/<span class="hljs-number">2</span>+(tp%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>));<br>            b=b+o*(tp/<span class="hljs-number">2</span>);<br>        &#125;<br>        o*=<span class="hljs-number">10</span>;<br>        n/=<span class="hljs-number">10</span>;<br>    &#125;<br>    cout&lt;&lt;a&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;b&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-1"><a href="#C-1" class="headerlink" title="C"></a>C</h2><p>写多几个找到规律即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn =<span class="hljs-number">2e5</span>+<span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-comment">//int a[maxn];</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">cal</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>    <span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(x)&#123;<br>        cnt+=x%<span class="hljs-number">10</span>;<br>        x/=<span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> cnt;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">if</span>(n&amp;<span class="hljs-number">1</span>)&#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>&lt;&lt;endl;<br>        cout&lt;&lt;<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;n*<span class="hljs-number">2</span>&lt;&lt;endl;<br>        <span class="hljs-type">int</span> tp=n*<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n/<span class="hljs-number">2</span>+<span class="hljs-number">1</span>;i++)&#123;<br>            cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;tp-i&lt;&lt;endl;<br>            tp--;<br>        &#125;<br>        tp=n*<span class="hljs-number">2</span>+<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=n;i&gt;=n/<span class="hljs-number">2</span>+<span class="hljs-number">2</span>;i--)&#123;<br>            cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;tp-i&lt;&lt;endl;<br>            tp++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Codeforces-Round-852-Div-2"><a href="#Codeforces-Round-852-Div-2" class="headerlink" title="Codeforces Round #852 (Div. 2)"></a><a href="https://codeforces.com/contest/1793">Codeforces Round #852 (Div. 2)</a></h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>阅读理解,只会是全选b,全选a,或者选a再选b</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn =<span class="hljs-number">2e5</span>+<span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-comment">//int a[maxn];</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> a,b;<br>    cin&gt;&gt;a&gt;&gt;b;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-type">int</span> as=n*b;<br>    as=<span class="hljs-built_in">min</span>(as,(n-n/(m+<span class="hljs-number">1</span>))*a);<br>    as=<span class="hljs-built_in">min</span>(as,(n/(m+<span class="hljs-number">1</span>))*(a*m)+(n%(m+<span class="hljs-number">1</span>))*b);<br>    cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-1"><a href="#B-1" class="headerlink" title="B"></a>B</h2><p>直接造出x下降到y,y再上升回x的序列即可,注意是题目的output写明了n的和不会爆2e5,所以不用想x和y差很多的情况</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn =<span class="hljs-number">2e5</span>+<span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> x,y;<br>    cin&gt;&gt;x&gt;&gt;y;<br>    <span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br>    vector&lt;<span class="hljs-type">int</span>&gt;vec;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=x;i&gt;=y;i--)vec.<span class="hljs-built_in">push_back</span>(i);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=y+<span class="hljs-number">1</span>;i&lt;x;i++)vec.<span class="hljs-built_in">push_back</span>(i);<br>    cout&lt;&lt;vec.<span class="hljs-built_in">size</span>()&lt;&lt;endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:vec)cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>    cout&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-2"><a href="#C-2" class="headerlink" title="C"></a>C</h2><p>从为什么不能l取1,r取n的情况入手,其实是因为1的位置或者r的位置可能本身就是极值之一,那定义双指针l&#x3D;1,r&#x3D;n,当其中任意一个指针是极值的时候,就移动指针,更新当前的极值,更新到双指针都不是极值的时候即是答案</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn =<span class="hljs-number">2e5</span>+<span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> l=<span class="hljs-number">1</span>,r=n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br><span class="hljs-comment">//        idx[a[i]]=i;</span><br>    &#125;<br>    <span class="hljs-type">int</span> mi=<span class="hljs-number">1</span>,ma=n;<br><span class="hljs-comment">//    cout&lt;&lt;a[l]&lt;&lt;&quot; &quot;&lt;&lt;a[r]&lt;&lt;&quot; &quot;&lt;&lt;mi&lt;&lt;&quot; &quot;&lt;&lt;ma&lt;&lt;endl;</span><br>    <span class="hljs-keyword">while</span>(((a[l]==mi||a[l]==ma)||(a[r]==mi||a[r]==ma))&amp;&amp;l&lt;=n&amp;&amp;r&gt;=<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-keyword">if</span>(a[l]==mi)&#123;<br>            l++;<br>            mi++;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[l]==ma)&#123;<br>            l++;<br>            ma--;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(a[r]==ma)&#123;<br>            r--;<br>            ma--;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[r]==mi)&#123;<br>            r--;<br>            mi++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(l&lt;r)&#123;<br>        cout&lt;&lt;l&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;r&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;endl;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>mex的题可以从值入手,计算mex分别是1到n+1的答案,计算mex&#x3D;1的答案就是要两个排列l到r都不能含有1,计算mex等于2的时候就是选取的l到r都必须含有1且都不能含有2,以此类推.那计算当前mex&#x3D;i的答案时,就要含前i-1的所有值,且不能含有i,把i的坐标存起来按题意分类讨论计算一次答案,然后把当前i的坐标nl和nr进行区间合并维护一个总的l和r,表示含有前i个的所有值的最小区间,给下次的更新答案用,mex等于1的答案特判掉</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><br><span class="hljs-meta">#define int long long</span><br><span class="hljs-keyword">using</span> namespace std;<br>const <span class="hljs-type">int</span> maxn =<span class="hljs-number">2e5</span>+<span class="hljs-number">5</span>;<br>const <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br>const <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> p[maxn];<br><span class="hljs-type">int</span> idx[maxn];<br><span class="hljs-type">int</span> idx2[maxn];<br><span class="hljs-type">int</span> q[maxn];<br><span class="hljs-type">void</span> solve()&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> l=<span class="hljs-number">1</span>,r=n;<br>    <span class="hljs-type">int</span> <span class="hljs-keyword">as</span>=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;p[i];<br>        idx[p[i]]=i;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;q[i];<br>        idx2[q[i]]=i;<br>    &#125;<br>    l=min(idx[<span class="hljs-number">1</span>],idx2[<span class="hljs-number">1</span>]);<br>    r=max(idx[<span class="hljs-number">1</span>],idx2[<span class="hljs-number">1</span>]);<br>    <span class="hljs-keyword">as</span>+=(<span class="hljs-number">1</span>+l<span class="hljs-number">-1</span>)*(l<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">as</span>+=(<span class="hljs-number">1</span>+n-r)*(n-r)/<span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">as</span>+=(<span class="hljs-number">1</span>+r-l<span class="hljs-number">-1</span>)*(r-l<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-type">int</span> nl=min(idx[i],idx2[i]);<br>        <span class="hljs-type">int</span> nr=max(idx[i],idx2[i]);<br>        <span class="hljs-keyword">if</span>(idx[i]&gt;=l&amp;&amp;idx[i]&lt;=r||idx2[i]&gt;=l&amp;&amp;idx2[i]&lt;=r)&#123;<br>            l=min(l,nl);<br>            r=max(r,nr);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(l&gt;nr)&#123;<br>            <span class="hljs-keyword">as</span>+=(l-nr)*(n-r+<span class="hljs-number">1</span>);<br>            l=nl;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nl&gt;r)&#123;<br>            <span class="hljs-keyword">as</span>+=(nl-r)*(l);<br>            r=nr;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">as</span>+=(l-nl)*(nr-r);<br>            l=nl;<br>            r=nr;<br>//            <span class="hljs-keyword">as</span>+=(<span class="hljs-number">1</span>+n-nr)*(n-nr)/<span class="hljs-number">2</span>;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-keyword">as</span>+<span class="hljs-number">1</span>&lt;&lt;endl;<br>&#125;<br><br>int32_t main() &#123;<br>    ios::sync_with_stdio(<span class="hljs-keyword">false</span>);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>//    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T<span class="hljs-comment">--)  &#123;</span><br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>补题</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2023冬训week4</title>
    <link href="/2023/02/01/2023%E5%86%AC%E8%AE%ADweek4/"/>
    <url>/2023/02/01/2023%E5%86%AC%E8%AE%ADweek4/</url>
    
    <content type="html"><![CDATA[<h1 id="Educational-Codeforces-Round-142-Rated-for-Div-2"><a href="#Educational-Codeforces-Round-142-Rated-for-Div-2" class="headerlink" title="Educational Codeforces Round 142 (Rated for Div. 2)"></a><a href="https://codeforces.com/contest/1792">Educational Codeforces Round 142 (Rated for Div. 2)</a></h1><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p> 相当于转换为对于所有数往后按顺序连续最多的有多少个数,除此其他数都要进行操作,预处理后每个数都可以O(1)算出答案</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;queue&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;set&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stack&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LL long long</span><br><span class="hljs-type">const</span> LL mod = <span class="hljs-number">998244353</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-type">int</span> b[maxn];<br><span class="hljs-type">int</span> idx[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> Last=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        b[i]=<span class="hljs-number">0</span>;<br><span class="hljs-comment">//        idx[a[i]]=i;</span><br><span class="hljs-comment">//        if(a[i]!=i)Last=i;</span><br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=n;i&gt;=<span class="hljs-number">1</span>;i--)&#123;<br>        <span class="hljs-keyword">if</span>(!b[a[i]+<span class="hljs-number">1</span>])b[a[i]]=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> b[a[i]]=b[a[i]+<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>;<br>    &#125;<br><span class="hljs-comment">//    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="hljs-comment">//        cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;b[i]&lt;&lt;endl;</span><br><span class="hljs-comment">//    &#125;</span><br>        <span class="hljs-type">int</span> as=n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        as=<span class="hljs-built_in">min</span>(as,<span class="hljs-built_in">max</span>(n-(i+b[i]<span class="hljs-number">-1</span>),i<span class="hljs-number">-1</span>));<br>    &#125;<br>    cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>        cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Codeforces-Round-845-Div-2-and-ByteRace-2023"><a href="#Codeforces-Round-845-Div-2-and-ByteRace-2023" class="headerlink" title="Codeforces Round #845 (Div. 2) and ByteRace 2023"></a><a href="https://codeforces.com/contest/1777">Codeforces Round #845 (Div. 2) and ByteRace 2023</a></h1><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>相当于是n的阶乘中情况的C(n,2)</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><br><span class="hljs-meta">#define int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> <span class="hljs-keyword">mod</span> = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-built_in">int</span> fac[maxn];<br><span class="hljs-built_in">int</span> ksm(<span class="hljs-built_in">int</span> x,<span class="hljs-built_in">int</span> y)&#123;<br>    <span class="hljs-built_in">int</span> res=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(y)&#123;<br>        <span class="hljs-keyword">if</span>(y&amp;<span class="hljs-number">1</span>)res=res*x%<span class="hljs-keyword">mod</span>;<br>        x=x*x%<span class="hljs-keyword">mod</span>;<br>        y&gt;&gt;=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res%<span class="hljs-keyword">mod</span>;<br>&#125;<br><span class="hljs-keyword">void</span> solve() &#123;<br>    <span class="hljs-built_in">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>)&#123;<br>        cout&lt;&lt;<span class="hljs-number">0</span>&lt;&lt;endl;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-built_in">int</span> <span class="hljs-keyword">as</span>=<span class="hljs-number">0</span>;<br><span class="hljs-comment">//    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="hljs-comment">//        as=(as+(n-1)*fac[n])%mod;</span><br><span class="hljs-comment">//    &#125;</span><br>    cout&lt;&lt;((fac[n]%<span class="hljs-keyword">mod</span>*(n)%<span class="hljs-keyword">mod</span>*(n<span class="hljs-number">-1</span>)%<span class="hljs-keyword">mod</span>)+<span class="hljs-keyword">as</span>)%<span class="hljs-keyword">mod</span>&lt;&lt;endl;<br>&#125;<br><br>int32_t main() &#123;<br>    ios::sync_with_stdio(<span class="hljs-literal">false</span>);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    <span class="hljs-built_in">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    fac[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">2e5</span>;i++)&#123;<br>        fac[i]=i*fac[i<span class="hljs-number">-1</span>]%<span class="hljs-keyword">mod</span>;<br>    &#125;<br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-1"><a href="#C-1" class="headerlink" title="C"></a>C</h2><h1 id="Codeforces-Round-847-Div-3"><a href="#Codeforces-Round-847-Div-3" class="headerlink" title="Codeforces Round #847 (Div. 3)"></a><a href="https://codeforces.com/contest/1790">Codeforces Round #847 (Div. 3)</a></h1><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>a+b除以2满足a异或b,其实相当于二进制下原x的1只能由后一位的两个1相加和这一位一个1一个0,按这个构造即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> x;<br>    cin&gt;&gt;x;<br>    <span class="hljs-type">int</span> b=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> tot=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">while</span>(x)&#123;<br>        a[++tot]=x%<span class="hljs-number">2</span>;<br>        x/=<span class="hljs-number">2</span>;<br>    &#125;<br>    <span class="hljs-type">int</span> aa=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> bb=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=tot;i&gt;=<span class="hljs-number">0</span>;i--)&#123;<br>        <span class="hljs-keyword">if</span>(a[i]==<span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-keyword">if</span>(i==<span class="hljs-number">0</span>)&#123;<br>                cout&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;endl;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[i<span class="hljs-number">-1</span>]==<span class="hljs-number">1</span>)&#123;<br>                cout&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;endl;<br>                <span class="hljs-keyword">return</span> ;<br>            &#125;<br>            <span class="hljs-keyword">else</span> &#123;<br>                aa+=<span class="hljs-built_in">pow</span>(<span class="hljs-number">2ll</span>,i);<br>                aa+=<span class="hljs-built_in">pow</span>(<span class="hljs-number">2ll</span>,i<span class="hljs-number">-1</span>);<br>                bb+=<span class="hljs-built_in">pow</span>(<span class="hljs-number">2ll</span>,i<span class="hljs-number">-1</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;aa&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;bb&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>每更新黑点时用dist存每个点到最近黑点的距离dist,这样会大大压缩时间复杂度</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br>vector&lt;<span class="hljs-type">int</span>&gt;vec[maxn];<br><span class="hljs-type">int</span> c[maxn];<br><span class="hljs-type">int</span> dist[maxn];<br><span class="hljs-type">int</span> Last=<span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> st,<span class="hljs-type">int</span> fa,<span class="hljs-type">int</span> len)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(len&gt;Last)<span class="hljs-keyword">return</span> ;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:vec[st])&#123;<br>        <span class="hljs-keyword">if</span>(i!=fa)&#123;<br>            <span class="hljs-keyword">if</span>(dist[i]&gt;len) &#123;<br>                dist[i]=len;<br>                <span class="hljs-built_in">dfs</span>(i, st, len + <span class="hljs-number">1</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n&gt;&gt;c[<span class="hljs-number">0</span>];<br>    Last=INF;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)vec[i].<span class="hljs-built_in">clear</span>(),dist[i]=INF;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n<span class="hljs-number">-1</span>;i++)&#123;<br>        cin&gt;&gt;c[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n<span class="hljs-number">-1</span>;i++)&#123;<br>        <span class="hljs-type">int</span> u,v;<br>        cin&gt;&gt;u&gt;&gt;v;<br>        vec[u].<span class="hljs-built_in">push_back</span>(v);<br>        vec[v].<span class="hljs-built_in">push_back</span>(u);<br>    &#125;<br>    dist[c[<span class="hljs-number">0</span>]]=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">dfs</span>(c[<span class="hljs-number">0</span>],c[<span class="hljs-number">0</span>],<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n<span class="hljs-number">-1</span>;i++)&#123;<br>        cout&lt;&lt;<span class="hljs-built_in">min</span>(dist[c[i]],Last)&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>        Last=<span class="hljs-built_in">min</span>(Last,dist[c[i]]);<br>        dist[c[i]]=<span class="hljs-number">0</span>;<br>        <span class="hljs-built_in">dfs</span>(c[i],c[i],<span class="hljs-number">1</span>);<br>    &#125;<br>    cout&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="TypeDB-Forces-2023-Div-1-Div-2-Rated-Prizes"><a href="#TypeDB-Forces-2023-Div-1-Div-2-Rated-Prizes" class="headerlink" title="TypeDB Forces 2023 (Div. 1 + Div. 2, Rated, Prizes!)"></a><a href="https://codeforces.com/contest/1787">TypeDB Forces 2023 (Div. 1 + Div. 2, Rated, Prizes!)</a></h1><h2 id="B-1"><a href="#B-1" class="headerlink" title="B"></a>B</h2><p>相当于是对一个n,对他分解质因数后每次取所有独立质数的乘积设成ai,所有独立质数出现最少的次数设成pi,然后下一次用多过这个次数的独立质数,可以用排序再求后缀积解决</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br>vector&lt;<span class="hljs-type">int</span>&gt;pri;<br><span class="hljs-type">int</span> vis[maxn];<br><span class="hljs-type">int</span> tot=<span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">f</span><span class="hljs-params">()</span></span>&#123;<br>    pri.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;maxn;i++)&#123;<br>        <span class="hljs-keyword">if</span>(!vis[i])&#123;<br>            pri.<span class="hljs-built_in">push_back</span>(i);<br>            vis[i]=<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">continue</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i;j&lt;maxn;j+=i)&#123;<br>            vis[j]=<span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span>&#123;<br>    <span class="hljs-type">int</span> val,num;<br>    <span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span>&lt;(<span class="hljs-type">const</span> node &amp;b)<span class="hljs-type">const</span>&#123;<br>        <span class="hljs-keyword">return</span> num&lt;b.num;<br>    &#125;<br>&#125;;<br>node t[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    unordered_map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;mp;<br>    <span class="hljs-type">int</span> tc=n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=tot<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">1</span>;i--)&#123;<br>        <span class="hljs-keyword">if</span>(tc==<span class="hljs-number">1</span>)<span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">while</span>(tc%pri[i]==<span class="hljs-number">0</span>)&#123;<br>            tc/=pri[i];<br>            mp[pri[i]]++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-type">int</span> tcc=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:mp)&#123;<br>        t[++tcc]=&#123;i.first,i.second&#125;;<br>    &#125;<br>    t[++tcc]=&#123;tc,<span class="hljs-number">1</span>&#125;;<br>    <span class="hljs-built_in">sort</span>(t+<span class="hljs-number">1</span>,t+<span class="hljs-number">1</span>+tcc);<br>    <span class="hljs-type">int</span> as=<span class="hljs-number">0</span>;<br>    t[tcc+<span class="hljs-number">1</span>].val=<span class="hljs-number">1</span>;<br>    t[<span class="hljs-number">0</span>].num=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=tcc;i&gt;=<span class="hljs-number">1</span>;i--)&#123;<br>        t[i].val=t[i].val*t[i+<span class="hljs-number">1</span>].val;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=tcc;i++)&#123;<br>        as+=t[i].val*(t[i].num-t[i<span class="hljs-number">-1</span>].num);<br>    &#125;<br><span class="hljs-comment">//    as*=tc;</span><br>    cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-built_in">f</span>();<br>    tot=pri.<span class="hljs-built_in">size</span>();<br><span class="hljs-comment">//    cout&lt;&lt;tot&lt;&lt;endl;</span><br><span class="hljs-comment">//    for(int i=1;i&lt;=tot;i++)&#123;</span><br><span class="hljs-comment">//        cout&lt;&lt;pri[i]&lt;&lt;endl;</span><br><span class="hljs-comment">//    &#125;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-2"><a href="#C-2" class="headerlink" title="C"></a>C</h2><p>一个数都可以裂成一个大的数一个小的数,让他们差值在符合条件的情况尽可能大,先预处理出来每个数裂出来的数然后dp求解,大致是要大乘大,小乘小</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include &lt;bits/stdc++.h&gt;<br><br>#define int long long<br>using namespace std;<br>const int maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br>const int mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br>const int <span class="hljs-symbol">INF</span> = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br>int a[maxn];<br>int dp[maxn][<span class="hljs-number">2</span>];<br>int c[maxn][<span class="hljs-number">2</span>];<br><br>void solve() &#123;<br>    int n, s;<br>    cin &gt;&gt; n &gt;&gt; s;<br>    for (int i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        cin &gt;&gt; a[i];<br>    &#125;<br>    for (int i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        if (a[i] &lt;= s)c[i][<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>, c[i][<span class="hljs-number">1</span>] = a[i];<br>        else c[i][<span class="hljs-number">0</span>] = min(s, a[i] - s), c[i][<span class="hljs-number">1</span>] = a[i] - c[i][<span class="hljs-number">0</span>];<br>    &#125;<br>    c[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] = a[<span class="hljs-number">1</span>], c[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>] = a[<span class="hljs-number">1</span>];<br>    for (int i = <span class="hljs-number">2</span>; i &lt;= n - <span class="hljs-number">1</span>; i++) &#123;<br>        dp[i][<span class="hljs-number">0</span>] = min(dp[i - <span class="hljs-number">1</span>][<span class="hljs-number">0</span>] + c[i - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] * c[i][<span class="hljs-number">0</span>], dp[i - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] + c[i - <span class="hljs-number">1</span>][<span class="hljs-number">0</span>] * c[i][<span class="hljs-number">0</span>]);<br>        dp[i][<span class="hljs-number">1</span>] = min(dp[i - <span class="hljs-number">1</span>][<span class="hljs-number">0</span>] + c[i - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] * c[i][<span class="hljs-number">1</span>], dp[i - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] + c[i - <span class="hljs-number">1</span>][<span class="hljs-number">0</span>] * c[i][<span class="hljs-number">1</span>]);<br>    &#125;<br>    cout &lt;&lt; min(dp[n - <span class="hljs-number">1</span>][<span class="hljs-number">0</span>] + c[n - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] * a[n], dp[n - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] + c[n - <span class="hljs-number">1</span>][<span class="hljs-number">0</span>] * a[n]) &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><br><br>int32_t main() &#123;<br>    ios::sync_with_stdio(false);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    int <span class="hljs-symbol">T</span> = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; <span class="hljs-symbol">T</span>;<br>    while (<span class="hljs-symbol">T</span>--) &#123;<br>        solve();<br>    &#125;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Codeforces-Round-848-Div-2"><a href="#Codeforces-Round-848-Div-2" class="headerlink" title="Codeforces Round #848 (Div. 2)"></a><a href="https://codeforces.com/contest/1778">Codeforces Round #848 (Div. 2)</a></h2><h2 id="C-3"><a href="#C-3" class="headerlink" title="C"></a>C</h2><p>暴力跑k的选取方案,暂时还没弄出此题二进制枚举比dfs更优时间复杂度的说法</p><h1 id="2023牛客寒假算法基础集训营4"><a href="#2023牛客寒假算法基础集训营4" class="headerlink" title="2023牛客寒假算法基础集训营4"></a><a href="https://ac.nowcoder.com/acm/contest/46812">2023牛客寒假算法基础集训营4</a></h1><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>预处理出来第二个人走到每个格需要的步数,每次询问时对于第一个人的初始位置跑图,跑到当前步数小于等于预处理出来的步数即可</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include &lt;bits/stdc++.h&gt;<br><br>using namespace std;<br><br>#define int long long<br><br>void init()&#123;<br>    ios::sync_with_stdio(false);<br>    cin.tie(<span class="hljs-number">0</span>);<br>    cout.tie(<span class="hljs-number">0</span>);<br>&#125;<br><br>int mod=<span class="hljs-number">998244353</span>;<br><br>int ksm(int x,int y)&#123;<br>    int res=<span class="hljs-number">1</span>;<br>    while(y)&#123;<br>        if(y&amp;<span class="hljs-number">1</span>)res=res*x;<br>        y&gt;&gt;=<span class="hljs-number">1</span>;<br>        x=x*x;<br>    &#125;<br>    return res;<br>&#125;<br><br>char mp[<span class="hljs-number">805</span>][<span class="hljs-number">805</span>];<br>int d[<span class="hljs-number">805</span>][<span class="hljs-number">805</span>],vis[<span class="hljs-number">805</span>][<span class="hljs-number">805</span>];<br>int dx[<span class="hljs-number">4</span>]=&#123; <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>&#125;;<br>int dy[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>&#125;;<br><br>void solve()&#123;<br>    int n,m,x,y,q;<br>    cin&gt;&gt;n&gt;&gt;m&gt;&gt;x&gt;&gt;y&gt;&gt;q;<br>    x++,y++;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;mp[i]+<span class="hljs-number">1</span>;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)for(int j=<span class="hljs-number">1</span>;j&lt;=m;j++)d[i][j]=<span class="hljs-number">0x3f3f3f3f</span>;<br>    queue&lt;int&gt;xx,yy;<br>    xx.push(x),yy.push(y);<br>    vis[x][y]=<span class="hljs-number">1</span>;<br>    d[x][y]=<span class="hljs-number">0</span>;<br>    while(!xx.empty())&#123;<br>        int x1=xx.front(),y1=yy.front();<br>        xx.pop(),yy.pop();<br>        for(int i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)&#123;<br>            if(x1+dx[i]&lt;<span class="hljs-number">1</span>||x1+dx[i]&gt;n||y1+dy[i]&lt;<span class="hljs-number">1</span>||y1+dy[i]&gt;m||<br>            mp[x1+dx[i]][y1+dy[i]]==<span class="hljs-string">&#x27;#&#x27;</span>||vis[x1+dx[i]][y1+dy[i]])continue;<br>            else xx.push(x1+dx[i]),yy.push(y1+dy[i]),vis[x1+dx[i]][y1+dy[i]]=<span class="hljs-number">1</span>,d[x1+dx[i]][y1+dy[i]]=d[x1][y1]+<span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    while(q--)&#123;<br>        int x2,y2;<br>        cin&gt;&gt;x2&gt;&gt;y2;<br>        x2++,y2++;<br>        int ans=<span class="hljs-number">0</span>;<br>        if(d[x2][y2]==<span class="hljs-number">0x3f3f3f3f</span>)&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;-1\n&quot;</span>;<br>            continue;<br>        &#125;<br>        for(int i=<span class="hljs-number">0</span>;i&lt;d[x2][y2];i++)&#123;<br>            ans=i+<span class="hljs-number">1</span>;<br>            int x3=x2,y3=y2;<br>            if(mp[x2][y2]==<span class="hljs-string">&#x27;L&#x27;</span>)x2+=dx[<span class="hljs-number">0</span>],y2+=dy[<span class="hljs-number">0</span>];<br>            else if(mp[x2][y2]==<span class="hljs-string">&#x27;R&#x27;</span>)x2+=dx[<span class="hljs-number">1</span>],y2+=dy[<span class="hljs-number">1</span>];<br>            else if(mp[x2][y2]==<span class="hljs-string">&#x27;U&#x27;</span>)x2+=dx[<span class="hljs-number">2</span>],y2+=dy[<span class="hljs-number">2</span>];<br>            else if(mp[x2][y2]==<span class="hljs-string">&#x27;D&#x27;</span>)x2+=dx[<span class="hljs-number">3</span>],y2+=dy[<span class="hljs-number">3</span>];<br>            if(mp[x2][y2]==<span class="hljs-string">&#x27;#&#x27;</span>)x2=x3,y2=y3;<br>        &#125;<br>        cout&lt;&lt;ans&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br>&#125;<br><br>signed main() &#123;<br>    init();<br>    int tt=<span class="hljs-number">1</span>;<br>    //cin&gt;&gt;tt;<br>    while(tt--)&#123;<br>        solve();<br>    &#125;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="F-1"><a href="#F-1" class="headerlink" title="F"></a>F</h2><p>推</p><h1 id="2023牛客寒假算法基础集训营5"><a href="#2023牛客寒假算法基础集训营5" class="headerlink" title="2023牛客寒假算法基础集训营5"></a><a href="https://ac.nowcoder.com/acm/contest/46813">2023牛客寒假算法基础集训营5</a></h1><h2 id="C-4"><a href="#C-4" class="headerlink" title="C"></a>C</h2><p>根据两字符串长度,置第一个字母前导0,把该字母带入等方法硬写if-else</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><br><span class="hljs-comment">//int b[100005],x[100005];</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    string a,b;<br>    cin&gt;&gt;a&gt;&gt;b;<br>    <span class="hljs-keyword">if</span>(a==b)&#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;=&quot;</span>&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span>(a.<span class="hljs-built_in">size</span>()==b.<span class="hljs-built_in">size</span>())&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;!&quot;</span>;<br>            <span class="hljs-keyword">return</span> ;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]!=b[<span class="hljs-number">0</span>])&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;!&quot;</span>;<br>            <span class="hljs-keyword">return</span> ;<br>        &#125;<br>        <span class="hljs-type">int</span> st1=<span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> st2=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;a.<span class="hljs-built_in">size</span>();i++)&#123;<br>            <span class="hljs-keyword">if</span>(a[i]!=b[<span class="hljs-number">0</span>])&#123;<br>                st1=i;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;b.<span class="hljs-built_in">size</span>();i++)&#123;<br>            <span class="hljs-keyword">if</span>(b[i]!=a[<span class="hljs-number">0</span>])&#123;<br>                st2=i;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        string a1=a.<span class="hljs-built_in">substr</span>(st1,a.<span class="hljs-built_in">size</span>()-st1);<br>        string b1=b.<span class="hljs-built_in">substr</span>(st2,b.<span class="hljs-built_in">size</span>()-st2);<br>        <span class="hljs-keyword">if</span>(a1==b1)&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;=&quot;</span>&lt;&lt;endl;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">if</span>(a1.<span class="hljs-built_in">size</span>()==b1.<span class="hljs-built_in">size</span>())&#123;<br>                    cout&lt;&lt;<span class="hljs-string">&quot;!&quot;</span>;<br>                    <span class="hljs-keyword">return</span> ;<br>                &#125;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;a1.<span class="hljs-built_in">size</span>();i++)&#123;<br>                    <span class="hljs-keyword">if</span>(i&gt;=b1.<span class="hljs-built_in">size</span>())&#123;<br>                        cout&lt;&lt;<span class="hljs-string">&quot;&gt;&quot;</span>;<br>                        <span class="hljs-keyword">return</span> ;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span>(a1[i]==a[<span class="hljs-number">0</span>])&#123;<br>                        <span class="hljs-keyword">if</span>(b1[i]!=a[<span class="hljs-number">0</span>])&#123;<br>                            cout&lt;&lt;<span class="hljs-string">&quot;&lt;&quot;</span>;<br>                            <span class="hljs-keyword">return</span> ;<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b1[i]==a[<span class="hljs-number">0</span>])&#123;<br>                        cout&lt;&lt;<span class="hljs-string">&quot;&gt;&quot;</span>;<br>                        <span class="hljs-keyword">return</span> ;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a1[i]==b1[i]);<br>                    <span class="hljs-keyword">else</span>&#123;<br>                        cout&lt;&lt;<span class="hljs-string">&quot;!&quot;</span>;<br>                        <span class="hljs-keyword">return</span> ;<br>                    &#125;<br>                &#125;<br>                cout&lt;&lt;<span class="hljs-string">&quot;&lt;&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>每次暴力跑前面所有的道具即可,每个道具都只会进一次出一次,代价仍然还是O(n)的</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ksm</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span>&#123;<br>    <span class="hljs-type">int</span> res=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(y)&#123;<br>        <span class="hljs-keyword">if</span>(y&amp;<span class="hljs-number">1</span>)res=res*x;<br>        y&gt;&gt;=<span class="hljs-number">1</span>;<br>        x=x*x;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><br><span class="hljs-type">int</span> l1[<span class="hljs-number">100005</span>],r1[<span class="hljs-number">100005</span>],l2[<span class="hljs-number">100005</span>],r2[<span class="hljs-number">100005</span>];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;l1[i]&gt;&gt;r1[i];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;l2[i]&gt;&gt;r2[i];<br>    map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;a,b;<br>    <span class="hljs-type">int</span> x=<span class="hljs-number">1</span>,y=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        a[l1[i]]=<span class="hljs-built_in">max</span>(a[l1[i]],r1[i]);<br>        b[l2[i]]=<span class="hljs-built_in">max</span>(b[l2[i]],r2[i]);<br>        queue&lt;<span class="hljs-type">int</span>&gt;q;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> it:a)&#123;<br>            <span class="hljs-keyword">if</span>(it.first&lt;=x)x=<span class="hljs-built_in">max</span>(x,it.second+<span class="hljs-number">1</span>),q.<span class="hljs-built_in">push</span>(it.first);<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())&#123;<br>            a.<span class="hljs-built_in">erase</span>(q.<span class="hljs-built_in">front</span>());<br>            q.<span class="hljs-built_in">pop</span>();<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> it:b)&#123;<br>            <span class="hljs-keyword">if</span>(it.first&lt;=y)y=<span class="hljs-built_in">max</span>(y,it.second+<span class="hljs-number">1</span>),q.<span class="hljs-built_in">push</span>(it.first);<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())&#123;<br>            b.<span class="hljs-built_in">erase</span>(q.<span class="hljs-built_in">front</span>());<br>            q.<span class="hljs-built_in">pop</span>();<br>        &#125;<br>        <span class="hljs-comment">//cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;&quot;\n&quot;;</span><br>        <span class="hljs-keyword">if</span>(x&gt;y)&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;sa_win!\n&quot;</span>&lt;&lt;x-y&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x&lt;y)&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;ya_win!\n&quot;</span>&lt;&lt;y-x&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;win_win!\n&quot;</span>&lt;&lt;<span class="hljs-number">0</span>&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>满足不亏的条件是一个2的i次方的一个递增序列,在此基础上用总灵石数一直后往前给,即减一个后缀和即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ksm</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span>&#123;<br>    <span class="hljs-type">int</span> res=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(y)&#123;<br>        <span class="hljs-keyword">if</span>(y&amp;<span class="hljs-number">1</span>)res=res*x;<br>        y&gt;&gt;=<span class="hljs-number">1</span>;<br>        x=x*x;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><br><span class="hljs-type">int</span> a[<span class="hljs-number">55</span>],b[<span class="hljs-number">55</span>],c[<span class="hljs-number">55</span>];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-keyword">if</span>(n&gt;<span class="hljs-number">50</span>)&#123;<br>        cout&lt;&lt;<span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">2</span>;<br>    a[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>,a[<span class="hljs-number">2</span>]=<span class="hljs-number">1</span>;<br>    c[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>,c[<span class="hljs-number">2</span>]=<span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">3</span>;i&lt;=<span class="hljs-number">50</span>;i++)a[i]=a[i<span class="hljs-number">-1</span>]*<span class="hljs-number">2</span>,sum+=a[i],c[i]=sum;<br>    <span class="hljs-keyword">if</span>(c[n]&lt;=m)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            b[i]=m/c[n]*a[i];<br>        &#125;<br>        m%=c[n];<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;-1&quot;</span>;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(m)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">50</span>;i&gt;=<span class="hljs-number">1</span>;i--)&#123;<br>            <span class="hljs-keyword">if</span>(c[i]&lt;=m)&#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=n-i+<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>                    b[j]+=a[j-n+i];<br>                &#125;<br>                m-=c[i];<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)cout&lt;&lt;b[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>    cout&lt;&lt;b[n];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="2023牛客寒假算法基础集训营6"><a href="#2023牛客寒假算法基础集训营6" class="headerlink" title="2023牛客寒假算法基础集训营6"></a><a href="https://ac.nowcoder.com/acm/contest/46814">2023牛客寒假算法基础集训营6</a></h1><h2 id="B-2"><a href="#B-2" class="headerlink" title="B"></a>B</h2><p>用一个类似前缀和的写法,用一个一直更新答案的mp数组,存当前位的答案ans[i]&#x3D;mp[x],那查询答案时mp[a[x]]-ans[x]就是x往后的答案</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">4e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">998244353</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ull;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-type">int</span> mp[maxn];<br><span class="hljs-type">int</span> ans[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n,q;<br>    cin &gt;&gt; n &gt;&gt; q;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j*j&lt;=a[i];j++)&#123;<br>            <span class="hljs-keyword">if</span>(a[i]%j==<span class="hljs-number">0</span>)&#123;<br>                mp[j]++;<br>             <span class="hljs-keyword">if</span>(j!=a[i]/j)   mp[a[i]/j]++;<br>            &#125;<br>        &#125;<br>        ans[i]=mp[a[i]];<br>    &#125;<br>    <span class="hljs-keyword">while</span>(q--)&#123;<br>        <span class="hljs-type">int</span> op;<br>        cin&gt;&gt;op;<br>        <span class="hljs-type">int</span> x;<br>        cin&gt;&gt;x;<br>        <span class="hljs-keyword">if</span>(op==<span class="hljs-number">1</span>)&#123;<br>            n++;<br>            a[n]=x;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j*j&lt;=x;j++)&#123;<br>                <span class="hljs-keyword">if</span>(x%j==<span class="hljs-number">0</span>)&#123;<br>                    mp[j]++;<br>                    <span class="hljs-keyword">if</span>(j!=x/j)   mp[x/j]++;<br>                &#125;<br>            &#125;<br>            ans[n]=mp[x];<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            cout&lt;&lt;mp[a[x]]-ans[x]&lt;&lt;endl;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br><span class="hljs-comment">//    getchar();</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="I-1"><a href="#I-1" class="headerlink" title="I"></a>I</h2><p>可以过河拆桥,那做一次广搜或者权值为1的dij即可,注意此题给定的图不一定是一个连通图,可能是若干个连通块,那特判一条线的时候就要注意判断条件应是dist[n]&#x3D;&#x3D;m,即所有边都用来构造1到n的路</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-comment">//int as[maxn*5];</span><br><span class="hljs-comment">//int a[maxn];</span><br><span class="hljs-type">int</span> tas=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> dist[maxn];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span>&#123;<br>    <span class="hljs-type">int</span> to,val;<br>    <span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span>&lt;(<span class="hljs-type">const</span> node &amp;b)<span class="hljs-type">const</span>&#123;<br>        <span class="hljs-keyword">return</span> val&gt;b.val;<br>    &#125;<br>&#125;;<br>vector&lt;node&gt;vec[maxn];<br><span class="hljs-type">int</span> n,m;<br><span class="hljs-type">bool</span> vis[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dij</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>)&#123;<br>        cout&lt;&lt;<span class="hljs-number">0</span>&lt;&lt;endl;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    dist[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>    priority_queue&lt;node&gt;q;<br>    q.<span class="hljs-built_in">push</span>(&#123;<span class="hljs-number">1</span>,<span class="hljs-number">0</span>&#125;);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)dist[i]=INF;<br>    <span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())&#123;<br>        node now=q.<span class="hljs-built_in">top</span>();<br>        q.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-keyword">if</span>(vis[now.to])<span class="hljs-keyword">continue</span>;<br>        vis[now.to]=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:vec[now.to])&#123;<br>            <span class="hljs-keyword">if</span>(!vis[i.to])&#123;<br>                dist[i.to]=<span class="hljs-built_in">min</span>(dist[now.to]+<span class="hljs-number">1</span>,dist[i.to]);<br>                q.<span class="hljs-built_in">push</span>(&#123;i.to,dist[now.to]+<span class="hljs-number">1</span>&#125;);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(dist[n]!=n<span class="hljs-number">-1</span>)&#123;<br>        cout&lt;&lt;dist[n]&lt;&lt;endl;<br><span class="hljs-comment">//        cout&lt;&lt;&quot;XX&quot;;</span><br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        cout&lt;&lt;dist[n]<span class="hljs-number">-1</span>+(*vec[<span class="hljs-number">1</span>].<span class="hljs-built_in">begin</span>()).val&lt;&lt;endl;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<br>        <span class="hljs-type">int</span> u,v,x;<br>        cin&gt;&gt;u&gt;&gt;v&gt;&gt;x;<br>        vec[u].<span class="hljs-built_in">push_back</span>(&#123;v,x&#125;);<br>        vec[v].<span class="hljs-built_in">push_back</span>(&#123;u,x&#125;);<br>    &#125;<br>    <span class="hljs-built_in">dij</span>();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="E-1"><a href="#E-1" class="headerlink" title="E"></a>E</h2><p>从以1为中心的菊花图引申,所有大于k+1的点贡献都可以是1,就看所有小于等于k+1的点,他们和1相连的贡献是他们本身,那降贡献的方法就是和后面小于等于n,并且差值大于k的点相连,那贡献就会是他们之间的gcd,一直取gcd直到为1跳出即可</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><br><span class="hljs-meta">#define int long long</span><br><span class="hljs-keyword">using</span> namespace std;<br>const <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br>const <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br>const <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br>//<span class="hljs-type">int</span> <span class="hljs-keyword">as</span>[maxn*<span class="hljs-number">5</span>];<br>//<span class="hljs-type">int</span> a[maxn];<br><br><span class="hljs-type">int</span> n,k;<br><span class="hljs-type">void</span> solve()&#123;<br>    cin&gt;&gt;n&gt;&gt;k;<br>    <span class="hljs-type">int</span> <span class="hljs-keyword">as</span>=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=min(<span class="hljs-number">1</span>+k,n);i++)&#123;<br>        <span class="hljs-type">int</span> tp=(i+k+<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">if</span>(tp&gt;n)&#123;<br>            <span class="hljs-keyword">as</span>+=i;<br>//            cout&lt;&lt;i&lt;&lt;endl;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(tp==n)&#123;<br>            <span class="hljs-keyword">as</span>+=__gcd(i,n);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-type">int</span> mi=i;<br>            <span class="hljs-keyword">while</span>(tp&lt;=n&amp;&amp;mi!=<span class="hljs-number">1</span>)&#123;<br>                mi=min(__gcd(i,tp),mi);<br>                tp++;<br>            &#125;<br>            <span class="hljs-keyword">as</span>+=mi;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>+k+<span class="hljs-number">1</span>;i&lt;=n;i++)<span class="hljs-keyword">as</span>++;<br>    cout&lt;&lt;<span class="hljs-keyword">as</span>&lt;&lt;endl;<br>&#125;<br><br>int32_t main() &#123;<br>    ios::sync_with_stdio(<span class="hljs-keyword">false</span>);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>//    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T<span class="hljs-comment">--)  &#123;</span><br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>补题</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2023冬训week3</title>
    <link href="/2023/01/19/2023%E5%86%AC%E8%AE%ADweek3/"/>
    <url>/2023/01/19/2023%E5%86%AC%E8%AE%ADweek3/</url>
    
    <content type="html"><![CDATA[<h1 id="马拉车算法整理"><a href="#马拉车算法整理" class="headerlink" title="马拉车算法整理"></a><a href="https://salo103.github.io/2023/01/19/%E9%A9%AC%E6%8B%89%E8%BD%A6/">马拉车算法整理</a></h1><h1 id="2023牛客寒假算法基础集训营1"><a href="#2023牛客寒假算法基础集训营1" class="headerlink" title="2023牛客寒假算法基础集训营1"></a><a href="https://ac.nowcoder.com/acm/contest/46800">2023牛客寒假算法基础集训营1</a></h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>模拟</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">int</span> n,m,q;<br><span class="hljs-type">char</span> s[<span class="hljs-number">15</span>];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;s+<span class="hljs-number">1</span>;<br>    <span class="hljs-type">int</span> c1=<span class="hljs-number">0</span>,c2=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">10</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>((i&amp;<span class="hljs-number">1</span>)&amp;&amp;s[i]==<span class="hljs-string">&#x27;1&#x27;</span>)c1++;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((i&amp;<span class="hljs-number">1</span>)==<span class="hljs-number">0</span>&amp;&amp;s[i]==<span class="hljs-string">&#x27;1&#x27;</span>)c2++;<br>        <span class="hljs-keyword">if</span>(c1+(<span class="hljs-number">10</span>-i)/<span class="hljs-number">2</span>&lt;c2||c2+(<span class="hljs-number">11</span>-i)/<span class="hljs-number">2</span>&lt;c1)&#123;<br>            cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-string">&quot;-1\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    cin&gt;&gt;tt;<br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>显然新矩形对角线上那个点为原矩形的一个端点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">double</span> a,b,x,y;<br>    cin&gt;&gt;a&gt;&gt;b&gt;&gt;x&gt;&gt;y;<br>    <span class="hljs-type">double</span> u,v,m,n;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">abs</span>(a-x)&gt;<span class="hljs-built_in">abs</span>(x<span class="hljs-number">-0</span>))m=a;<br>    <span class="hljs-keyword">else</span> m=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">abs</span>(b-y)&gt;<span class="hljs-built_in">abs</span>(y<span class="hljs-number">-0</span>))n=b;<br>    <span class="hljs-keyword">else</span> n=<span class="hljs-number">0</span>;<br>    u=<span class="hljs-built_in">max</span>(<span class="hljs-built_in">abs</span>(a-x),<span class="hljs-built_in">abs</span>(x<span class="hljs-number">-0</span>));<br>    v=<span class="hljs-built_in">max</span>(<span class="hljs-built_in">abs</span>(b-y),<span class="hljs-built_in">abs</span>(y<span class="hljs-number">-0</span>));<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.9f\n&quot;</span>,<span class="hljs-built_in">min</span>(u,a)*<span class="hljs-built_in">min</span>(v,b)/(<span class="hljs-built_in">abs</span>(a*b)+<span class="hljs-built_in">abs</span>((x-m)*(y-n))-<span class="hljs-built_in">min</span>(u,a)*<span class="hljs-built_in">min</span>(v,b)));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    cin&gt;&gt;tt;<br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p>贪心发现100100那样构造就是最贪的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    string tp=<span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-type">int</span> tc=n-m;<br>    <span class="hljs-keyword">while</span>(tc||m)&#123;<br>        <span class="hljs-keyword">if</span>(m)&#123;<br>            m--;<br>            tp+=<span class="hljs-string">&#x27;1&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(tc)&#123;<br>            tc--;<br>            tp+=<span class="hljs-string">&#x27;0&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(tc)&#123;<br>            tc--;<br>            tp+=<span class="hljs-string">&#x27;0&#x27;</span>;<br>        &#125;<br>    &#125;<br>    std::<span class="hljs-built_in">reverse</span>(tp.<span class="hljs-built_in">begin</span>(), tp.<span class="hljs-built_in">end</span>());<br>    <span class="hljs-type">int</span> as=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n<span class="hljs-number">-2</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>(tp[i]==<span class="hljs-string">&#x27;1&#x27;</span>)&#123;<br>            <span class="hljs-type">int</span> cnt=<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">if</span>(i+<span class="hljs-number">1</span>&lt;n&amp;&amp;tp[i+<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;1&#x27;</span>)cnt++;<br>            <span class="hljs-keyword">if</span>(i+<span class="hljs-number">2</span>&lt;n&amp;&amp;tp[i+<span class="hljs-number">2</span>]==<span class="hljs-string">&#x27;1&#x27;</span>)cnt++;<br>            <span class="hljs-keyword">if</span>(cnt&gt;=<span class="hljs-number">2</span>)as++;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><p>从当前已给仙贝量j和给第i个人的仙贝量k写出dp转移方程</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span>=max(dp<span class="hljs-comment">[i-1]</span><span class="hljs-comment">[j-k]</span>+(1.0*k)/j,dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span>);<br></code></pre></td></tr></table></figure><p>总代码:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">int</span> n,m,q;<br><span class="hljs-type">double</span> dp[<span class="hljs-number">505</span>][<span class="hljs-number">505</span>];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;=m;j++)&#123;<br>            dp[i][j]=<span class="hljs-number">-1000000000.0</span>;<br>        &#125;<br>    &#125;<br>    dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">0.0</span>;<br>    <span class="hljs-type">double</span> ans=<span class="hljs-number">0.0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;=j;k++)&#123;<br>                dp[i][j]=<span class="hljs-built_in">max</span>(dp[i<span class="hljs-number">-1</span>][j-k]+(<span class="hljs-number">1.0</span>*k)/j,dp[i][j]);<br>                ans=<span class="hljs-built_in">max</span>(ans,dp[i][j]);<br>            &#125;<br>        &#125;<br>    &#125;<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.9f&quot;</span>,ans);<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>与上一周的用并查集优化下一个符合题意的位置相似,用并查集优化下一个符合条件的位置,复杂度优化为均摊O(n)的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">int</span> a[<span class="hljs-number">100005</span>],f[<span class="hljs-number">100005</span>];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(x!=f[x])<span class="hljs-keyword">return</span> f[x]=<span class="hljs-built_in">find</span>(f[x]);<br>    <span class="hljs-keyword">return</span> x;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i],sum+=a[i],f[i]=i;<br>    f[n+<span class="hljs-number">1</span>]=n+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(m--)&#123;<br>        <span class="hljs-type">int</span> q;<br>        cin&gt;&gt;q;<br>        <span class="hljs-keyword">if</span>(q==<span class="hljs-number">2</span>)&#123;<br>            cout&lt;&lt;sum&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-type">int</span> l,r,k;<br>            cin&gt;&gt;l&gt;&gt;r&gt;&gt;k;<br>            l=<span class="hljs-built_in">find</span>(l);<br>            <span class="hljs-keyword">while</span>(l&lt;=r)&#123;<br>                l=<span class="hljs-built_in">find</span>(l);<br>                <span class="hljs-keyword">if</span>(l&gt;r)<span class="hljs-keyword">break</span>;<br>                <span class="hljs-type">int</span> xx=a[l];<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)&#123;<br>                    a[l]=<span class="hljs-built_in">round</span>(<span class="hljs-number">10.0</span>*<span class="hljs-built_in">sqrt</span>(a[l]));<br>                    <span class="hljs-keyword">if</span>(a[l]==<span class="hljs-number">100</span>||a[l]==<span class="hljs-number">99</span>||a[l]==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;<br>                &#125;<br>                sum+=a[l]-xx;<br>                <span class="hljs-keyword">if</span>(a[l]==<span class="hljs-number">100</span>||a[l]==<span class="hljs-number">99</span>||a[l]==<span class="hljs-number">0</span>)&#123;<br>                    f[l]=<span class="hljs-built_in">find</span>(l+<span class="hljs-number">1</span>);<br>                    l=f[l];<br>                &#125;<br>                <span class="hljs-keyword">else</span> l++;<br>            &#125;<br><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="2023牛客寒假算法基础集训营2"><a href="#2023牛客寒假算法基础集训营2" class="headerlink" title="2023牛客寒假算法基础集训营2"></a><a href="https://ac.nowcoder.com/acm/contest/46810">2023牛客寒假算法基础集训营2</a></h1><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>对区间分类讨论即可,注意取0的情况</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-title">std</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">solve</span>()</span> &#123;<br>        <span class="hljs-built_in">int</span> n;<br>        cin&gt;&gt;n;<br>        <span class="hljs-built_in">int</span> l1,r1;<br>        <span class="hljs-built_in">int</span> l2,r2;<br>        <span class="hljs-built_in">int</span> <span class="hljs-keyword">as</span>=<span class="hljs-number">0</span>;<br>        cin&gt;&gt;l1&gt;&gt;r1;<br>        cin&gt;&gt;l2&gt;&gt;r2;<br>        <span class="hljs-keyword">if</span>(n&lt;=l1)&#123;<br>            cout&lt;&lt;<span class="hljs-number">0</span>&lt;&lt;endl;<br>            <span class="hljs-keyword">return</span> ;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n&gt;l1&amp;&amp;n&lt;=r1)&#123;<br>            <span class="hljs-keyword">as</span>+=max(min(n-l1,r2)-max(<span class="hljs-number">1l</span>l,l2)+<span class="hljs-number">1</span>,<span class="hljs-number">0l</span>l);<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">as</span>+=max(min(n-l1,r2)-max(n-r1,l2)+<span class="hljs-number">1</span>,<span class="hljs-number">0l</span>l);<br><span class="hljs-comment">//             as++;</span><br>        &#125;<br>        cout&lt;&lt;<span class="hljs-keyword">as</span>&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function">signed <span class="hljs-title">main</span>()</span> &#123;<br>    <span class="hljs-built_in">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>先把自己不是</p>]]></content>
    
    
    <categories>
      
      <category>补题</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>马拉车</title>
    <link href="/2023/01/19/%E9%A9%AC%E6%8B%89%E8%BD%A6/"/>
    <url>/2023/01/19/%E9%A9%AC%E6%8B%89%E8%BD%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="马拉车"><a href="#马拉车" class="headerlink" title="马拉车"></a>马拉车</h1><p>应用场景:多次访问ij对的回文串</p><p>原理:维护一个最右回文串的l,r.对于每一个i,如果i大于r,就往右暴力更新这个r,l也更新,如果i小于r,那显然i也会大于l,在l到r找到i的对称点,因为i在l到r中间,那i的最长回文情况就会和对称翻过去的j最长回文情况相同并且和维护的r取个并集</p><p>奇数d1:</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs excel">vector&lt;<span class="hljs-built_in">int</span>&gt; <span class="hljs-symbol">d1</span>(<span class="hljs-built_in">n</span>);<br>for (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>, l = <span class="hljs-number">0</span>, r = -<span class="hljs-number">1</span>; i &lt; <span class="hljs-built_in">n</span>; i++) &#123;<br>  <span class="hljs-built_in">int</span> k = (i &gt; r) ? <span class="hljs-number">1</span> <span class="hljs-symbol">:</span> <span class="hljs-built_in">min</span>(<span class="hljs-symbol">d1</span>[l + r - i], r - i + <span class="hljs-number">1</span>);<br>  while (<span class="hljs-number">0</span> &lt;= i - k &amp;&amp; i + k &lt; <span class="hljs-built_in">n</span> &amp;&amp; s[i - k] == s[i + k]) &#123;<br>    k++;<br>  &#125;<br>  <span class="hljs-symbol">d1</span>[i] = k--;<br>  <span class="hljs-built_in">if</span> (i + k &gt; r) &#123;<br>    l = i - k;<br>    r = i + k;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>偶数d2</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs excel">vector&lt;<span class="hljs-built_in">int</span>&gt; <span class="hljs-symbol">d2</span>(<span class="hljs-built_in">n</span>);<br>for (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>, l = <span class="hljs-number">0</span>, r = -<span class="hljs-number">1</span>; i &lt; <span class="hljs-built_in">n</span>; i++) &#123;<br>  <span class="hljs-built_in">int</span> k = (i &gt; r) ? <span class="hljs-number">0</span> <span class="hljs-symbol">:</span> <span class="hljs-built_in">min</span>(<span class="hljs-symbol">d2</span>[l + r - i + <span class="hljs-number">1</span>], r - i + <span class="hljs-number">1</span>);<br>  while (<span class="hljs-number">0</span> &lt;= i - k - <span class="hljs-number">1</span> &amp;&amp; i + k &lt; <span class="hljs-built_in">n</span> &amp;&amp; s[i - k - <span class="hljs-number">1</span>] == s[i + k]) &#123;<br>    k++;<br>  &#125;<br>  <span class="hljs-symbol">d2</span>[i] = k--;<br>  <span class="hljs-built_in">if</span> (i + k &gt; r) &#123;<br>    l = i - k - <span class="hljs-number">1</span>;<br>    r = i + k;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://codeforces.com/group/L9GOcnr1dm/contest/420349/problem/I">Barbecue</a>                    </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e6</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br>string s;<br><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">d1</span><span class="hljs-params">(maxn)</span></span>;<br><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">d2</span><span class="hljs-params">(maxn)</span></span>;<br><span class="hljs-type">int</span> n,q;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">manacher</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, l = <span class="hljs-number">0</span>, r = <span class="hljs-number">-1</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-type">int</span> k = (i &gt; r) ? <span class="hljs-number">1</span> : <span class="hljs-built_in">min</span>(d1[l + r - i], r - i + <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">0</span> &lt;= i - k &amp;&amp; i + k &lt; n &amp;&amp; s[i - k] == s[i + k]) &#123;<br>            k++;<br>        &#125;<br>        d1[i] = k--;<br>        <span class="hljs-keyword">if</span> (i + k &gt; r) &#123;<br>            l = i - k;<br>            r = i + k;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, l = <span class="hljs-number">0</span>, r = <span class="hljs-number">-1</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-type">int</span> k = (i &gt; r) ? <span class="hljs-number">0</span> : <span class="hljs-built_in">min</span>(d2[l + r - i + <span class="hljs-number">1</span>], r - i + <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">0</span> &lt;= i - k - <span class="hljs-number">1</span> &amp;&amp; i + k &lt; n &amp;&amp; s[i - k - <span class="hljs-number">1</span>] == s[i + k]) &#123;<br>            k++;<br>        &#125;<br>        d2[i] = k--;<br>        <span class="hljs-keyword">if</span> (i + k &gt; r) &#123;<br>            l = i - k - <span class="hljs-number">1</span>;<br>            r = i + k;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">ck</span><span class="hljs-params">(<span class="hljs-type">int</span> l,<span class="hljs-type">int</span> r)</span></span>&#123;<br>    <span class="hljs-type">int</span> loc=(l+r)/<span class="hljs-number">2</span>;<br>    <span class="hljs-type">int</span> mid=(r-l+<span class="hljs-number">1</span>+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">if</span>((r-l+<span class="hljs-number">1</span>)&amp;<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-keyword">if</span>(d1[loc]&gt;=mid)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span>(d2[loc]&gt;=mid)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    cin&gt;&gt;n&gt;&gt;q;<br>    cin&gt;&gt;s;<br>    <span class="hljs-built_in">manacher</span>();<br><span class="hljs-comment">//    cout&lt;&lt;d1[1]&lt;&lt;endl;</span><br>    <span class="hljs-keyword">while</span>(q--)&#123;<br>        <span class="hljs-type">int</span> l,r;<br>        cin&gt;&gt;l&gt;&gt;r;<br>        l--;<br>        r--;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">ck</span>(l,r))&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;Budada\n&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">if</span>((r-l)&amp;<span class="hljs-number">1</span>)&#123;<br>                cout&lt;&lt;<span class="hljs-string">&quot;Budada\n&quot;</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;Putata\n&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法/字符串</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2023冬训week2</title>
    <link href="/2023/01/15/2023%E5%86%AC%E8%AE%ADweek2/"/>
    <url>/2023/01/15/2023%E5%86%AC%E8%AE%ADweek2/</url>
    
    <content type="html"><![CDATA[<h1 id="蓝桥模拟赛2"><a href="#蓝桥模拟赛2" class="headerlink" title="蓝桥模拟赛2"></a><a href="https://www.luogu.com.cn/contest/95104#problems">蓝桥模拟赛2</a></h1><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>硬暴力会t,枚举年份再用年份造回文再判,用年份的话要特判原本的时间,用后面造回文的话应该不用</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">#include &lt;bits/stdc++.h&gt;<br><br>#define int long long<br>using namespace std;<br><span class="hljs-keyword">const</span> int maxn = <span class="hljs-number">5e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-keyword">const</span> int mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-keyword">const</span> int INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br>int a[maxn];<br>struct node&#123;<br>    int <span class="hljs-keyword">val</span>,rk;<br>    bool <span class="hljs-keyword">operator</span>&lt;(<span class="hljs-keyword">const</span> node&amp;b)<span class="hljs-keyword">const</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">val</span>&lt;b.<span class="hljs-keyword">val</span>;<br>    &#125;<br>&#125;;<br>string st;<br>string en;<br>int l,r;<br>map&lt;int,int&gt;mp;<br>bool CK(string x)&#123;<br>    <span class="hljs-keyword">if</span>(x&lt;=st)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    int y=<span class="hljs-number">0</span>;<br><span class="hljs-comment">//    cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;st&lt;&lt;endl;</span><br>    <span class="hljs-keyword">for</span>(int i=<span class="hljs-number">3</span>;i&gt;=<span class="hljs-number">0</span>;i--)&#123;<br>        y=y*<span class="hljs-number">10</span>+x[i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    int yue=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(int i=<span class="hljs-number">4</span>;i&lt;=<span class="hljs-number">5</span>;i++)&#123;<br>        yue=yue*<span class="hljs-number">10</span>+x[i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    int ri=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(int i=<span class="hljs-number">6</span>;i&lt;=<span class="hljs-number">7</span>;i++)&#123;<br>        ri=ri*<span class="hljs-number">10</span>+x[i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br><span class="hljs-comment">//    cout&lt;&lt;y&lt;&lt;&quot; &quot;&lt;&lt;yue&lt;&lt;&quot; &quot;&lt;&lt;ri&lt;&lt;&quot; &quot;;</span><br>    <span class="hljs-keyword">if</span>(y%<span class="hljs-number">400</span>==<span class="hljs-number">0</span>||(y%<span class="hljs-number">100</span>!=<span class="hljs-number">0</span>&amp;&amp;y%<span class="hljs-number">4</span>==<span class="hljs-number">0</span>))&#123;<br>        <span class="hljs-keyword">if</span>(yue==<span class="hljs-number">2</span>)&#123;<br>            <span class="hljs-keyword">if</span>(ri&lt;=<span class="hljs-number">29</span>&amp;&amp;ri&gt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">if</span>(yue&gt;<span class="hljs-number">0</span>&amp;&amp;yue&lt;=<span class="hljs-number">12</span>)&#123;<br>                <span class="hljs-keyword">if</span>(ri&gt;<span class="hljs-number">0</span>&amp;&amp;ri&lt;=mp[yue])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span>(yue&gt;<span class="hljs-number">0</span>&amp;&amp;yue&lt;=<span class="hljs-number">12</span>)&#123;<br>            <span class="hljs-keyword">if</span>(ri&gt;<span class="hljs-number">0</span>&amp;&amp;ri&lt;=mp[yue])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br>bool ck(int x)&#123;<br>    string tt= to_string(x);<br>    string tt2= to_string(x);<br>    std::reverse(tt2.begin(), tt2.end());<br>    tt+=tt2;<br>    en=tt;<br>    <span class="hljs-keyword">if</span>(!CK(tt))<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    l=<span class="hljs-number">0</span>,r=<span class="hljs-number">7</span>;<br>    <span class="hljs-keyword">while</span>(l&lt;=r)&#123;<br>        <span class="hljs-keyword">if</span>(tt[l]!=tt[r])<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        l++,r--;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br>bool ck2(int x)&#123;<br>    string tt= to_string(x);<br>    string tt2= to_string(x);<br>    std::reverse(tt2.begin(), tt2.end());<br>    tt+=tt2;<br>    <span class="hljs-keyword">if</span>(!CK(tt))<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    en=tt;<br>    <span class="hljs-keyword">if</span>(tt[<span class="hljs-number">0</span>]==tt[<span class="hljs-number">2</span>]&amp;&amp;tt[<span class="hljs-number">0</span>]==tt[<span class="hljs-number">5</span>]&amp;&amp;tt[<span class="hljs-number">0</span>]==tt[<span class="hljs-number">7</span>]&amp;&amp;tt[<span class="hljs-number">1</span>]==tt[<span class="hljs-number">3</span>]&amp;&amp;tt[<span class="hljs-number">1</span>]==tt[<span class="hljs-number">4</span>]&amp;&amp;tt[<span class="hljs-number">1</span>]==tt[<span class="hljs-number">6</span>]&amp;&amp;tt[<span class="hljs-number">0</span>]!=tt[<span class="hljs-number">1</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>void solve() &#123;<br>    int x;<br>    cin&gt;&gt;x;<br>    bool f1=<span class="hljs-number">0</span>,f2=<span class="hljs-number">0</span>;<br>    st= to_string(x);<br>    x++;<br>    int xx=x/<span class="hljs-number">10000</span>;<br><span class="hljs-comment">//    cout&lt;&lt;xx&lt;&lt;endl;</span><br><span class="hljs-comment">//    if(ck2(21211212))cout&lt;&lt;&quot;XX&quot;;</span><br>    <span class="hljs-keyword">while</span>(xx&lt;<span class="hljs-number">10000</span>)&#123;<br><span class="hljs-comment">//        cout&lt;&lt;x&lt;&lt;endl;</span><br>        <span class="hljs-keyword">if</span>(ck(xx)&amp;&amp;!f1)&#123;<br>            cout&lt;&lt;en&lt;&lt;endl;<br>            f1=<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(ck2(xx)&amp;&amp;!f2)&#123;<br>            cout&lt;&lt;en&lt;&lt;endl;<br>            f2=<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(f1&amp;&amp;f2)<span class="hljs-keyword">return</span> ;<br>        xx++;<br>    &#125;<br>&#125;<br><br>int32_t main() &#123;<br>    mp[<span class="hljs-number">1</span>]=<span class="hljs-number">31</span>;<br>    mp[<span class="hljs-number">2</span>]=<span class="hljs-number">28</span>;<br>    mp[<span class="hljs-number">3</span>]=<span class="hljs-number">31</span>;<br>    mp[<span class="hljs-number">4</span>]=<span class="hljs-number">30</span>;<br>    mp[<span class="hljs-number">5</span>]=<span class="hljs-number">31</span>;<br>    mp[<span class="hljs-number">6</span>]=<span class="hljs-number">30</span>;<br>    mp[<span class="hljs-number">7</span>]=<span class="hljs-number">31</span>;<br>    mp[<span class="hljs-number">8</span>]=<span class="hljs-number">31</span>;<br>    mp[<span class="hljs-number">9</span>]=<span class="hljs-number">30</span>;<br>    mp[<span class="hljs-number">10</span>]=<span class="hljs-number">31</span>;<br>    mp[<span class="hljs-number">11</span>]=<span class="hljs-number">30</span>;<br>    mp[<span class="hljs-number">12</span>]=<span class="hljs-number">31</span>;<br><span class="hljs-comment">//    ios::sync_with_stdio(false);</span><br><span class="hljs-comment">//    cin.tie(0), cout.tie(0);</span><br>    int T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>注意事先去重和相交同一点的讨论</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br>pair&lt;<span class="hljs-type">double</span>,<span class="hljs-type">double</span>&gt;a[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    set&lt;pair&lt;<span class="hljs-type">double</span>,<span class="hljs-type">double</span>&gt;&gt;ss;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i].first&gt;&gt;a[i].second;<br>        ss.<span class="hljs-built_in">insert</span>(a[i]);<br>    &#125;<br>    <span class="hljs-type">int</span> tot=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:ss)&#123;<br>        a[++tot]=i;<br>    &#125;<br>    <span class="hljs-type">int</span> as=<span class="hljs-number">2</span>;<br>    map&lt;pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;,<span class="hljs-type">int</span>&gt;mp;<br>    set&lt;pair&lt;<span class="hljs-type">double</span>,<span class="hljs-type">double</span>&gt;&gt;s;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=tot;i++)&#123;<br>        s.<span class="hljs-built_in">clear</span>();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">1</span>;j--)&#123;<br>            <span class="hljs-keyword">if</span>(i==j)<span class="hljs-keyword">continue</span>;<br>            <span class="hljs-keyword">if</span>(a[i].first==a[j].first&amp;&amp;a[i].second==a[j].second)<span class="hljs-keyword">continue</span>;<br>            <span class="hljs-keyword">if</span>(a[i].first==a[j].first);<br>            <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-type">double</span> x=(a[j].second-a[i].second)/(a[i].first-a[j].first);<br>                <span class="hljs-type">double</span> y=a[i].first*x+a[i].second;<br>                s.<span class="hljs-built_in">insert</span>(&#123;x,y&#125;);<br>            &#125;<br>        &#125;<br>            as += s.<span class="hljs-built_in">size</span>() + <span class="hljs-number">1</span>;<br>    &#125;<br>    cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//    ios::sync_with_stdio(false);</span><br><span class="hljs-comment">//    cin.tie(0), cout.tie(0);</span><br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>看清题干用的是大写字母而不是小写字母</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br>map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">char</span>&gt;mp;<br><span class="hljs-function">string <span class="hljs-title">update</span><span class="hljs-params">(<span class="hljs-type">int</span> val,<span class="hljs-type">int</span> jz)</span></span>&#123;<br>    string  res=<span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">while</span>(val)&#123;<br>        res+=mp[val%jz];<br>        val/=jz;<br>    &#125;<br>    std::<span class="hljs-built_in">reverse</span>(res.<span class="hljs-built_in">begin</span>(), res.<span class="hljs-built_in">end</span>());<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=i;j++)&#123;<br>            cout&lt;&lt;<span class="hljs-built_in">update</span>(i,n)&lt;&lt;<span class="hljs-string">&quot;*&quot;</span>&lt;&lt;<span class="hljs-built_in">update</span>(j,n)&lt;&lt;<span class="hljs-string">&quot;=&quot;</span>&lt;&lt;<span class="hljs-built_in">update</span>(i*j,n)&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>        &#125;<br>        cout&lt;&lt;endl;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">9</span>;i++)&#123;<br>        mp[i]=(<span class="hljs-type">char</span>)(<span class="hljs-string">&#x27;0&#x27;</span>+i);<br>    &#125;<br>    <span class="hljs-type">char</span> op=<span class="hljs-string">&#x27;A&#x27;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">10</span>;i&lt;=<span class="hljs-number">36</span>;i++)&#123;<br>        mp[i]=op;<br>        op++;<br>    &#125;<br><span class="hljs-comment">//    cout&lt;&lt;mp[26]&lt;&lt;endl;</span><br><span class="hljs-comment">//    ios::sync_with_stdio(false);</span><br><span class="hljs-comment">//    cin.tie(0), cout.tie(0);</span><br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="SMU-Winter-2023-Round-3-Div-1"><a href="#SMU-Winter-2023-Round-3-Div-1" class="headerlink" title="SMU Winter 2023 Round #3 (Div.1)"></a><a href="https://codeforces.com/group/L9GOcnr1dm/contest/420348">SMU Winter 2023 Round #3 (Div.1)</a></h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>阅读题,读出题意判断当前轮次即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> k,t,n;<br>    cin&gt;&gt;k&gt;&gt;t&gt;&gt;n;<br><span class="hljs-comment">//    t++;</span><br>    <span class="hljs-type">int</span> tk=(t+n+<span class="hljs-number">1</span>)/k+((t+n+<span class="hljs-number">1</span>)%k!=<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span>(tk&amp;<span class="hljs-number">1</span>)cout&lt;&lt;<span class="hljs-string">&quot;Thiago\n&quot;</span>;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;Nathan\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>找到最大质因数的那个数,可以先对那个数取根号,然后遍历根号范围下的质数对原数一直除,注意是2*大质数这样的情况,所以对除剩下的部分和除过的质数取max即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> vis[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    vector&lt;<span class="hljs-type">int</span>&gt;pre;<br>    <span class="hljs-type">int</span> ma= <span class="hljs-built_in">sqrt</span>(<span class="hljs-number">1e8</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=ma;i++)&#123;<br>        <span class="hljs-keyword">if</span>(vis[i])<span class="hljs-keyword">continue</span>;<br>        <span class="hljs-keyword">if</span>(!vis[i])&#123;<br>            pre.<span class="hljs-built_in">push_back</span>(i);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;i*j&lt;=ma;j++)&#123;<br>            vis[i*j]=i;<br>        &#125;<br>    &#125;<br>    <span class="hljs-type">int</span> tas=<span class="hljs-number">0</span>;<br><span class="hljs-comment">//    cout&lt;&lt;pre.size()&lt;&lt;endl;</span><br>    string ss;<br>    unordered_map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;mp;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        string s;<span class="hljs-type">int</span> a;<br>        cin&gt;&gt;s&gt;&gt;a;<br>        <span class="hljs-keyword">if</span>(mp[a])&#123;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-type">int</span> Last=<span class="hljs-number">1</span>;<br><span class="hljs-comment">//        bool f=0;</span><br>        <span class="hljs-type">int</span> ta=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=pre.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">0</span>;j--)&#123;<br>            <span class="hljs-keyword">while</span>(a%pre[j]==<span class="hljs-number">0</span>)&#123;<br>                ta=<span class="hljs-built_in">max</span>(pre[j],ta);<br>                a/=pre[j];<br>            &#125;<br>        &#125;<br>        ta=<span class="hljs-built_in">max</span>(ta,a);<br>        <span class="hljs-keyword">if</span>(tas&lt;ta)&#123;<br>            tas=ta;ss=s;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;ss&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>就对底边和侧边讨论,Vca其实决定的就是三圆的交点在哪,使总面积最大的应该就是把最长边平分,然后剩下那条边现算一个交点求面积,可用不等式证明把最长边平分时三圆总面积最大</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">double</span> x,y;<br>    cin&gt;&gt;x&gt;&gt;y;<br>    <span class="hljs-type">double</span> v1,v2;<br>    cin&gt;&gt;v1&gt;&gt;v2;<br>    <span class="hljs-type">double</span> ce=<span class="hljs-built_in">sqrt</span>(((x/<span class="hljs-number">2</span>)*(x/<span class="hljs-number">2</span>)+y*y));<br><span class="hljs-comment">//    cout&lt;&lt;ce&lt;&lt;endl;</span><br>    <span class="hljs-type">double</span> xx=<span class="hljs-built_in">max</span>(ce,x)/<span class="hljs-number">2</span>;<br>    <span class="hljs-type">double</span> t=(x-xx)/v1;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.15f&quot;</span>,xx/t);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//    ios::sync_with_stdio(false);</span><br><span class="hljs-comment">//    cin.tie(0), cout.tie(0);</span><br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>注意一下直接求和就可以</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> ta=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(n--)&#123;<br>        <span class="hljs-type">int</span> x;<br>        cin&gt;&gt;x;<br>        ta+=x;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(ta&gt;<span class="hljs-number">0</span>)cout&lt;&lt;<span class="hljs-string">&quot;:)&quot;</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ta==<span class="hljs-number">0</span>)cout&lt;&lt;<span class="hljs-string">&quot;:|&quot;</span>;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;:(&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="E-1"><a href="#E-1" class="headerlink" title="E"></a>E</h2><p>正解应是并查集＋二分</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">int</span> a[<span class="hljs-number">200005</span>],f[<span class="hljs-number">200005</span>],vis[<span class="hljs-number">200005</span>];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(x!=f[x])<span class="hljs-keyword">return</span> f[x]=<span class="hljs-built_in">find</span>(f[x]);<br>    <span class="hljs-keyword">return</span> x;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,q;<br>    cin&gt;&gt;n&gt;&gt;q;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+n+<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        f[i]=i;<br>    &#125;<br>    f[n+<span class="hljs-number">1</span>]=n+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=q;i++)&#123;<br>        <span class="hljs-type">int</span> x;<br>        cin&gt;&gt;x;<br>        <span class="hljs-type">int</span> l=<span class="hljs-number">1</span>,r=n,mid=l+r&gt;&gt;<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span>(x&gt;a[n])&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;-1\n&quot;</span>;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">while</span>(l&lt;r)&#123;<br>            <span class="hljs-keyword">if</span>(a[mid]&lt;x)l=mid+<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">if</span>(a[mid<span class="hljs-number">-1</span>]&lt;x)&#123;<br>                    r=mid;<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    r=mid<span class="hljs-number">-1</span>;<br>                &#125;<br>            &#125;<br>            mid=l+r&gt;&gt;<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(vis[mid])&#123;<br>            mid=<span class="hljs-built_in">find</span>(mid);<br>            <span class="hljs-keyword">if</span>(mid==n+<span class="hljs-number">1</span>)&#123;<br>                cout&lt;&lt;<span class="hljs-string">&quot;-1\n&quot;</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> &#123;<br>                vis[mid]=<span class="hljs-number">1</span>,f[mid]=mid+<span class="hljs-number">1</span>;<br>                cout&lt;&lt;a[mid]&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            vis[mid]=<span class="hljs-number">1</span>,f[mid]=mid+<span class="hljs-number">1</span>;<br>            cout&lt;&lt;a[mid]&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="H-1"><a href="#H-1" class="headerlink" title="H"></a>H</h2><p>组合数找规律</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> as=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n<span class="hljs-number">-3</span>;i++)&#123;<br>        <span class="hljs-type">int</span> ta=n-i<span class="hljs-number">-3</span>;<br>        <span class="hljs-keyword">if</span>(ta+<span class="hljs-number">1</span>&gt;<span class="hljs-number">0</span>)<br>        as+=ta+<span class="hljs-number">1</span>;<br>    &#125;<br><span class="hljs-comment">//    as*=3;</span><br>    cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>离线+前缀和数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> pre1[maxn];<br><span class="hljs-type">int</span> pre2[maxn];<br><span class="hljs-type">int</span> pre3[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> tot=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)pre3[i]=INF;<br>    pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;p[maxn];<br>    unordered_map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;mp;<br>    <span class="hljs-keyword">while</span>(n--)&#123;<br>        <span class="hljs-type">int</span> op;<br>        cin&gt;&gt;op;<br>        <span class="hljs-type">int</span> x;<br>        cin&gt;&gt;x;<br>        p[++tot].first=op;<br>        p[tot].second=x;<br>        <span class="hljs-keyword">if</span>(op==<span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-keyword">if</span>(!mp[x])&#123;<br>                mp[x]=<span class="hljs-number">1</span>;<br>                sum+=x;<br>            &#125;<br>            pre1[tot]=x;<br>            pre2[tot]=x;<br>            pre3[tot]=x;<br>        &#125;<br>    &#125;<br>    pre3[<span class="hljs-number">0</span>]=INF;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=tot;i++)&#123;<br>        pre1[i]+=pre1[i<span class="hljs-number">-1</span>];<br>        pre2[i]=<span class="hljs-built_in">max</span>(pre2[i],pre2[i<span class="hljs-number">-1</span>]);<br>        pre3[i]=<span class="hljs-built_in">min</span>(pre3[i],pre3[i<span class="hljs-number">-1</span>]);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=tot;i++)&#123;<br>        <span class="hljs-keyword">if</span>(p[i].first==<span class="hljs-number">2</span>)cout&lt;&lt;pre2[p[i].second]&lt;&lt;endl;<br>        <span class="hljs-keyword">if</span>(p[i].first==<span class="hljs-number">3</span>)cout&lt;&lt;pre3[p[i].second]&lt;&lt;endl;<br>        <span class="hljs-keyword">if</span>(p[i].first==<span class="hljs-number">4</span>)cout&lt;&lt;pre1[p[i].second]&lt;&lt;endl;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="SMU-Winter-2023-Round-4-Div-1"><a href="#SMU-Winter-2023-Round-4-Div-1" class="headerlink" title="SMU Winter 2023 Round #4 (Div.1) "></a><a href="https://codeforces.com/group/L9GOcnr1dm/contest/420349">SMU Winter 2023 Round #4 (Div.1) </a></h1><h2 id="A-1"><a href="#A-1" class="headerlink" title="A"></a>A</h2><p>注意b-a差值为偶数时那个偶数除2还是偶数的情况</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> a,b;<br>    cin&gt;&gt;a&gt;&gt;b;<br>    <span class="hljs-keyword">if</span>(b==a)&#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;0\n&quot;</span>;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(b&gt;a)&#123;<br>        <span class="hljs-keyword">if</span>((b-a)&amp;<span class="hljs-number">1</span>)&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;1\n&quot;</span>;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">if</span>(((b-a)/<span class="hljs-number">2</span>)%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)cout&lt;&lt;<span class="hljs-number">3</span>&lt;&lt;endl;<br>            <span class="hljs-keyword">else</span><br>            cout&lt;&lt;<span class="hljs-string">&quot;2\n&quot;</span>;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>((a-b)&amp;<span class="hljs-number">1</span>)&#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;2\n&quot;</span>;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;1\n&quot;</span>;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    cin&gt;&gt;tt;<br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><p>用前缀和或者栈把每一种答案算出来即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">int</span> a[<span class="hljs-number">1000005</span>];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+n+<span class="hljs-number">1</span>);<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>,ans=<span class="hljs-number">0</span>,cnt=<span class="hljs-number">0</span>;<br>    queue&lt;<span class="hljs-type">int</span>&gt;q;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        q.<span class="hljs-built_in">push</span>(a[i]);<br>        cnt++;<br>        sum+=a[i];<br>        <span class="hljs-keyword">while</span>(cnt&amp;&amp;q.<span class="hljs-built_in">front</span>()*i&lt;=sum)q.<span class="hljs-built_in">pop</span>(),cnt--;<br>        ans=<span class="hljs-built_in">max</span>(ans,cnt);<br>    &#125;<br>    cout&lt;&lt;ans&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><p>纯模拟,从花心入手,两个比较近的花心就只能是第一种</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include &lt;bits/stdc++.h&gt;<br><br>using namespace std;<br><br>#define int long long<br><br>void init()&#123;<br>    ios::sync_with_stdio(false);<br>    cin.tie(<span class="hljs-number">0</span>);<br>    cout.tie(<span class="hljs-number">0</span>);<br>&#125;<br><br>int mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br>char mp[<span class="hljs-number">1005</span>][<span class="hljs-number">1005</span>];<br>int a[<span class="hljs-number">1005</span>][<span class="hljs-number">1005</span>];<br><br>void solve()&#123;<br>    int n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;mp[i+<span class="hljs-number">1</span>];<br>    &#125;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n<span class="hljs-number">-4</span>;i++)&#123;<br>        for(int j=<span class="hljs-number">1</span>;j&lt;=m<span class="hljs-number">-4</span>;j++)&#123;<br>            int bb=<span class="hljs-number">1</span>;<br>            for(int k=<span class="hljs-number">-1</span>;k&lt;=<span class="hljs-number">4</span>;k++)&#123;<br>                if(mp[i+k][j<span class="hljs-number">-1</span>]!=<span class="hljs-string">&#x27;#&#x27;</span>)bb=<span class="hljs-number">0</span>;<br>                if(mp[i+k][j+<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;#&#x27;</span>)bb=<span class="hljs-number">0</span>;<br>                if(mp[i+<span class="hljs-number">4</span>][j+k]!=<span class="hljs-string">&#x27;#&#x27;</span>)bb=<span class="hljs-number">0</span>;<br>                if(mp[i<span class="hljs-number">-1</span>][j+k]!=<span class="hljs-string">&#x27;#&#x27;</span>)bb=<span class="hljs-number">0</span>;<br>            &#125;<br>            if(bb==<span class="hljs-number">0</span>)&#123;<br>                continue;<br>            &#125;<br>            int b=<span class="hljs-number">0</span>;<br>            for(int k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">4</span>;k++)&#123;<br>                for(int l=<span class="hljs-number">0</span>;l&lt;<span class="hljs-number">4</span>;l++)&#123;<br>                    if(mp[i+k][j+l]==<span class="hljs-string">&#x27;#&#x27;</span>)b++;<br>                &#125;<br>            &#125;<br>            if(mp[i][j]==<span class="hljs-string">&#x27;#&#x27;</span>&amp;&amp;mp[i+<span class="hljs-number">3</span>][j]==<span class="hljs-string">&#x27;#&#x27;</span><br>            &amp;&amp;mp[i][j+<span class="hljs-number">3</span>]==<span class="hljs-string">&#x27;#&#x27;</span>&amp;&amp;mp[i+<span class="hljs-number">3</span>][j+<span class="hljs-number">3</span>]==<span class="hljs-string">&#x27;#&#x27;</span>&amp;&amp;b==<span class="hljs-number">4</span>) &#123;<br>                //cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;j&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>                a[i][j] = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    int a1=<span class="hljs-number">0</span>,a2=<span class="hljs-number">0</span>;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        for(int j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>            if(a[i][j]==<span class="hljs-number">1</span>)&#123;<br>                if(i+<span class="hljs-number">7</span>&lt;=n&amp;&amp;a[i+<span class="hljs-number">7</span>][j])&#123;<br>                    a[i][j]==<span class="hljs-number">0</span>;<br>                    a[i+<span class="hljs-number">7</span>][j]=<span class="hljs-number">0</span>;<br>                    a1++;<br>                &#125;<br>                else if(i<span class="hljs-number">-7</span>&gt;<span class="hljs-number">0</span>&amp;&amp;a[i<span class="hljs-number">-7</span>][j])&#123;<br>                    a[i][j]==<span class="hljs-number">0</span>;<br>                    a[i<span class="hljs-number">-7</span>][j]=<span class="hljs-number">0</span>;<br>                    a1++;<br>                &#125;<br>                else if(j+<span class="hljs-number">7</span>&lt;=m&amp;&amp;a[i][j+<span class="hljs-number">7</span>])&#123;<br>                    a[i][j]==<span class="hljs-number">0</span>;<br>                    a[i][j+<span class="hljs-number">7</span>]=<span class="hljs-number">0</span>;<br>                    a1++;<br>                &#125;<br>                else if(j<span class="hljs-number">-7</span>&gt;<span class="hljs-number">0</span>&amp;&amp;a[i][j<span class="hljs-number">-7</span>])&#123;<br>                    a[i][j]==<span class="hljs-number">0</span>;<br>                    a[i][j<span class="hljs-number">-7</span>]=<span class="hljs-number">0</span>;<br>                    a1++;<br>                &#125;<br>                else a2++;<br>            &#125;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;a1&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a2&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br>signed main() &#123;<br>    init();<br>    int tt=<span class="hljs-number">1</span>;<br>    //cin&gt;&gt;tt;<br>    while(tt--)&#123;<br>        solve();<br>    &#125;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>相当于是在完全图上跑dij,注意一下判3s能不能跑完即可,一些计算写成函数会简单一点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e3</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">double</span> a[maxn][maxn];<br><span class="hljs-type">int</span> b[maxn];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">di</span>&#123;<br>    <span class="hljs-type">int</span> x,y;<br>&#125;;<br>di x[maxn];<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">bool</span> vis[maxn];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span>&#123;<br>    <span class="hljs-type">int</span> st;<span class="hljs-type">double</span> val;<br>    <span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span>&lt;(<span class="hljs-type">const</span> node &amp;w)<span class="hljs-type">const</span>&#123;<br>        <span class="hljs-keyword">return</span> val&gt;w.val;<br>    &#125;<br>&#125;;<br><span class="hljs-function"><span class="hljs-type">double</span> <span class="hljs-title">cal</span><span class="hljs-params">(<span class="hljs-type">int</span> idx1,<span class="hljs-type">int</span> idx2)</span></span>&#123;<br>    <span class="hljs-type">int</span> xx=<span class="hljs-built_in">abs</span>(x[idx1].x-x[idx2].x);<br>    <span class="hljs-type">int</span> yy=<span class="hljs-built_in">abs</span>(x[idx1].y-x[idx2].y);<br>    <span class="hljs-keyword">return</span>  <span class="hljs-built_in">sqrt</span>(xx*xx+yy*yy);<br>&#125;<br><span class="hljs-type">int</span> v1,v2;<br><span class="hljs-type">double</span> dist[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dij</span><span class="hljs-params">()</span></span>&#123;<br>    priority_queue&lt;node&gt;q;<br>    dist[n+<span class="hljs-number">2</span>]=<span class="hljs-number">0</span>;<br>    q.<span class="hljs-built_in">push</span>(&#123;n+<span class="hljs-number">2</span>,<span class="hljs-number">0</span>&#125;);<br>    <span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())&#123;<br>        node now=q.<span class="hljs-built_in">top</span>();<br>        q.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-keyword">if</span>(vis[now.st])<span class="hljs-keyword">continue</span>;<br>        vis[now.st]=<span class="hljs-number">1</span>;<br>        dist[now.st]=now.val;<br><span class="hljs-comment">//        cout&lt;&lt;now.st&lt;&lt;&quot; &quot;&lt;&lt;now.val&lt;&lt;endl;</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n+<span class="hljs-number">1</span>;i++)&#123;<br>            <span class="hljs-keyword">if</span>(i==now.st)<span class="hljs-keyword">continue</span>;<br>            <span class="hljs-keyword">if</span>(vis[i])<span class="hljs-keyword">continue</span>;<br>            <span class="hljs-type">double</span> len=<span class="hljs-built_in">cal</span>(now.st,i);<br>            <span class="hljs-keyword">if</span>(now.st==n+<span class="hljs-number">2</span>||now.st==n+<span class="hljs-number">1</span>)&#123;<br>                dist[i]=<span class="hljs-built_in">min</span>(dist[i],len/v1);<br>            &#125;<br>            <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-type">double</span> tt=<span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">if</span>(len&gt;<span class="hljs-number">3.0</span>*v2)tt=(len<span class="hljs-number">-3.0</span>*v2)/v1+<span class="hljs-number">3.0</span>;<br>                <span class="hljs-keyword">else</span> tt=len/v2;<br>                dist[i] = <span class="hljs-built_in">min</span>(dist[i],tt);<br>            &#125;<br>            q.<span class="hljs-built_in">push</span>(&#123;i,dist[now.st]+dist[i]&#125;);<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.12f&quot;</span>,dist[n+<span class="hljs-number">1</span>]);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n+<span class="hljs-number">2</span>;i++)&#123;<br>        cin&gt;&gt;x[i].x&gt;&gt;x[i].y;<br>        dist[i]=INF;<br>    &#125;<br>    <span class="hljs-built_in">swap</span>(x[n+<span class="hljs-number">1</span>],x[n+<span class="hljs-number">2</span>]);<br><span class="hljs-comment">//    cout&lt;&lt;x[n+1].x&lt;&lt;&quot; &quot;&lt;&lt;x[n+1].y&lt;&lt;endl;</span><br><span class="hljs-comment">//    cout&lt;&lt;x[n+2].x&lt;&lt;&quot; &quot;&lt;&lt;x[n+2].y&lt;&lt;endl;</span><br>    cin&gt;&gt;v1&gt;&gt;v2;<br>    <span class="hljs-built_in">dij</span>();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//    ios::sync_with_stdio(false);</span><br><span class="hljs-comment">//    cin.tie(0), cout.tie(0);</span><br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="I-1"><a href="#I-1" class="headerlink" title="I"></a>I</h2><p>显然如果询问区间本身不是回文那按照这个玩法直到剩一个字母前都不会是回文,那只跟区间长度的奇偶性有关了,区间判回文就得上板子算法,马拉车字符串hash啥的</p><p><a href="https://salo103.github.io/2023/01/19/%E9%A9%AC%E6%8B%89%E8%BD%A6/">马拉车算法整理</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e6</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br>string s;<br><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">d1</span><span class="hljs-params">(maxn)</span></span>;<br><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">d2</span><span class="hljs-params">(maxn)</span></span>;<br><span class="hljs-type">int</span> n,q;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">manacher</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, l = <span class="hljs-number">0</span>, r = <span class="hljs-number">-1</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-type">int</span> k = (i &gt; r) ? <span class="hljs-number">1</span> : <span class="hljs-built_in">min</span>(d1[l + r - i], r - i + <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">0</span> &lt;= i - k &amp;&amp; i + k &lt; n &amp;&amp; s[i - k] == s[i + k]) &#123;<br>            k++;<br>        &#125;<br>        d1[i] = k--;<br>        <span class="hljs-keyword">if</span> (i + k &gt; r) &#123;<br>            l = i - k;<br>            r = i + k;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, l = <span class="hljs-number">0</span>, r = <span class="hljs-number">-1</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-type">int</span> k = (i &gt; r) ? <span class="hljs-number">0</span> : <span class="hljs-built_in">min</span>(d2[l + r - i + <span class="hljs-number">1</span>], r - i + <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">0</span> &lt;= i - k - <span class="hljs-number">1</span> &amp;&amp; i + k &lt; n &amp;&amp; s[i - k - <span class="hljs-number">1</span>] == s[i + k]) &#123;<br>            k++;<br>        &#125;<br>        d2[i] = k--;<br>        <span class="hljs-keyword">if</span> (i + k &gt; r) &#123;<br>            l = i - k - <span class="hljs-number">1</span>;<br>            r = i + k;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">ck</span><span class="hljs-params">(<span class="hljs-type">int</span> l,<span class="hljs-type">int</span> r)</span></span>&#123;<br>    <span class="hljs-type">int</span> loc=(l+r)/<span class="hljs-number">2</span>;<br>    <span class="hljs-type">int</span> mid=(r-l+<span class="hljs-number">1</span>+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">if</span>((r-l+<span class="hljs-number">1</span>)&amp;<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-keyword">if</span>(d1[loc]&gt;=mid)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span>(d2[loc]&gt;=mid)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    cin&gt;&gt;n&gt;&gt;q;<br>    cin&gt;&gt;s;<br>    <span class="hljs-built_in">manacher</span>();<br><span class="hljs-comment">//    cout&lt;&lt;d1[1]&lt;&lt;endl;</span><br>    <span class="hljs-keyword">while</span>(q--)&#123;<br>        <span class="hljs-type">int</span> l,r;<br>        cin&gt;&gt;l&gt;&gt;r;<br>        l--;<br>        r--;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">ck</span>(l,r))&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;Budada\n&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">if</span>((r-l)&amp;<span class="hljs-number">1</span>)&#123;<br>                cout&lt;&lt;<span class="hljs-string">&quot;Budada\n&quot;</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;Putata\n&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--)  &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>补题</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2023冬训week1</title>
    <link href="/2023/01/07/2023%E5%86%AC%E8%AE%ADweek1/"/>
    <url>/2023/01/07/2023%E5%86%AC%E8%AE%ADweek1/</url>
    
    <content type="html"><![CDATA[<h1 id="蓝桥模拟赛1"><a href="#蓝桥模拟赛1" class="headerlink" title="蓝桥模拟赛1"></a>蓝桥模拟赛1</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p><a href="https://www.luogu.com.cn/problem/P8599?contestId=95102">A</a></p><p>剪枝dfs,枚举分子,整数部分,分子,分母的数位和小于等于9剪枝</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><span class="hljs-meta">#define int long long</span><br><span class="hljs-keyword">using</span> namespace std;<br>const <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e6</span> + <span class="hljs-number">5</span>;<br>const <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br>const <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> vis[<span class="hljs-number">11</span>];<br><span class="hljs-type">int</span> tx;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">int</span> <span class="hljs-keyword">as</span>=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> cnt[<span class="hljs-number">11</span>];<br><span class="hljs-type">int</span> cs[maxn];<br><span class="hljs-type">bool</span> ck()&#123;<br>    <span class="hljs-keyword">if</span>(cnt[<span class="hljs-number">0</span>]&gt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> tas=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">9</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>(cnt[i]&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">if</span>(cnt[i]==<span class="hljs-number">1</span>)tas++;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(tas==<span class="hljs-number">9</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-type">void</span> dfs(<span class="hljs-type">int</span> tot,<span class="hljs-type">int</span> now)&#123;<br>    <span class="hljs-keyword">if</span>(tot&gt;=<span class="hljs-number">5</span>)<span class="hljs-keyword">return</span> ;<br>    <span class="hljs-keyword">if</span>(tot&gt;=<span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = now; i / now &lt;= n; i += now) &#123;<br>                <span class="hljs-type">int</span> tp = i;<br>                <span class="hljs-type">int</span> tc=tot;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;=<span class="hljs-number">9</span>;j++)cnt[j]=vis[j];<br>                <span class="hljs-keyword">while</span> (tp) &#123;<br>                    cnt[tp % <span class="hljs-number">10</span>]++;<br>                    tp /= <span class="hljs-number">10</span>;<br>                    tc++;<br>                &#125;<br>                <span class="hljs-keyword">if</span>(tc&gt;<span class="hljs-number">9</span>)break;<br>                    <span class="hljs-type">int</span> tpp=n-i/now;<br>                    <span class="hljs-keyword">while</span>(tpp)&#123;<br>                        cnt[tpp%<span class="hljs-number">10</span>]++;<br>                        tpp/=<span class="hljs-number">10</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span>(ck()) &#123;<br>                        <span class="hljs-keyword">as</span>++;<br>                    &#125;<br><br>            &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">9</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>(!vis[i]) &#123;<br>            vis[i] = <span class="hljs-number">1</span>;<br>            dfs(tot + <span class="hljs-number">1</span>, now * <span class="hljs-number">10</span> + i);<br>            vis[i]=<span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br><br>&#125;<br><span class="hljs-type">void</span> solve() &#123;<br>    cin&gt;&gt;n;<br>    dfs(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>    cout&lt;&lt;<span class="hljs-keyword">as</span>&lt;&lt;endl;<br>&#125;<br><br>int32_t main() &#123;<br>    ios::sync_with_stdio(<span class="hljs-keyword">false</span>);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br>//    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T<span class="hljs-comment">--) &#123;</span><br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p><a href="https://www.luogu.com.cn/problem/P8684?contestId=95102">D</a></p><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p><a href="https://www.luogu.com.cn/problem/P8683?contestId=95102">E</a></p><p>因为可以随意造后缀表达式,所以可以随意填括号,因此贪心前n个正前m个负会有问题,因为可以通过添括号使得原本应该是正号的的负数转换为负号或者原本是负号的正数转换为正号,所以应该对正负号的数量和原数组的正负数关系进行分类讨论</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> ts=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n+m+<span class="hljs-number">1</span>;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        ts+=<span class="hljs-built_in">abs</span>(a[i]);<br>        sum+=a[i];<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+n+m+<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">if</span>(m==<span class="hljs-number">0</span>)&#123;<br>        cout&lt;&lt;sum&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span>(a[n+m+<span class="hljs-number">1</span>]&lt;<span class="hljs-number">0</span>)&#123;<br>            ts+=<span class="hljs-number">2</span>*a[n+m+<span class="hljs-number">1</span>];<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>]&gt;<span class="hljs-number">0</span>)&#123;<br>            ts-=<span class="hljs-number">2</span>*a[<span class="hljs-number">1</span>];<br>        &#125;<br>        cout&lt;&lt;ts&lt;&lt;endl;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>类似的题:<a href="https://codeforces.com/gym/103470/problem/M">Windblume Festival</a></p><p>虽然有位置关系限制,其实影响不大,同样是分类讨论</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e6</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><br><span class="hljs-type">int</span> a[N];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>, maxn = -INF, minn = INF, f = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        cin &gt;&gt; a[i];<br>        <span class="hljs-keyword">if</span> (a[i] &gt; <span class="hljs-number">0</span>) f = <span class="hljs-number">1</span>;<br>        minn = <span class="hljs-built_in">min</span>(minn, a[i]);<br>        maxn = <span class="hljs-built_in">max</span>(maxn, a[i]);<br>        sum += <span class="hljs-built_in">abs</span>(a[i]);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(n == <span class="hljs-number">1</span>) &#123;<br>        cout &lt;&lt; a[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (!f) &#123;<br>        sum += <span class="hljs-number">2</span> * maxn;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (minn &gt;= <span class="hljs-number">0</span>) &#123;<br>        sum -= <span class="hljs-number">2</span> * minn;<br>    &#125;<br>    cout &lt;&lt; sum &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br><br>    <span class="hljs-type">int</span> T;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p><a href="https://www.luogu.com.cn/problem/P8682?contestId=95102">F</a></p><p>排序后两两差值取gcd,注意特判两数相等即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];<br>    <span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+n);<br>    <span class="hljs-type">int</span> tcz;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-type">int</span> cz=a[i]-a[i<span class="hljs-number">-1</span>];<br>        <span class="hljs-keyword">if</span>(cz==<span class="hljs-number">0</span>)&#123;<br>            cout&lt;&lt;n&lt;&lt;endl;<br>            <span class="hljs-keyword">return</span> ;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(i==<span class="hljs-number">2</span>)tcz=cz;<br>        <span class="hljs-keyword">else</span> tcz=__gcd(tcz,cz);<br>    &#125;<br>    cout&lt;&lt;(a[n]-a[<span class="hljs-number">1</span>])/tcz+<span class="hljs-number">1</span>&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="CF-Hello-2023"><a href="#CF-Hello-2023" class="headerlink" title="CF Hello 2023"></a>CF Hello 2023</h1><p><a href="https://codeforces.com/contest/1779">Hello 2023</a></p><h2 id="A-1"><a href="#A-1" class="headerlink" title="A"></a>A</h2><p>有转向为L,R的灯,照的距离无限,问是否能动一次就照满</p><p>找出一对RL即可,有LR就存L的坐标进行操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    string s;<br>    cin&gt;&gt;s;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;s.<span class="hljs-built_in">size</span>();i++)&#123;<br>        <span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;R&#x27;</span>)&#123;<br>            <span class="hljs-keyword">if</span>(i+<span class="hljs-number">1</span>&lt;s.<span class="hljs-built_in">size</span>()&amp;&amp;s[i+<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;L&#x27;</span>)&#123;<br>                cout&lt;&lt;<span class="hljs-number">0</span>&lt;&lt;endl;<br>                <span class="hljs-keyword">return</span> ;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">if</span>(i+<span class="hljs-number">1</span>&lt;s.<span class="hljs-built_in">size</span>()&amp;&amp;s[i+<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;R&#x27;</span>)&#123;<br>                cout&lt;&lt;i+<span class="hljs-number">1</span>&lt;&lt;endl;<br>                <span class="hljs-keyword">return</span> ;<br>            &#125;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>一种比较好想的构造方法就是一正一负,奇位和偶位所有数字一样,偶数好解决+1,-1即可,奇数的话设奇数位为x,偶数位为y</p><p>随便造一个x+y&#x3D;-1;</p><p>有(n&#x2F;2+1)*x+(n&#x2F;2)*y&#x3D;-1;</p><p>联立解的x&#x3D;n&#x2F;2-1,y&#x3D;-n&#x2F;2</p><p>因为题目要求不能有0,那n等于3时和x冲突,把3特判掉即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">st</span>&#123;<br>    <span class="hljs-type">int</span> x,y;<br>&#125;s1[<span class="hljs-number">200005</span>],s2[<span class="hljs-number">200005</span>];<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(st a,st b)</span></span>&#123;<br>    <span class="hljs-keyword">return</span> a.x&lt;b.x;<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> vis[<span class="hljs-number">30</span>];<br><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">if</span>(n&amp;<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-keyword">if</span>(n==<span class="hljs-number">3</span>)&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;NO\n&quot;</span>;<br>            <span class="hljs-keyword">return</span> ;<br>        &#125;<br>        cout&lt;&lt;<span class="hljs-string">&quot;YES\n&quot;</span>;<br>        <span class="hljs-type">int</span> t1=n/<span class="hljs-number">2</span><span class="hljs-number">-1</span>;<br>        <span class="hljs-type">int</span> t2=-n/<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            <span class="hljs-keyword">if</span>(i&amp;<span class="hljs-number">1</span>)cout&lt;&lt;t1&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>            <span class="hljs-keyword">else</span> cout&lt;&lt;t2&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>        &#125;<br>        cout&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;YES\n&quot;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            <span class="hljs-keyword">if</span>(i&amp;<span class="hljs-number">1</span>)cout&lt;&lt;<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>            <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>        &#125;<br>        cout&lt;&lt;endl;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    cin&gt;&gt;tt;<br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>每次操作可以让一个数变成他的相反数,要使第k个前缀和是所有前缀和的最小值</p><p>从第k个数出发,往前的前缀和一直要小于0,往后的前缀和一直要大于0,如果出现不符合的,就最贪心改极值,并且因为一直是小于0或大于0的,那改一次极值就一定可以符合条件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>)&#123;<br>        cout&lt;&lt;<span class="hljs-number">0</span>&lt;&lt;endl;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-type">int</span> as=<span class="hljs-number">0</span>;<br>    priority_queue&lt;<span class="hljs-type">int</span>,vector&lt;<span class="hljs-type">int</span>&gt;,greater&lt;<span class="hljs-type">int</span>&gt;&gt;q;<br>    priority_queue&lt;<span class="hljs-type">int</span>&gt;q2;<br><span class="hljs-comment">//    q.push(1);</span><br><span class="hljs-comment">//    q.push(2);</span><br><span class="hljs-comment">//    q.push(3);</span><br><span class="hljs-comment">//    while(!q.empty())&#123;</span><br><span class="hljs-comment">//        cout&lt;&lt;q.top()&lt;&lt;endl;</span><br><span class="hljs-comment">//        q.pop();</span><br><span class="hljs-comment">//    &#125;</span><br><span class="hljs-comment">//    cout&lt;&lt;&quot;X&quot;&lt;&lt;endl;</span><br>    <span class="hljs-type">int</span> ta=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<br>        ta+=a[i];<br>    &#125;<br>    <span class="hljs-type">int</span> now1=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = m ;i&gt;=<span class="hljs-number">2</span>;i--)&#123;<br>        now1=now1+a[i];<br>        q2.<span class="hljs-built_in">push</span>(a[i]);<br>        <span class="hljs-keyword">if</span>(now1&gt;<span class="hljs-number">0</span>)&#123;<br>            now1+=<span class="hljs-number">2</span>*(<span class="hljs-number">-1</span>)*q2.<span class="hljs-built_in">top</span>();<br>            as++;<br>            q2.<span class="hljs-built_in">pop</span>();<br>        &#125;<br>    &#125;<br>    now1=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=m+<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        now1=now1+a[i];<br>        q.<span class="hljs-built_in">push</span>(a[i]);<br>        <span class="hljs-keyword">if</span>(now1&lt;<span class="hljs-number">0</span>)&#123;<br>            now1+=<span class="hljs-number">2</span>*(<span class="hljs-number">-1</span>)*q.<span class="hljs-built_in">top</span>();<br>            q.<span class="hljs-built_in">pop</span>();<br>            as++;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-1"><a href="#D-1" class="headerlink" title="D"></a>D</h2><p>给原本的数组a,目标数组b,有m把剪刀,每把剪刀可以任意取一段区间,使得区间的所有大于xi数都变为xi,问是否a数组能变成b数组</p><p>从剪刀入手,剪刀的xi小于等于bi是其实完全没用影响,即可以剪少不能剪多,相当于每把剪刀尽量贪心用得最多,那可以把每根目标头发的坐标都存起来.枚举所有剪刀,每次都可以剪去一段连续区间极大值小于xi的头发,因为xi剪去bi!&#x3D;xi的头发其实没有意义,相当于一直剪去长度为xi的头发,直到这两根xi的头发区间极大值要大于xi时就不能剪了,因为不能剪多,所以这把剪刀就用完了,换下一把剪刀,贪心把所有剪刀都用完了,如果还有目标头发没剪完的,就是不合题意得</p><p>维护区间极值用的是线段树,应该也可以用树状数组</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><span class="hljs-meta">#define int long long</span><br><span class="hljs-keyword">using</span> namespace std;<br>const <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br>const <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br>const <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-type">int</span> b[maxn];<br><span class="hljs-type">int</span> x[maxn];<br><span class="hljs-type">bool</span> vis[maxn];<br>struct node&#123;<br>    <span class="hljs-type">int</span> l,r,ma;<br>&#125;;<br>node t[maxn*<span class="hljs-number">4</span>];<br><span class="hljs-type">void</span> build(<span class="hljs-type">int</span> l,<span class="hljs-type">int</span> r,<span class="hljs-type">int</span> idx)&#123;<br>    t[idx].l=l;<br>    t[idx].r=r;<br>    <span class="hljs-keyword">if</span>(r==l)&#123;<br>        t[idx].ma=b[l];<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-type">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;<br>        build(l,mid,idx*<span class="hljs-number">2</span>);<br>        build(mid+<span class="hljs-number">1</span>,r,idx*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>);<br>        t[idx].ma=max(t[idx*<span class="hljs-number">2</span>].ma,t[idx*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>].ma);<br>    &#125;<br>&#125;<br><span class="hljs-type">int</span> query(<span class="hljs-type">int</span> l,<span class="hljs-type">int</span> r,<span class="hljs-type">int</span> idx)&#123;<br>    <span class="hljs-keyword">if</span>(t[idx].l==l&amp;&amp;t[idx].r==r)&#123;<br>        <span class="hljs-keyword">return</span> t[idx].ma;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-type">int</span> mid=(t[idx].l+t[idx].r)&gt;&gt;<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span>(r&lt;=mid)&#123;<br>            <span class="hljs-keyword">return query</span>(l,r,idx*<span class="hljs-number">2</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l&gt;mid)&#123;<br>            <span class="hljs-keyword">return query</span>(l,r,idx*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> max(query(l,mid,idx*<span class="hljs-number">2</span>),query(mid+<span class="hljs-number">1</span>,r,idx*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>));<br>    &#125;<br>&#125;<br><span class="hljs-type">void</span> solve() &#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-type">bool</span> f=<span class="hljs-number">0</span>;<br>    cin&gt;&gt;n;unordered_map&lt;<span class="hljs-type">int</span>,queue&lt;<span class="hljs-type">int</span>&gt;&gt;mpp;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i],vis[i]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;b[i];<br>        <br>        <span class="hljs-keyword">if</span>(b[i]&lt;a[i])mpp[b[i]].push(i);<br>        <span class="hljs-keyword">if</span>(b[i]&gt;a[i])f=<span class="hljs-number">1</span>;<br>    &#125;<br>    build(<span class="hljs-number">1</span>,n,<span class="hljs-number">1</span>);<br>    <span class="hljs-type">int</span> m;<br>    cin&gt;&gt;m;<br>    map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;mp;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)cin&gt;&gt;x[i],mp[x[i]]++;<br>    <span class="hljs-keyword">if</span>(f)&#123;<br>        cout&lt;&lt;&quot;NO\n&quot;;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(auto i:mp)&#123;<br>        <span class="hljs-keyword">while</span>(i.second&gt;<span class="hljs-number">0</span>)&#123;<br>            i.second<span class="hljs-comment">--;</span><br>            <span class="hljs-keyword">if</span>(mpp[i.first].empty())break;<br>            <span class="hljs-type">int</span> now=mpp[i.first].front();<br>            mpp[i.first].pop();<br>            vis[now]=<span class="hljs-number">1</span>;<br>            <span class="hljs-type">int</span> tt=i.first;<br>            <span class="hljs-keyword">while</span>(!mpp[tt].empty())&#123;<br>                <span class="hljs-type">int</span> nw=mpp[tt].front();<br>                <span class="hljs-keyword">if</span>(query(now,nw,<span class="hljs-number">1</span>)&lt;=tt)&#123;<br>                    mpp[tt].pop();<br>                    now=nw;<br>                &#125;<br>                <span class="hljs-keyword">else</span> break;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(auto i:mpp)&#123;<br>        <span class="hljs-keyword">if</span>(!i.second.empty())&#123;<br>//            cout&lt;&lt;i.first&lt;&lt;endl;<br>            cout&lt;&lt;&quot;NO\n&quot;;<br>            <span class="hljs-keyword">return</span> ;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;&quot;YES\n&quot;;<br>&#125;<br><br>int32_t main() &#123;<br>    ios::sync_with_stdio(<span class="hljs-keyword">false</span>);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T<span class="hljs-comment">--) &#123;</span><br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Codeforces-Round-841-Div-2-and-Divide-by-Zero-2022"><a href="#Codeforces-Round-841-Div-2-and-Divide-by-Zero-2022" class="headerlink" title="Codeforces Round #841 (Div. 2) and Divide by Zero 2022"></a><a href="https://codeforces.com/contest/1731">Codeforces Round #841 (Div. 2) and Divide by Zero 2022</a></h1><h2 id="B-1"><a href="#B-1" class="headerlink" title="B"></a>B</h2><p>画图推公式,根据平方和公式n(n+1)(2n+1)&#x2F;6求解</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e6</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ksm</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span>&#123;<br>    <span class="hljs-type">int</span> res=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(y)&#123;<br>        <span class="hljs-keyword">if</span>(y&amp;<span class="hljs-number">1</span>)res=res*x%mod;<br>        x=x*x%mod;<br>        y&gt;&gt;=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> tp=((n*(n+<span class="hljs-number">1</span>)%mod*(<span class="hljs-number">2</span>*n%mod+<span class="hljs-number">1</span>)%mod)%mod*<span class="hljs-built_in">ksm</span>(<span class="hljs-number">6ll</span>,mod<span class="hljs-number">-2</span>)%mod+((n<span class="hljs-number">-1</span>)*(n)%mod*(<span class="hljs-number">2</span>*(n<span class="hljs-number">-1</span>)%mod+<span class="hljs-number">1</span>)%mod)%mod*<span class="hljs-built_in">ksm</span>(<span class="hljs-number">6ll</span>,mod<span class="hljs-number">-2</span>)+n*(n<span class="hljs-number">-1</span>)%mod*<span class="hljs-built_in">ksm</span>(<span class="hljs-number">2ll</span>,mod<span class="hljs-number">-2</span>)+mod)%mod;<br>    tp=tp*<span class="hljs-number">2022</span>%mod;<br>    cout&lt;&lt;tp&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-1"><a href="#C-1" class="headerlink" title="C"></a>C</h2><h2 id="D-2"><a href="#D-2" class="headerlink" title="D"></a>D</h2><p>二分答案＋二维前缀和</p><p>二维前缀和用法:</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs inform7">for(int i=1;i&lt;=n;i++)&#123;<br>    for(int j=1;j&lt;=m;j++)&#123;<br>        dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span>=dp<span class="hljs-comment">[i-1]</span><span class="hljs-comment">[j]</span>+dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j-1]</span>-dp<span class="hljs-comment">[i-1]</span><span class="hljs-comment">[j-1]</span>+(vec<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span>&gt;=x);<br>    &#125;<br>&#125;<br>for(int i=x;i&lt;=n;i++)&#123;<br>    for(int j=x;j&lt;=m;j++)&#123;<br>           if(dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span>-dp<span class="hljs-comment">[i-x]</span><span class="hljs-comment">[j]</span>-dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j-x]</span>+dp<span class="hljs-comment">[i-x]</span><span class="hljs-comment">[j-x]</span>==x*x)return 1;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e6</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-comment">//    vector&lt;int&gt;vec[n+1];</span><br>    <span class="hljs-function">vector <span class="hljs-title">dp</span><span class="hljs-params">(n+<span class="hljs-number">1</span>,vector&lt;<span class="hljs-type">int</span>&gt;(m+<span class="hljs-number">1</span>,<span class="hljs-number">0</span>))</span></span>;<br>    <span class="hljs-function">vector <span class="hljs-title">vec</span><span class="hljs-params">(n+<span class="hljs-number">1</span>,vector&lt;<span class="hljs-type">int</span>&gt;(m+<span class="hljs-number">1</span>,<span class="hljs-number">0</span>))</span></span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><span class="hljs-comment">//        vec[i].push_back(0);</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>            cin&gt;&gt;vec[i][j];<br>        &#125;<br>    &#125;<br>    <span class="hljs-type">int</span> as=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> l=<span class="hljs-number">1</span>,r=<span class="hljs-built_in">min</span>(n,m);<br>    <span class="hljs-keyword">while</span>(l&lt;=r)&#123;<br>        <span class="hljs-type">int</span> mid=(l+r)/<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">auto</span> Check = [&amp;](<span class="hljs-type">int</span> x)-&gt;<span class="hljs-type">bool</span>&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>                    dp[i][j]=dp[i<span class="hljs-number">-1</span>][j]+dp[i][j<span class="hljs-number">-1</span>]-dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+(vec[i][j]&gt;=x);<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=x;i&lt;=n;i++)&#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=x;j&lt;=m;j++)&#123;<br>                       <span class="hljs-keyword">if</span>(dp[i][j]-dp[i-x][j]-dp[i][j-x]+dp[i-x][j-x]==x*x)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Check</span>(mid))&#123;<br>            as=<span class="hljs-built_in">max</span>(as,mid);<br>            l=mid+<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> r=mid<span class="hljs-number">-1</span>;<br>    &#125;<br>        cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>类似的题:</p><p>F.统计子矩阵题目</p><p>给定一个 N × M 的矩阵A，请你统计有多少个子矩阵(最小 1 × 1，最大 N × M) 满足：<br>子矩阵中所有数的和不超过给定的整数K?<br>输入格式<br>第一行包含三个整数N, M 和K.<br>之后 N 行每行包含 M 个整数，代表矩阵A.<br>30%的测试数据：1≤N,M≤20；<br>70%的测试数据：1≤N,M≤100；<br>100%的测试数据：1≤N,M≤500；0≤Aij≤1000；1≤K≤250000000。<br>输出格式</p><p>一个整数代表答案。<br>输入样例</p><p>3 4 10<br>1 2 3 4<br>5 6 7 8<br>9 10 11 12<br>输出样例</p><p>19<br>数据范围与提示</p><p>满足条件的子矩阵一共有19，包含：<br>大小为1 × 1 的有10 个。<br>大小为1 × 2 的有3 个。<br>大小为1 × 3 的有2 个。<br>大小为1 × 4 的有1 个。<br>大小为2 × 1 的有3 个。</p><p>一维前缀和＋双指针,枚举左右边界i,j,然后用类似于尺取的方法双指针枚举答案,尺取从上往下取</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><span class="hljs-meta">#define int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> maxn = <span class="hljs-number">5e2</span> + <span class="hljs-number">5</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> <span class="hljs-keyword">mod</span> = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-built_in">int</span> a[maxn][maxn];<br><span class="hljs-keyword">void</span> solve() &#123;<br>    <span class="hljs-built_in">int</span> n,m,k;<br>    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>            cin&gt;&gt;a[i][j];<br>            a[i][j]+=a[i][j<span class="hljs-number">-1</span>];<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">int</span> <span class="hljs-keyword">as</span>=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> j=i;j&lt;=m;j++)&#123;<br>            <span class="hljs-comment">//定左右边界</span><br>            <span class="hljs-built_in">int</span> <span class="hljs-keyword">sum</span>=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> l=<span class="hljs-number">1</span>,r=<span class="hljs-number">1</span>;r&lt;=n;r++)&#123;<br>                <span class="hljs-keyword">sum</span>+=a[r][j]-a[r][i<span class="hljs-number">-1</span>];<br>                <span class="hljs-keyword">while</span>(<span class="hljs-keyword">sum</span>&gt;k&amp;&amp;l&lt;=r)&#123;<br>                    <span class="hljs-keyword">sum</span>-=a[l][j]-a[l][i<span class="hljs-number">-1</span>];<br>                    l++;<br>                &#125;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">sum</span>&lt;=k&amp;&amp;l&lt;=r)<span class="hljs-keyword">as</span>+=r-l+<span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-comment">//尺取</span><br>        &#125;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-keyword">as</span>&lt;&lt;endl;<br>&#125;<br><br>int32_t main() &#123;<br>    ios::sync_with_stdio(<span class="hljs-literal">false</span>);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    <span class="hljs-built_in">int</span> T=<span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="SMU-Winter-2023-Round-1-Div-1"><a href="#SMU-Winter-2023-Round-1-Div-1" class="headerlink" title="SMU Winter 2023 Round #1 (Div.1)"></a><a href="https://codeforces.com/group/L9GOcnr1dm/contest/418659">SMU Winter 2023 Round #1 (Div.1)</a></h1><h2 id="D-3"><a href="#D-3" class="headerlink" title="D"></a>D</h2><p>推出答案组成后可推出答案表达式,二分答案即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-type">int</span> l=<span class="hljs-number">1</span>,r=m,mid=l+r&gt;&gt;<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(l&lt;r)&#123;<br>        <span class="hljs-keyword">if</span>((m/mid+<span class="hljs-number">1</span>)*(m/mid)/<span class="hljs-number">2</span>*mid+m%mid*(m/mid+<span class="hljs-number">1</span>)&lt;=n)r=mid;<br>        <span class="hljs-keyword">else</span> l=mid+<span class="hljs-number">1</span>;<br>        mid=l+r&gt;&gt;<span class="hljs-number">1</span>;<br>    &#125;<br>    cout&lt;&lt;mid&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    cin&gt;&gt;tt;<br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="F-1"><a href="#F-1" class="headerlink" title="F"></a>F</h2><p>从余数入手推出dp转移方程,枚举余数,再枚举当前位的ai,应该也可以用滚动数组优化</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> a[<span class="hljs-number">10005</span>],dp[<span class="hljs-number">10005</span>][<span class="hljs-number">55</span>];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;m;j++)&#123;<br>            dp[i][j]=<span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<br>    dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;m;j++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;m;k++)&#123;<br>                <span class="hljs-type">int</span> b=<span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">if</span>(a[i]%m&gt;=(j-k+m)%m)b=<span class="hljs-number">1</span>;<br>                dp[i][j]=(dp[i][j]+dp[i<span class="hljs-number">-1</span>][k]*(a[i]/m+b)%mod)%mod;<br>            &#125;<br>            <span class="hljs-comment">//cout&lt;&lt;dp[i][j]&lt;&lt;&quot; &quot;;</span><br>        &#125;<br>        <span class="hljs-comment">//cout&lt;&lt;&quot;\n&quot;;</span><br>    &#125;<br>    cout&lt;&lt;dp[n][<span class="hljs-number">0</span>]&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    cin&gt;&gt;tt;<br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><h2 id="E-1"><a href="#E-1" class="headerlink" title="E"></a>E</h2><h1 id="Codeforces-Round-842-Div-2"><a href="#Codeforces-Round-842-Div-2" class="headerlink" title="Codeforces Round #842 (Div. 2)"></a><a href="https://codeforces.com/contest/1768">Codeforces Round #842 (Div. 2)</a></h1><h2 id="B-2"><a href="#B-2" class="headerlink" title="B"></a>B</h2><p>找到最小那个必须要操作的数,比他大的所有数都必须要操作,也仅需该数及比他大的所有数即可,一个数后面有比他小的数那该数就必须要操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n,k;<br>    cin&gt;&gt;n&gt;&gt;k;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];<br>    <span class="hljs-type">int</span> num=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> mi=n+<span class="hljs-number">1</span>;<br>    <span class="hljs-type">int</span> mo=n+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=n;i&gt;=<span class="hljs-number">1</span>;i--)&#123;<br>        mi=<span class="hljs-built_in">min</span>(mi,a[i]);<br>        <span class="hljs-keyword">if</span>(a[i]&gt;mi)mo=<span class="hljs-built_in">min</span>(a[i],mo);<br>    &#125;<br>    num=(n-mo+<span class="hljs-number">1</span>);<br>    cout&lt;&lt;num/k+(num%k!=<span class="hljs-number">0</span>)&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-2"><a href="#C-2" class="headerlink" title="C"></a>C</h2><p>把ai先放p,p放不了(前面存过这个值)就放q,得到一个插的数数量总和是n的p,q数组,然后p,q没用过的数通过数值与该数值在p,q的位置贪心插即可</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#include &lt;bits/stdc++.h&gt;</span><br><span class="hljs-comment">#define int long long</span><br>using namespace std;<br>const <span class="hljs-keyword">int</span> maxn = <span class="hljs-number">2</span>e5 + <span class="hljs-number">5</span>;<br>const <span class="hljs-keyword">int</span> mod = <span class="hljs-number">1</span>e9+<span class="hljs-number">7</span>;<br>const <span class="hljs-keyword">int</span> INF = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-keyword">int</span> a[maxn];<br><span class="hljs-keyword">int</span> p[maxn];<br><span class="hljs-keyword">int</span> <span class="hljs-string">q[maxn]</span>;<br><span class="hljs-keyword">int</span> cnt[maxn];<br><span class="hljs-keyword">int</span> cnt2[maxn];<br>struct node&#123;<br>    <span class="hljs-keyword">int</span> val,idx;<br>    bool operator&lt;(const node &amp;b)const&#123;<br>        <span class="hljs-keyword">return</span> val&gt;b.val;<br>    &#125;<br>&#125;;<br>void solve() &#123;<br>    <span class="hljs-keyword">int</span> n;<br>    cin&gt;&gt;n;<br>    vector&lt;node&gt;<span class="hljs-keyword">vec</span>;<br>    vector&lt;node&gt;vec2;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i],cnt[i]=<span class="hljs-number">0</span>,p[i]=<span class="hljs-number">0</span>,<span class="hljs-string">q[i]</span>=<span class="hljs-number">0</span>,cnt2[i]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(!cnt[a[i]])&#123;<br>            cnt[a[i]]++;<br>            vec.push_back(&#123;a[i],i&#125;);<br>            p[i]=a[i];<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-string">q[i]</span>=a[i],cnt2[a[i]]++;<br>            vec2.push_back(&#123;a[i],i&#125;);<br>            <span class="hljs-keyword">if</span>(cnt2[a[i]]&gt;<span class="hljs-number">1</span>)&#123;<br>                cout&lt;&lt;<span class="hljs-string">&quot;NO\n&quot;</span>;<br>                <span class="hljs-keyword">return</span> ;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">sort</span>(vec.begin(),vec.end());<br>    <span class="hljs-keyword">sort</span>(vec2.begin(),vec2.end());<br>    vector&lt;<span class="hljs-keyword">int</span>&gt;v1;<br>    vector&lt;<span class="hljs-keyword">int</span>&gt;v2;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=n;i&gt;=<span class="hljs-number">1</span>;i--)&#123;<br>       <span class="hljs-keyword">if</span>(!cnt2[i])&#123;<br>           v1.push_back(i);<br>       &#125;<br>       <span class="hljs-keyword">if</span>(!cnt[i])&#123;<br>           v2.push_back(i);<br>       &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;vec.size();i++)&#123;<br>        <span class="hljs-string">q[vec[i]</span>.idx]=v1[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;vec2.size();i++)&#123;<br>        p[vec2[i].idx]=v2[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(max(p[i],<span class="hljs-string">q[i]</span>)!=a[i])&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;NO\n&quot;</span>;<br>            <span class="hljs-keyword">return</span> ;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-string">&quot;YES\n&quot;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cout&lt;&lt;p[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>    cout&lt;&lt;endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cout&lt;&lt;<span class="hljs-string">q[i]</span>&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>    cout&lt;&lt;endl;<br>&#125;<br><br>int32_t main() &#123;<br>    ios::sync_with_stdio(false);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">int</span> T=<span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-4"><a href="#D-4" class="headerlink" title="D"></a>D</h2><h1 id="SMU-Winter-2023-Round-2-Div-1"><a href="#SMU-Winter-2023-Round-2-Div-1" class="headerlink" title="SMU Winter 2023 Round #2 (Div.1)"></a><a href="https://codeforces.com/group/L9GOcnr1dm/contest/418660">SMU Winter 2023 Round #2 (Div.1)</a></h1><h2 id="J-1"><a href="#J-1" class="headerlink" title="J"></a>J</h2><p>数在哪边不影响奇偶,对原数求和判奇偶即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">st</span>&#123;<br>    <span class="hljs-type">int</span> x,y;<br>&#125;s1[<span class="hljs-number">200005</span>],s2[<span class="hljs-number">200005</span>];<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(st a,st b)</span></span>&#123;<br>    <span class="hljs-keyword">return</span> a.x&lt;b.x;<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> vis[<span class="hljs-number">500005</span>];<br><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> x,ans=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;x,ans+=x;<br>    <span class="hljs-keyword">if</span>(ans&amp;<span class="hljs-number">1</span>)&#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;Alice\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;Bob\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><p>纯模拟,注意模拟的时候直接枚举k会好模拟很多</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">st</span>&#123;<br>    <span class="hljs-type">int</span> x,y;<br>&#125;s1[<span class="hljs-number">200005</span>],s2[<span class="hljs-number">200005</span>];<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(st a,st b)</span></span>&#123;<br>    <span class="hljs-keyword">return</span> a.x&lt;b.x;<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> a[<span class="hljs-number">1005</span>],b[<span class="hljs-number">1005</span>];<br><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,m,k;<br>    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)a[i]=i,b[i]=i+n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)&#123;<br>        <span class="hljs-type">int</span> x=i%n;<br>        <span class="hljs-keyword">if</span>(x==<span class="hljs-number">0</span>)x=n;<br>        <span class="hljs-keyword">if</span>(i%m==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">swap</span>(a[x],b[x]);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cout&lt;&lt;a[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cout&lt;&lt;b[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-3"><a href="#B-3" class="headerlink" title="B"></a>B</h2><p>纯模拟,注意存上一次攻击英雄时间时应该在出了心之钢之后赋初值,且该初值应该小于等于-30</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> a[<span class="hljs-number">1000005</span>],c[<span class="hljs-number">200005</span>];<br><br>pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;Last[<span class="hljs-number">6</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> h1,h2,m;<br>    cin&gt;&gt;h1&gt;&gt;h2&gt;&gt;m;<br>    <span class="hljs-type">int</span> now=h1;<br>    <span class="hljs-type">bool</span> f=<span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">while</span>(m--)&#123;<br>        <span class="hljs-type">int</span> mm,ss;<br><br>        <span class="hljs-type">int</span> op;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lld:%lld %lld&quot;</span>,&amp;mm,&amp;ss,&amp;op);<br><span class="hljs-comment">//        cout&lt;&lt;mm&lt;&lt;&quot; &quot;&lt;&lt;ss&lt;&lt;&quot; &quot;&lt;&lt;op&lt;&lt;endl;</span><br>        <span class="hljs-keyword">if</span>(op==<span class="hljs-number">2</span>)&#123;<br>            now+=h2;<br><span class="hljs-comment">//            cout&lt;&lt;h2&lt;&lt;endl;</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(op==<span class="hljs-number">1</span>)&#123;<br>            f=<span class="hljs-number">1</span>;<br>            now+=<span class="hljs-number">800</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">5</span>;i++)&#123;<br>                Last[i]=&#123;<span class="hljs-number">-30</span>,<span class="hljs-number">-30</span>&#125;;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-type">int</span> tot;<br>            cin&gt;&gt;tot;<br>            <span class="hljs-keyword">if</span>(f&amp;&amp;(mm-Last[tot].first)*<span class="hljs-number">60</span>+ss-Last[tot].second&gt;=<span class="hljs-number">30</span>)&#123;<br>                Last[tot].first=mm;<br>                Last[tot].second=ss;<br>                <span class="hljs-type">int</span> atk=<span class="hljs-number">125</span>+<span class="hljs-number">0.06</span>*now;<br>                now+=atk*<span class="hljs-number">0.1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;now&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//    init();</span><br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="F-2"><a href="#F-2" class="headerlink" title="F"></a>F</h2><p>只要所有人先减m*bi的血,然后每一个人算一次最后能活所需要的最少操作次数,排序后贪心取即可,注意血到0也会算死,那血量直接减多1即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> a[<span class="hljs-number">1000005</span>],b[<span class="hljs-number">1000005</span>],c[<span class="hljs-number">1000005</span>],t[<span class="hljs-number">1000005</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,m,k;<br>    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;b[i];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;c[i];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        a[i]=a[i]-m*b[i];<br>        a[i]--;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(a[i]&gt;<span class="hljs-number">0</span>)t[i]=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">else</span>&#123;<br>            a[i]=<span class="hljs-built_in">abs</span>(a[i]);<br>            t[i]=a[i]/c[i]+(a[i]%c[i]!=<span class="hljs-number">0</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-type">int</span> as=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> now=k;<br>    <span class="hljs-built_in">sort</span>(t+<span class="hljs-number">1</span>,t+<span class="hljs-number">1</span>+n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        now-=t[i];<br>        <span class="hljs-keyword">if</span>(now&gt;=<span class="hljs-number">0</span>)as++;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;<br>    &#125;<br>    cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p>对每一位都讨论取0或者取1,然后跑一次这个操作序列,能得到每一位取0或者取1通过这个操作序列算出来会是几,每一次询问从前往后每一位贪心取(先取该位初值为0再取该位初值为1),该位在a范围内能取1就取1,就能算得答案</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">st</span>&#123;<br>    <span class="hljs-type">int</span> x,y;<br>&#125;s1[<span class="hljs-number">200005</span>],s2[<span class="hljs-number">200005</span>];<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(st a,st b)</span></span>&#123;<br>    <span class="hljs-keyword">return</span> a.x&lt;b.x;<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> a[<span class="hljs-number">35</span>][<span class="hljs-number">5</span>],b[<span class="hljs-number">200005</span>],c[<span class="hljs-number">200005</span>];<br><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,q;<br>    cin&gt;&gt;n&gt;&gt;q;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;b[i]&gt;&gt;c[i];<br>    &#125;<br>    <span class="hljs-type">int</span> x=<span class="hljs-built_in">pow</span>(<span class="hljs-number">2ll</span>,<span class="hljs-number">32ll</span>)<span class="hljs-number">-1ll</span>,y=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(b[i]==<span class="hljs-number">1</span>)x&amp;=c[i],y&amp;=c[i];<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b[i]==<span class="hljs-number">2</span>)x|=c[i],y|=c[i];<br>        <span class="hljs-keyword">else</span> x^=c[i],y^=c[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">30</span>;i++)&#123;<br>        a[i][<span class="hljs-number">1</span>]=(x&amp;(<span class="hljs-number">1ll</span>&lt;&lt;i));<br>        a[i][<span class="hljs-number">2</span>]=(y&amp;(<span class="hljs-number">1ll</span>&lt;&lt;i));<br>        <span class="hljs-comment">//cout&lt;&lt;a[i][1]&lt;&lt;&quot; &quot;&lt;&lt;a[i][2]&lt;&lt;&quot;\n&quot;;</span><br>    &#125;<br>    <span class="hljs-keyword">while</span>(q--)&#123;<br>        <span class="hljs-type">int</span> z;<br>        cin&gt;&gt;z;<br>        <span class="hljs-type">int</span> bb=<span class="hljs-number">0</span>,ans=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">30</span>;i&gt;=<span class="hljs-number">0</span>;i--)&#123;<br>            <span class="hljs-keyword">if</span>(a[i][<span class="hljs-number">2</span>]&amp;&amp;(z&amp;(<span class="hljs-number">1ll</span>&lt;&lt;i)))&#123;<br>                bb=<span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">if</span>(a[i][<span class="hljs-number">1</span>])&#123;<br>                    <span class="hljs-keyword">if</span>(bb==<span class="hljs-number">1</span>||(z&amp;(<span class="hljs-number">1ll</span>&lt;&lt;i)))ans+=(<span class="hljs-number">1ll</span>&lt;&lt;i);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">if</span>(z&amp;(<span class="hljs-number">1ll</span>&lt;&lt;i))bb=<span class="hljs-number">1</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>        cout&lt;&lt;ans&lt;&lt;<span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>记原串字母种类数x.</p><p>第一种方法枚举第一个字母可能的值,剩下n-1个位置用当前枚举的字母来算,记在当前枚举的字母下剩下可用的字母数量为y,</p><p>as+&#x3D;C(y,n-1).</p><p>第二种方法即在x种字母中取出n个字母的全排列</p><p>即as+&#x3D;A(x,n)</p><p>两种方法之间的容斥为第二种方法中算得的所有全有序的数量</p><p>即as-&#x3D;C(x,n)</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><br><span class="hljs-keyword">using</span> namespace std;<br><br><span class="hljs-meta">#define int long long</span><br><br><span class="hljs-type">void</span> init()&#123;<br>    ios::sync_with_stdio(<span class="hljs-keyword">false</span>);<br>    cin.tie(<span class="hljs-number">0</span>);<br>    cout.tie(<span class="hljs-number">0</span>);<br>&#125;<br><br>struct st&#123;<br>    <span class="hljs-type">int</span> x,y;<br>&#125;s1[<span class="hljs-number">200005</span>],s2[<span class="hljs-number">200005</span>];<br><br><span class="hljs-type">bool</span> cmp(st a,st b)&#123;<br>    <span class="hljs-keyword">return</span> a.x&lt;b.x;<br>&#125;<br><br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> vis[<span class="hljs-number">30</span>];<br><br><br><span class="hljs-type">void</span> solve()&#123;<br>    string s;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;s&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">18</span>;i++)vis[i]=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> x=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;s.size();i++)&#123;<br>        <span class="hljs-keyword">if</span>(!vis[s[i]-<span class="hljs-string">&#x27;a&#x27;</span>+<span class="hljs-number">1</span>])x++,vis[s[i]-<span class="hljs-string">&#x27;a&#x27;</span>+<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">19</span>-n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(vis[i]) &#123;<br>            <span class="hljs-type">int</span> y=<span class="hljs-number">18</span>-i,res=<span class="hljs-number">1</span>;<br>            <span class="hljs-type">int</span> t1=<span class="hljs-number">1</span>,t2=<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n<span class="hljs-number">-1</span>;j++)&#123;<br>                <span class="hljs-keyword">if</span>(y&gt;<span class="hljs-number">0</span>)t1*=y;<br>                y<span class="hljs-comment">--;</span><br>                t2*=j;<br>            &#125;<br>            res=t1/t2;<br>            ans+=res;<br>        &#125;<br>    &#125;<br>    //cout&lt;&lt;&quot;ans=&quot;&lt;&lt;ans&lt;&lt;&quot;\n&quot;;<br>    //cout&lt;&lt;&quot;x==&quot;&lt;&lt;x&lt;&lt;&quot;\n&quot;;<br>    <span class="hljs-keyword">if</span>(n&lt;=x)&#123;<br>        <span class="hljs-type">int</span> res=<span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> tp=x;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            res*=tp;<br>            tp<span class="hljs-comment">--;</span><br>        &#125;<br>        ans+=res;<br>        //cout&lt;&lt;&quot;ans=&quot;&lt;&lt;ans&lt;&lt;&quot;\n&quot;;<br>        <span class="hljs-type">int</span> t1=<span class="hljs-number">1</span>,t2=<span class="hljs-number">1</span>;<br>        tp=x;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>            t1*=tp;<br>            tp<span class="hljs-comment">--;</span><br>            t2*=j;<br>        &#125;<br>        res=t1/t2;<br>        ans-=res;<br>    &#125;<br>    cout&lt;&lt;ans&lt;&lt;&quot;\n&quot;;<br>&#125;<br><br>signed main() &#123;<br>    init();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br>    cin&gt;&gt;tt;<br>    <span class="hljs-keyword">while</span>(tt<span class="hljs-comment">--)&#123;</span><br>        solve();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>找规律,发现在二进制下,高位的1和低位的1相减后可以把中间除了高位全变成1,那用x的最高位的1和y的最低位的1构造c,其他的位1全部放在相同位置即可,注意具体构造方法不同时的特判a为0,b为0的情况</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn =<span class="hljs-number">1e6</span>+<span class="hljs-number">5</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> x[maxn];<br><span class="hljs-type">int</span> y[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> a,b,c;<br>    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br>    <span class="hljs-keyword">if</span>(a==<span class="hljs-number">0</span>||b==<span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">if</span>(c!=<span class="hljs-number">0</span>)cout&lt;&lt;<span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=a;i++)x[i]=<span class="hljs-number">1</span>,y[i]=<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=a+b;i++)cout&lt;&lt;x[i];<br>            cout&lt;&lt;endl;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=a+b;i++)cout&lt;&lt;y[i];<br>        &#125;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(c==<span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=a;i++)x[i]=<span class="hljs-number">1</span>,y[i]=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=a+b;i++)cout&lt;&lt;x[i];<br>        cout&lt;&lt;endl;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=a+b;i++)cout&lt;&lt;y[i];<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>+c&gt;(a+b))&#123;<br>        cout&lt;&lt;<span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=a+b;i++)&#123;<br>        x[i]=<span class="hljs-number">-1</span>;<br>        y[i]=<span class="hljs-number">-1</span>;<br>    &#125;<br>    x[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>    x[<span class="hljs-number">1</span>+c]=<span class="hljs-number">0</span>;<br>    y[<span class="hljs-number">1</span>+c]=<span class="hljs-number">1</span>;<br>    y[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> tot=a<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=a+b;i++)&#123;<br>        <span class="hljs-keyword">if</span>(x[i]==<span class="hljs-number">-1</span>&amp;&amp;y[i]==<span class="hljs-number">-1</span>&amp;&amp;tot)&#123;<br>            x[i]=<span class="hljs-number">1</span>;<br>            y[i]=<span class="hljs-number">1</span>;<br>            tot--;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x[i]==<span class="hljs-number">-1</span>&amp;&amp;y[i]==<span class="hljs-number">-1</span>)&#123;<br>            x[i]=<span class="hljs-number">0</span>;<br>            y[i]=<span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=a+b;i++)cout&lt;&lt;x[i];<br>    cout&lt;&lt;endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=a+b;i++)cout&lt;&lt;y[i];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//    init();</span><br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="G-1"><a href="#G-1" class="headerlink" title="G"></a>G</h2><p>观察得到两个性质</p><p>1.一个点如果是黑点那该点的子三角形也会全是黑点</p><p>2.如果两个子三角形有交集,那两个子三角形会合并成一个以两个子三角形的左右底边界为底的大三角形.</p><p>即对原本的黑点投影到底边,根据该黑点的坐标可以在底边投影一段区间,只要两黑点投影出来的区间有交集,那这两个黑点的子三角形就会合并,对答案的贡献就是以合并区间后长度为底的三角形(根据长度等差数列求点数).所有点都投影之后从前往后合并区间即可.投影操作和合并区间可以用差分前缀和,每次取最长的连续一段有数的就行.</p><p>注意输入范围比较大,必须关同步</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn =<span class="hljs-number">1e6</span>+<span class="hljs-number">5</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> pre[maxn];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,k;<br>    cin&gt;&gt;n&gt;&gt;k;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)&#123;<br>        <span class="hljs-type">int</span> x,y;<br>        cin&gt;&gt;x&gt;&gt;y;<br>        pre[y]++;<br>        pre[<span class="hljs-built_in">min</span>(y+n-x+<span class="hljs-number">1</span>,n+<span class="hljs-number">1</span>)]--;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)pre[i]+=pre[i<span class="hljs-number">-1</span>];<br>    <span class="hljs-type">int</span> as=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-type">int</span> tot=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span>(pre[i]&gt;<span class="hljs-number">0</span>)&#123;<br>            tot++;<br>            i++;<br>        &#125;<br>        as+=(<span class="hljs-number">1</span>+tot)*tot/<span class="hljs-number">2</span>;<br>    &#125;<br>    cout&lt;&lt;as&lt;&lt;endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> tt=<span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span>(tt--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>补题</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>dsu on tree</title>
    <link href="/2022/11/22/dsu-on-tree/"/>
    <url>/2022/11/22/dsu-on-tree/</url>
    
    <content type="html"><![CDATA[<h1 id="dsu-on-tree"><a href="#dsu-on-tree" class="headerlink" title="dsu on tree"></a>dsu on tree</h1><h2 id="子树颜色种类"><a href="#子树颜色种类" class="headerlink" title="子树颜色种类"></a>子树颜色种类</h2><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include&lt;bits/stdc++.h&gt;<br>using namespace std;<br>#define int long long<br>#define <span class="hljs-symbol">LL</span> long long<br>const <span class="hljs-symbol">LL</span> mod = <span class="hljs-number">100003</span>;<br>const int maxn = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br>int a[maxn];<br>vector&lt;int&gt;vec[maxn];<br>int sz[maxn];<br>int son[maxn];<br>int f[maxn];<br>void dfs1(int st,int fa)&#123;<br>    sz[st]=<span class="hljs-number">1</span>;<br>    f[st]=fa;<br>    for(auto i:vec[st])&#123;<br>        if(i!=fa)&#123;<br>            dfs1(i,st);<br>            sz[st]+=sz[i];<br>            if(!son[st]||sz[i]&gt;sz[son[st]])&#123;<br>                son[st]=i;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br>int dfn=<span class="hljs-number">0</span>;<br>int <span class="hljs-symbol">L</span>[maxn],<span class="hljs-symbol">R</span>[maxn],idx[maxn],top[maxn];<br>void dfs2(int st,int tot)&#123;<br>    <span class="hljs-symbol">L</span>[st]=++dfn;<br>    idx[dfn]=st;<br>    top[st]=tot;<br>    if(son[st])dfs2(son[st],tot);<br>    for(auto i:vec[st])&#123;<br>        if(i!=f[st]&amp;&amp;i!=son[st])&#123;<br>            dfs2(i,i);<br>        &#125;<br>    &#125;<br>    <span class="hljs-symbol">R</span>[st]=dfn;<br>&#125;<br>int skp;<br>int now_as=<span class="hljs-number">0</span>;<br>int ans[maxn],cnt[maxn];<br>void get_data(int x,int op)&#123;<br>    for(int i=<span class="hljs-symbol">L</span>[x];i&lt;=<span class="hljs-symbol">R</span>[x];i++)&#123;<br>        if(idx[i]==skp)&#123;<br>            i=<span class="hljs-symbol">R</span>[idx[i]];<br>            continue;<br>        &#125;<br>        if(op) &#123;<br>            if (++cnt[a[idx[i]]] == <span class="hljs-number">1</span>)++now_as;<br>        &#125;<br>        else &#123;<br>            if (--cnt[a[idx[i]]] == <span class="hljs-number">0</span>)--now_as;<br>        &#125;<br>    &#125;<br>&#125;<br>void dsu(int st)&#123;<br>    for(auto i:vec[st])&#123;<br>        if(i!=f[st]&amp;&amp;i!=son[st])&#123;<br>            dsu(i);<br>        &#125;<br>    &#125;<br>    if(son[st])&#123;<br>        dsu(son[st]);<br>        skp=son[st];<br>    &#125;<br>    get_data(st,<span class="hljs-number">1</span>);<br>    ans[st]=now_as;<br>    if(st==top[st])&#123;<br>        skp=<span class="hljs-number">0</span>;<br>        get_data(st,<span class="hljs-number">0</span>);<br>    &#125;<br>    return ;<br>&#125;<br>void solve()&#123;<br>    int n;<br>    cin&gt;&gt;n;<br>    int q;<br>    cin&gt;&gt;q;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        son[i]=<span class="hljs-number">0</span>;<br>    &#125;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n<span class="hljs-number">-1</span>;i++)&#123;<br>        int u,v;<br>        cin&gt;&gt;u&gt;&gt;v;<br>        vec[u].push_back(v);<br>        vec[v].push_back(u);<br>    &#125;<br>    dfs1(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br>    dfs2(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>    dsu(<span class="hljs-number">1</span>);<br>//    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>//        cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;<span class="hljs-symbol">L</span>[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;<span class="hljs-symbol">R</span>[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;son[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;sz[i]&lt;&lt;endl;<br>//    &#125;<br>    while(q--)&#123;<br>        int x;<br>        cin&gt;&gt;x;<br>        cout&lt;&lt;ans[x]&lt;&lt;endl;<br>    &#125;<br>&#125;<br>signed main() &#123;<br>    int <span class="hljs-symbol">T</span>=<span class="hljs-number">1</span>;<br>    //    cin&gt;&gt;<span class="hljs-symbol">T</span>;<br>    while(<span class="hljs-symbol">T</span>--)&#123;<br>        solve();<br>    &#125;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>图的连通性</title>
    <link href="/2022/10/17/%E5%9B%BE%E7%9A%84%E8%BF%9E%E9%80%9A%E6%80%A7/"/>
    <url>/2022/10/17/%E5%9B%BE%E7%9A%84%E8%BF%9E%E9%80%9A%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="图的连通性"><a href="#图的连通性" class="headerlink" title="图的连通性"></a>图的连通性</h1><h2 id="tarjan求割点"><a href="#tarjan求割点" class="headerlink" title="tarjan求割点"></a>tarjan求割点</h2><h3 id="板子"><a href="#板子" class="headerlink" title="板子"></a>板子</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-type">int</span> head[maxn];<br>struct node&#123;<br>    <span class="hljs-type">int</span> <span class="hljs-keyword">to</span>,val,next;<br>&#125;;<br><span class="hljs-type">int</span> tot=<span class="hljs-number">0</span>;<br>node edge[maxn];<br><span class="hljs-type">void</span> <span class="hljs-keyword">add</span>(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> v,<span class="hljs-type">int</span> val)&#123;<br>    edge[tot].<span class="hljs-keyword">to</span>=v;<br>    edge[tot].val=val;<br>    edge[tot].next=head[u];<br>    head[u]=tot++;<br>&#125;<br><span class="hljs-type">int</span> dfn[maxn];<br><span class="hljs-type">int</span> low[maxn];<br><span class="hljs-type">int</span> boo[maxn];<br><span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> root;<br><span class="hljs-type">void</span> tarjan(<span class="hljs-type">int</span> x)&#123;<br>    dfn[x]=low[x]=++cnt;<br>    <span class="hljs-type">int</span> flag=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=head[x];i!=<span class="hljs-number">-1</span>;i=edge[i].next)&#123;<br>        <span class="hljs-type">int</span> y=edge[i].<span class="hljs-keyword">to</span>;<br>        <span class="hljs-keyword">if</span>(!dfn[y])&#123;<br>            tarjan(y);<br>            low[x]=min(low[x],low[y]);//子树最小low<br>            <span class="hljs-keyword">if</span>(low[y]&gt;=dfn[x])&#123;<br>                flag++;<br>                <span class="hljs-keyword">if</span>(x!=root&amp;&amp;flag&gt;<span class="hljs-number">1</span>)boo[x]=<span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span> low[x]=min(low[x],dfn[y]);<br>    &#125;<br>&#125;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">void</span> solve()&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(!dfn[i])&#123;<br>            tarjan(i);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>网络流</title>
    <link href="/2022/10/14/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    <url>/2022/10/14/%E7%BD%91%E7%BB%9C%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<h1 id="最大流"><a href="#最大流" class="headerlink" title="最大流"></a>最大流</h1><h2 id="dinic"><a href="#dinic" class="headerlink" title="dinic"></a>dinic</h2><h3 id="板子"><a href="#板子" class="headerlink" title="板子"></a>板子</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><span class="hljs-keyword">using</span> namespace std;<br>const <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e5</span>+<span class="hljs-number">3</span>;<br><span class="hljs-type">int</span> d[maxn];<br>vector&lt;<span class="hljs-type">int</span>&gt;vec[maxn];<br><span class="hljs-type">int</span> head[maxn];<br><span class="hljs-type">int</span> nxt[maxn];<br><span class="hljs-type">int</span> tot=<span class="hljs-number">0</span>;<br>struct node&#123;<br>    <span class="hljs-type">int</span> <span class="hljs-keyword">to</span>,val;<br>&#125;;<br>node edge[<span class="hljs-number">2</span>*maxn];<br><span class="hljs-type">void</span> <span class="hljs-keyword">add</span>(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> v,<span class="hljs-type">int</span> z)&#123;<br>    edge[tot].<span class="hljs-keyword">to</span>=v,edge[tot].val=z,nxt[tot]=head[u],head[u]=tot++;<br>    edge[tot].<span class="hljs-keyword">to</span>=u,edge[tot].val=<span class="hljs-number">0</span>,nxt[tot]=head[v],head[v]=tot++;<br>&#125;<br><span class="hljs-type">bool</span> MakeLevel(<span class="hljs-type">int</span> s,<span class="hljs-type">int</span> t)&#123;<br>    memset(d,<span class="hljs-number">0</span>,sizeof(d));<br>    d[s]=<span class="hljs-number">1</span>;<br>    queue&lt;<span class="hljs-type">int</span>&gt;q;<br>    q.push(s);<br>    <span class="hljs-keyword">while</span>(!q.empty())&#123;<br>        <span class="hljs-type">int</span> now = q.front();<br>        q.pop();<br>        <span class="hljs-keyword">if</span>(now==t)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=head[now];~i;i=nxt[i])&#123;<br>            <span class="hljs-keyword">if</span>(edge[i].val&amp;&amp;!d[edge[i].<span class="hljs-keyword">to</span>])&#123;<br>                q.push(edge[i].<span class="hljs-keyword">to</span>);<br>                d[i]=d[now]+<span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-type">int</span> dfs(<span class="hljs-type">int</span> x ,<span class="hljs-type">int</span> flow,<span class="hljs-type">int</span> t)&#123;<br>    <span class="hljs-keyword">if</span>(x==t)<span class="hljs-keyword">return</span> flow;<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=head[x];~i;i=nxt[i])&#123;<br>        <span class="hljs-keyword">if</span>((edge[i].val!=<span class="hljs-number">0</span>)&amp;&amp;(d[edge[i].<span class="hljs-keyword">to</span>]==d[x]+<span class="hljs-number">1</span>))&#123;<br>            <span class="hljs-type">int</span> tmp=dfs(edge[i].<span class="hljs-keyword">to</span>,min(flow-sum,edge[i].val),t);<br>            edge[i].val-=tmp;<br>            edge[i^<span class="hljs-number">1</span>].val+=tmp;<br>            sum+=tmp;<br>            <span class="hljs-keyword">if</span>(sum==flow)<span class="hljs-keyword">return</span> sum;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> sum;<br>&#125;<br><span class="hljs-type">int</span> main() &#123;<br>    <span class="hljs-type">int</span> s,t;<br>    <span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(MakeLevel(s,t))&#123;<br>        ans+=dfs(s,<span class="hljs-number">0x3f3f3f3f</span>,t);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h2 id="ISAP"><a href="#ISAP" class="headerlink" title="ISAP"></a>ISAP</h2><h3 id="板子-1"><a href="#板子-1" class="headerlink" title="板子"></a>板子</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-meta">#include &lt;bits/stdc++.h&gt;</span><br><span class="hljs-keyword">using</span> namespace std;<br>const <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e5</span>+<span class="hljs-number">3</span>;<br><span class="hljs-type">int</span> d[maxn];<br>vector&lt;<span class="hljs-type">int</span>&gt;vec[maxn];<br><span class="hljs-type">int</span> head[maxn];<br><span class="hljs-type">int</span> nxt[maxn];<br><span class="hljs-type">int</span> tot=<span class="hljs-number">0</span>;<br>struct node&#123;<br>    <span class="hljs-type">int</span> <span class="hljs-keyword">to</span>,val;<br>&#125;;<br>node edge[<span class="hljs-number">2</span>*maxn];<br><span class="hljs-type">void</span> <span class="hljs-keyword">add</span>(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> v,<span class="hljs-type">int</span> z)&#123;<br>    edge[tot].<span class="hljs-keyword">to</span>=v,edge[tot].val=z,nxt[tot]=head[u],head[u]=tot++;<br>    edge[tot].<span class="hljs-keyword">to</span>=u,edge[tot].val=<span class="hljs-number">0</span>,nxt[tot]=head[v],head[v]=tot++;<br>&#125;<br><span class="hljs-type">bool</span> MakeLevel(<span class="hljs-type">int</span> s,<span class="hljs-type">int</span> t)&#123;<br>    memset(d,<span class="hljs-number">0</span>,sizeof(d));<br>    d[s]=<span class="hljs-number">1</span>;<br>    queue&lt;<span class="hljs-type">int</span>&gt;q;<br>    q.push(s);<br>    <span class="hljs-keyword">while</span>(!q.empty())&#123;<br>        <span class="hljs-type">int</span> now = q.front();<br>        q.pop();<br>        <span class="hljs-keyword">if</span>(now==t)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=head[now];~i;i=nxt[i])&#123;<br>            <span class="hljs-keyword">if</span>(edge[i].val&amp;&amp;!d[edge[i].<span class="hljs-keyword">to</span>])&#123;<br>                q.push(edge[i].<span class="hljs-keyword">to</span>);<br>                d[i]=d[now]+<span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-type">int</span> S,M;<br><span class="hljs-type">int</span> cntd[maxn];<br><span class="hljs-type">int</span> dfs(<span class="hljs-type">int</span> x ,<span class="hljs-type">int</span> flow,<span class="hljs-type">int</span> t)&#123;<br>    <span class="hljs-keyword">if</span>(x==t)<span class="hljs-keyword">return</span> flow;<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=head[x];~i;i=nxt[i])&#123;<br>        <span class="hljs-keyword">if</span>(edge[i].val&amp;&amp;(d[x]==d[edge[i].<span class="hljs-keyword">to</span>]+<span class="hljs-number">1</span>))&#123;<br>            <span class="hljs-type">int</span> tmp=dfs(i,min(edge[i].val,flow-sum),t);<br>            edge[i].val-=tmp;<br>            edge[i^<span class="hljs-number">1</span>].val+=tmp;<br>            sum+=tmp;<br>            <span class="hljs-keyword">if</span>(sum==flow)<span class="hljs-keyword">return</span> sum;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(d[S]&gt;=M)<span class="hljs-keyword">return</span> sum;<br>    cntd[d[x]]<span class="hljs-comment">--;</span><br>    <span class="hljs-keyword">if</span>(!cntd[d[x]])d[S]=M;<br>    d[x]++;<br>    cntd[d[x]]++;<br>    <span class="hljs-keyword">return</span> sum;<br>&#125;<br><span class="hljs-type">int</span> main() &#123;<br>    <span class="hljs-type">int</span> s,t;<br>    <span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br>    S=s;<br>    MakeLevel(s,t);<br>    <span class="hljs-keyword">while</span>(d[S]&lt;M)&#123;<br>        ans+=dfs(s,<span class="hljs-number">0x3f3f3f3f</span>,t);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>几何板子</title>
    <link href="/2022/09/03/%E5%87%A0%E4%BD%95%E6%9D%BF%E5%AD%90/"/>
    <url>/2022/09/03/%E5%87%A0%E4%BD%95%E6%9D%BF%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<h1 id="几何板子"><a href="#几何板子" class="headerlink" title="几何板子"></a>几何板子</h1><h2 id="判断是否是凸多边形"><a href="#判断是否是凸多边形" class="headerlink" title="判断是否是凸多边形"></a>判断是否是凸多边形</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> endl <span class="hljs-string">&quot;\n&quot;</span></span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">998244353</span>;<br><span class="hljs-type">int</span> x[<span class="hljs-number">10</span>];<br><span class="hljs-type">int</span> y[<span class="hljs-number">10</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">4</span>;i++)cin&gt;&gt;x[i]&gt;&gt;y[i];<br>    x[<span class="hljs-number">5</span>]=x[<span class="hljs-number">1</span>];<br>    y[<span class="hljs-number">5</span>]=y[<span class="hljs-number">1</span>];<br>    x[<span class="hljs-number">6</span>]=x[<span class="hljs-number">2</span>];<br>    y[<span class="hljs-number">6</span>]=y[<span class="hljs-number">2</span>];<br><span class="hljs-comment">//    x[5]=x[1];</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">3</span>;i&lt;=<span class="hljs-number">6</span>;i++)&#123;<br>        <span class="hljs-type">int</span> tmp=(x[i]-x[i<span class="hljs-number">-2</span>])*(y[i<span class="hljs-number">-1</span>]-y[i<span class="hljs-number">-2</span>])-(x[i<span class="hljs-number">-1</span>]-x[i<span class="hljs-number">-2</span>])*(y[i]-y[i<span class="hljs-number">-2</span>]);<br>        <span class="hljs-keyword">if</span>(tmp&gt;<span class="hljs-number">0</span>)&#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//    ios::sync_with_stdio(false);</span><br><span class="hljs-comment">//    cin.tie(0), cout.tie(0);</span><br>    <span class="hljs-type">int</span> T=<span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; T;</span><br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>树链剖分</title>
    <link href="/2022/08/08/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    <url>/2022/08/08/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/</url>
    
    <content type="html"><![CDATA[<h1 id="树链剖分"><a href="#树链剖分" class="headerlink" title="树链剖分"></a>树链剖分</h1><h2 id="板子"><a href="#板子" class="headerlink" title="板子"></a>板子</h2><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs inform7">int sz<span class="hljs-comment">[maxn]</span>;<br>int fa<span class="hljs-comment">[maxn]</span>;<br>int son<span class="hljs-comment">[maxn]</span>;<br>int depth<span class="hljs-comment">[maxn]</span>;<br>vector&lt;int&gt;vec<span class="hljs-comment">[maxn]</span>;<br>void dfs1(int st,int f,int deep)&#123;<br>    sz<span class="hljs-comment">[st]</span>=1;<br>    fa<span class="hljs-comment">[st]</span>=f;<br>    depth<span class="hljs-comment">[st]</span>=deep;<br>    for(auto i:vec<span class="hljs-comment">[st]</span>)&#123;<br>        if(i!=f)&#123;<br>            dfs1(i,st,deep+1);<br>            sz<span class="hljs-comment">[st]</span>+=sz<span class="hljs-comment">[i]</span>;<br>            if(son<span class="hljs-comment">[st]</span>==0||sz<span class="hljs-comment">[son<span class="hljs-comment">[st]</span>]</span>&lt;sz<span class="hljs-comment">[i]</span>)&#123;<br>                son<span class="hljs-comment">[st]</span>=i;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br>int id<span class="hljs-comment">[maxn]</span>;<br>int idx<span class="hljs-comment">[maxn]</span>;<br>int dfn=0;<br>int top<span class="hljs-comment">[maxn]</span>;<br>int R<span class="hljs-comment">[maxn]</span>;<br>void dfs2(int st,int f)&#123;<br>    id<span class="hljs-comment">[st]</span>=++dfn;<br>    idx<span class="hljs-comment">[st]</span>=dfn;<br>    top<span class="hljs-comment">[st]</span>=f;<br>    if(son<span class="hljs-comment">[st]</span>)dfs2(son<span class="hljs-comment">[st]</span>,f);<br>    for(auto i:vec<span class="hljs-comment">[st]</span>)&#123;<br>        if(i!=son<span class="hljs-comment">[st]</span>&amp;&amp;i!=fa<span class="hljs-comment">[i]</span>)&#123;<br>            dfs2(i,i);<br>        &#125;<br>    &#125;<br>&#125;<br>int Lca(int x,int y)&#123;<br>    while(top<span class="hljs-comment">[x]</span>!=top<span class="hljs-comment">[y]</span>)&#123;<br>        if(depth<span class="hljs-comment">[x]</span>&lt;depth<span class="hljs-comment">[y]</span>)swap(x,y);<br>        x=fa<span class="hljs-comment">[top<span class="hljs-comment">[x]</span>]</span>;<br>    &#125;<br>    if(depth<span class="hljs-comment">[x]</span>&lt;depth<span class="hljs-comment">[y]</span>)swap(x,y);<br>    return y;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Eezie-and-Pie"><a href="#Eezie-and-Pie" class="headerlink" title="Eezie and Pie"></a>Eezie and Pie</h2><p><a href="https://ac.nowcoder.com/acm/contest/33191/B">题源</a></p><p>题意 :给定一颗树,每个端点都有对应的能量,每个端点都可以消耗1能量来向上一个节点送pie,询问每个端点最多能被送几个pie</p><p>解析 :最朴素的想法肯定是对每一个端点都消耗完能量来向父节点送派,遇到的问题为如果每个点都往上爬它对应能量数量的点,那复杂度将为O(n2),那如果可以将每个点往上爬更新父节点的时间代价降为log级,就可以用最朴素的想法实现该题.那只要树链剖分后维护一个当前所剩能量power,往上跳点时比较power和当前所在点now与链首top[now]的距离(可以用id[now]和id[top[now]]来O(1)实现),据题意模拟,因为相当于每次会对一段区间进行+1处理,所以用前缀和处理区间操作即可.具体实现上要注意根节点的处理,在处理时要注意1号节点往上更新时会更新到0号节点,要将更新0号节点的操作变为更新1号节点.还要注意每个点对自身送pie是不需要消耗能量的,初始可以将pre[1]设成1(前缀和后相当于每个点答案设成了1),在树剖模拟时就不用处理自身的点了(因为自身点不需要代价,因此模拟可能会有点多要考虑的).</p><p>代码: </p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include &lt;bits/stdc++.h&gt;<br>#include&lt;stack&gt;<br>#include&lt;vector&gt;<br>using namespace std;<br>const int maxn = <span class="hljs-number">2e6</span>+<span class="hljs-number">5</span>;<br>int sz[maxn];<br>int son[maxn];<br>int fa[maxn];<br>vector&lt;int&gt;vec[maxn];<br>void dfs1(int st,int f)&#123;<br>    sz[st]=<span class="hljs-number">1</span>;<br>    fa[st]=f;<br>    for(auto i:vec[st])&#123;<br>        if(i!=f)&#123;<br>            dfs1(i,st);<br>            sz[st]+=sz[i];<br>            if(son[st]==<span class="hljs-number">0</span>||sz[son[st]]&lt;sz[i])son[st]=i;<br>        &#125;                           <br>    &#125;<br>&#125;<br>int dfn=<span class="hljs-number">0</span>;<br>int id[maxn];<br>int idx[maxn];<br>int top[maxn];<br>void dfs2(int st,int f)&#123;<br>    id[st]=++dfn;<br>    idx[dfn]=st;<br>    top[st]=f;<br>    if(son[st])dfs2(son[st],f);<br>    for(auto i:vec[st])&#123;<br>        if(i!=fa[st]&amp;&amp;i!=son[st])&#123;<br>            dfs2(i,i);<br>        &#125;<br>    &#125;<br>&#125;<br>int d[maxn];<br>int pre[maxn];<br>void <span class="hljs-symbol">Lca</span>(int x)&#123;<br>    int power=d[x];<br>    int now=fa[x];<br>//     pre[x]++;<br>    while(now!=<span class="hljs-number">0</span>&amp;&amp;power&gt;<span class="hljs-number">0</span>)&#123;<br>        if(power&gt;=id[now]-id[top[now]]+<span class="hljs-number">1</span>)&#123;<br>            power-=(id[now]-id[top[now]]+<span class="hljs-number">1</span>);<br>//              cout&lt;&lt;x&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;id[top[now]]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;id[now]&lt;&lt;<span class="hljs-string">&quot; X&quot;</span>&lt;&lt;endl;<br>            pre[id[now]+<span class="hljs-number">1</span>]--;<br>            pre[id[top[now]]]++;<br>        &#125;<br>        else&#123;<br>//             cout&lt;&lt;x&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;id[now-power+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;id[now]&lt;&lt;<span class="hljs-string">&quot; Y&quot;</span>&lt;&lt;endl;<br>            pre[id[now]-power+<span class="hljs-number">1</span>]++;<br>            pre[id[now]+<span class="hljs-number">1</span>]--;<br>            break;<br>        &#125;<br>        now=fa[top[now]];<br>    &#125;<br>&#125;<br>vector&lt;int&gt;as;<br>void solve() &#123;<br>    memset(pre,<span class="hljs-number">0</span>,sizeof(pre));<br>    int n;<br>    cin&gt;&gt;n;<br>    as.clear();<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)vec[i].clear();<br>    for(int i=<span class="hljs-number">2</span>;i&lt;=n;i++)&#123;<br>        int t1,t2;<br>        cin&gt;&gt;t1&gt;&gt;t2;<br>        vec[t1].push_back(t2);<br>        vec[t2].push_back(t1);<br>    &#125;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;d[i];<br>    dfs1(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>    dfs2(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>    top[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>    fa[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>    pre[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>    id[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<br>    id[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-symbol">Lca</span>(i);<br>    &#125;<br>    for(int i=<span class="hljs-number">2</span>;i&lt;=n;i++)&#123;<br>        pre[i]+=pre[i<span class="hljs-number">-1</span>];<br>    &#125;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;n;i++)&#123;<br>        cout&lt;&lt;pre[id[i]]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>    &#125;<br>    cout&lt;&lt;pre[id[n]]&lt;&lt;endl;<br>&#125;<br><br>int main() &#123;<br>    ios::sync_with_stdio(false);<br>    cin.tie(<span class="hljs-number">0</span>), cout.tie(<span class="hljs-number">0</span>);<br>    int <span class="hljs-symbol">T</span> = <span class="hljs-number">1</span>;<br>    while (<span class="hljs-symbol">T</span>--) &#123;<br>        solve();<br>    &#125;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces  补题</title>
    <link href="/2022/08/03/Codeforces%E8%A1%A5%E9%A2%98/"/>
    <url>/2022/08/03/Codeforces%E8%A1%A5%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="Codeforces-补题"><a href="#Codeforces-补题" class="headerlink" title="Codeforces  补题"></a>Codeforces  补题</h1><h2 id="Color-with-Occurrences"><a href="#Color-with-Occurrences" class="headerlink" title="Color with Occurrences"></a>Color with Occurrences</h2><p>题源 : <a href="https://codeforces.com/contest/1714/problem/D">Color with Occurrences</a></p><p>题目大意 : 给一个原字符串,再给若干个长度小于原串的子串,询问最少由几个子串拼成原串(有拼不出来的情况)</p><p>思路 : 题目数据范围给得小,往暴力求解的方向想,从原串起点出发,尽可能选能覆盖最多原串尚未覆盖的子串,对于原串每一个点,都求一次选择以该点开头的子串最多覆盖到原串的哪里,记一个该点选子串所能覆盖原串最远覆盖距离tr;定义一个原串最远可覆盖距离r;原串已被覆盖距离cover.当枚举的该点</p><p>坐标大于已被覆盖距离cover时,即需要在前面枚举的点中提取一个可行的最远覆盖距离来更新已覆盖距离,每个点枚举tr时,r更新为r与tr的最大值,即r为前面枚举的点所能覆盖的最长距离,当更新cover时,如果前面点所能覆盖的最远距离r都要小于等于 该点坐标i(即没办法将已覆盖距离往后延长,后面的点没办法用子串覆盖到),那就是无法构造原串,输出-1; 若可往后覆盖,那将cover更新为前面点所能覆盖到的最长距离r,只有cover更新时才需要记录答案,在更新最长覆盖距离r时可以记下当前题干所需的所选子串种类,当前点坐标,那cover更新时就可以记下</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;set&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;map&gt;</span></span><br><span class="hljs-comment">//#define int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">1e3</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br>string a[maxn];<br>vector&lt;pair&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;&gt; vec;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    string s;<br>    cin &gt;&gt; s;<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    vec.<span class="hljs-built_in">clear</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        cin &gt;&gt; a[i];<br>    &#125;<br>    <span class="hljs-type">int</span> sz = s.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-type">int</span> cover = <span class="hljs-number">-1</span>;                <span class="hljs-type">int</span> tloc = <span class="hljs-number">-1</span>;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, r = <span class="hljs-number">-1</span>, tidx = <span class="hljs-number">-1</span>; i &lt; sz &amp;&amp; r &lt; sz; i++) &#123;<br>        <span class="hljs-type">int</span> ttidx = <span class="hljs-number">-1</span>;<br>        <span class="hljs-type">int</span> tr = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; j++) &#123;<br>            <span class="hljs-keyword">if</span> (i + a[j].<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span> &lt; sz &amp;&amp; s.<span class="hljs-built_in">substr</span>(i, a[j].<span class="hljs-built_in">size</span>()) == a[j] &amp;&amp; i + a[j].<span class="hljs-built_in">size</span>() &gt; tr) &#123;<br>                ttidx = j;<br>                tr = i + a[j].<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ttidx != <span class="hljs-number">-1</span> &amp;&amp; tr &gt; r) &#123;<br>            r = tr;<br>            tidx=ttidx;<br>            tloc=i+<span class="hljs-number">1</span>;<br>            <span class="hljs-comment">//            vec.push_back(&#123;tidx, i + 1&#125;);</span><br>        &#125;<br>        <span class="hljs-keyword">if</span> (i &gt; cover) &#123;<br>            <span class="hljs-keyword">if</span>(i &gt; r)&#123;<br>                cout &lt;&lt; <span class="hljs-string">&quot;-1&quot;</span> &lt;&lt; endl;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            vec.<span class="hljs-built_in">push_back</span>(&#123;tidx,tloc&#125;);<br>            cover=r;<br>        &#125;<br>    &#125;<br>    cout &lt;&lt; vec.<span class="hljs-built_in">size</span>() &lt;&lt; endl;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> i:vec) &#123;<br>        cout &lt;&lt; i.first &lt;&lt; <span class="hljs-string">&quot; &quot;</span> &lt;&lt; i.second &lt;&lt; endl;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><hr><h2 id="Build-Permutation"><a href="#Build-Permutation" class="headerlink" title="Build Permutation"></a>Build Permutation</h2><p><a href="https://codeforces.com/contest/1713/problem/C">题源</a></p><p>题意: 给定一个n,要求对于0到n-1来说,构造一个同样时0到n-1的一个排列,对应位相加为完全平方数</p><p>解析: 那对于n-1来说,大于n-1且距离最近的完全平方数与n-1的差值一定小于n-1,从大到小没有操作过的数进行操作,当前数x找到最近的完全平方数i后,x+(i-x)就为完全平方数,x往前数i-x个数也可变为完全平方数i(i-x+x),再往未操作的数(i-x-1)开始进行该操作</p><p>代码: </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stack&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> maxn = <span class="hljs-number">2e6</span>+<span class="hljs-number">5</span>;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">Check</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>    <span class="hljs-type">int</span> tc=<span class="hljs-built_in">sqrt</span>(x);<br>    <span class="hljs-keyword">return</span> tc*tc==x;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(x&lt;=<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> ;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=x;;i++)&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Check</span>(i))&#123;<br>            <span class="hljs-type">int</span> t=(i-x);<br>            <span class="hljs-built_in">solve</span>(t<span class="hljs-number">-1</span>);<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=x;j&gt;=t;j--)&#123;<br>                cout&lt;&lt;j&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-comment">//                t--;</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> ;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;<br>    cin&gt;&gt;T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-type">int</span> n;<br>        cin&gt;&gt;n;<br>        <span class="hljs-built_in">solve</span>(n<span class="hljs-number">-1</span>);<br>        cout&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>补题</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>二分图算法整理</title>
    <link href="/2022/07/30/%E4%BA%8C%E5%88%86%E5%9B%BE%E7%AE%97%E6%B3%95%E6%95%B4%E7%90%86/"/>
    <url>/2022/07/30/%E4%BA%8C%E5%88%86%E5%9B%BE%E7%AE%97%E6%B3%95%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="二分图算法整理"><a href="#二分图算法整理" class="headerlink" title="二分图算法整理"></a>二分图算法整理</h1><h2 id="二分图黑白染色"><a href="#二分图黑白染色" class="headerlink" title="二分图黑白染色"></a>二分图黑白染色</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-type">int</span> col[maxn];<br>vector&lt;<span class="hljs-type">int</span>&gt;vec[maxn];<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> st,<span class="hljs-type">int</span> fa,<span class="hljs-type">int</span> ty)</span></span>&#123;<br>    col[st]=ty;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:vec[st])&#123;<br>        <span class="hljs-keyword">if</span>(i!=fa)&#123;<br>            <span class="hljs-keyword">if</span>(!col[i])&#123;<br>                <span class="hljs-built_in">dfs</span>(i,st,ty%<span class="hljs-number">2</span>+<span class="hljs-number">1</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">if</span>(col[i]==ty)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>按黑白双色深搜即可</p><hr><h2 id="二分图最大匹配-增广路算法"><a href="#二分图最大匹配-增广路算法" class="headerlink" title="二分图最大匹配 增广路算法"></a>二分图最大匹配 增广路算法</h2><h3 id="增广路算法代码"><a href="#增广路算法代码" class="headerlink" title="增广路算法代码"></a>增广路算法代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++">vector&lt;<span class="hljs-type">int</span>&gt;vec[maxn];<br><span class="hljs-type">int</span> link[maxn];<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> st)</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:vec[st])&#123;<br>        <span class="hljs-keyword">if</span>(!vis[i])&#123;<br>            <span class="hljs-keyword">if</span>(!link[i]||<span class="hljs-built_in">dfs</span>(i))&#123;<br>                link[i]=st;<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="增广路算法的解析"><a href="#增广路算法的解析" class="headerlink" title="增广路算法的解析"></a>增广路算法的解析</h3><p>主函数调用时对每一个点都调用一次连边的深搜,深搜一次代价为o(m),复杂度为O(n*m)</p><p>最小点覆盖等于最大匹配数</p><p>算法大意是在找增广路，一个点在向他所连边的点进行一次连边请求，如果连边的点没有被连过边，那直接将该点与连边点相连；如果连边的点已被其他点所连，那会让那个点去连其它没有连过的点，如果连接成功，则那个点和新进的点相连，初始点和连边点相连，在每一次连边都是这样处理，最后能有连接成功的就新进了一个点，如果访问了所有点都不行，那该点就连接失败</p><h2 id="二分图最优匹配-KM算法"><a href="#二分图最优匹配-KM算法" class="headerlink" title="二分图最优匹配  ＫＭ算法"></a>二分图最优匹配  ＫＭ算法</h2>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
